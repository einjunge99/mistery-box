{"version":3,"sources":["compiler/utils/Type.ts","compiler/abstract/Expression.ts","compiler/abstract/Instruction.ts","interpreter/Interpreter.ts","interpreter/Abstract/Instruction.ts","compiler/symbol/SymbolFunction.ts","compiler/symbol/Symbol.ts","compiler/Environment.ts","compiler/utils/LogArray.ts","compiler/actions/instruction/function/DeclareFunction.ts","interpreter/instruction/Function.ts","interpreter/instruction/Label.ts","grammar/grammar.js","compiler/utils/Param.ts","compiler/actions/instruction/transfer/Break.ts","compiler/actions/instruction/transfer/Continue.ts","compiler/actions/instruction/transfer/Return.ts","compiler/actions/instruction/Call.ts","compiler/actions/instruction/Console.ts","compiler/actions/instruction/Statement.ts","compiler/actions/expression/logical/And.ts","compiler/actions/expression/logical/Or.ts","compiler/actions/expression/logical/Not.ts","compiler/actions/expression/arithmetic/Plus.ts","compiler/actions/expression/arithmetic/Mul.ts","compiler/actions/expression/arithmetic/Div.ts","compiler/actions/expression/arithmetic/Minus.ts","compiler/actions/expression/arithmetic/Neg.ts","compiler/actions/expression/arithmetic/Inc.ts","compiler/actions/expression/arithmetic/Dec.ts","compiler/actions/expression/relational/Equals.ts","compiler/actions/expression/relational/NotEquals.ts","compiler/actions/expression/relational/Less.ts","compiler/actions/expression/relational/Great.ts","compiler/actions/expression/literal/Primitive.ts","compiler/actions/expression/literal/Complex.ts","compiler/actions/instruction/variable/DeclareVariable.ts","compiler/actions/instruction/variable/AssignVariable.ts","compiler/actions/expression/access/AccessVariable.ts","compiler/actions/expression/access/AccessFunction.ts","compiler/actions/instruction/control/DoWhile.ts","compiler/actions/instruction/control/For.ts","compiler/Generator.ts","compiler/actions/instruction/control/ForBody.ts","compiler/actions/instruction/control/If.ts","compiler/actions/instruction/control/While.ts","grammar/interpreter.js","interpreter/instruction/Conditional.ts","interpreter/instruction/Goto.ts","interpreter/instruction/Access.ts","interpreter/instruction/Print.ts","interpreter/instruction/Return.ts","interpreter/instruction/Expression.ts","compiler/Compiler.ts","views/Home/Home.tsx","App.tsx","index.tsx","compiler/utils/Error.ts","compiler/utils/Return.ts"],"names":["Types","Type","type","this","getType","str","NUMBER","STRING","BOOLEAN","VOID","Expression","line","column","trueLabel","falseLabel","left","right","Instruction","parser","require","Interpreter","functions","currentIndex","stack","heap","variables","logs","input","console","end","Map","setupFunctions","node","parse","error","state","message","forEach","e","i","FunctionC3D","push","getId","getLine","set","name","goForward","currentFunction","currentInstruction","getInstruction","getIndex","result","debug","ACCESS","functionIndex","instructionIndex","resetIndex","searchFunction","content","RETURN","pop","setIndex","GOTO","goto","goToLabel","label","relational","leftSearch","get","leftValue","undefined","rightSearch","rightValue","getRelationalResult","target","op","isStructure","splitted","split","targetSearch","targetValue","whichStructure","getArithmeticResult","cast","value","includes","String","fromCharCode","structure","startsWith","interpreter","InstructionC3D","SymbolFunction","func","id","size","params","length","Symbol","identifier","position","isConst","isGlobal","isHeap","Environment","previous","break","continue","return","actualFunction","ret","newVar","env","sym","has","Logs","Array","DeclareFunction","body","preCompile","validateParams","addFunction","ErrorTS","generator","Generator","getInstance","newEnv","symbolFunction","getFunction","returnlbl","newLabel","tempStorage","getTempStorage","setEnvironmentFunction","param","addVariable","clearTempStorage","auxCode","saveCode","clearPrevious","addBegin","compile","addLabel","addEnd","setCode","setTempStorage","Set","add","instr","Label","getLabel","LABEL","grammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","trace","yy","symbols_","terminals_","2","5","9","12","19","20","21","22","23","25","26","27","28","30","31","32","33","34","36","37","38","39","40","41","42","43","44","45","46","47","48","50","51","53","54","55","56","58","59","60","61","63","65","66","67","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","Call","first_line","first_column","Break","Continue","While","DoWhile","If","For","ForBody","Statement","Console","And","Or","Plus","Minus","Mul","Div","Great","Less","Equals","NotEquals","Neg","Not","Inc","Dec","Primitive","Complex","AssignVariable","AccessFunction","AccessVariable","ReturnTS","DeclareVariable","Param","table","3","4","6","7","8","10","11","13","14","15","16","17","18","49","52","57","62","1","24","29","35","68","64","defaultActions","97","140","146","parseError","hash","recoverable","Error","self","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","loc","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","log","process","exit","source","readFileSync","normalize","module","argv","enviorement","addGoto","Return","sameType","templabel","addSetStack","getValue","j","addPrint","addPrintTrue","addPrintFalse","addNextEnv","addCall","addNative","Natives","print_str","addPrevEnv","instructions","instruction","auxReturn","temp","tempAux","newTemporal","addExpression","freeTemp","concat_num_str","addGetStack","lblTemp","concat_str_num","concat_str_bool","tempBoolean","concat_bool_str","assign","addSetHeap","addIf","cmp_str","isLessEqual","lefType","rightType","operator","isGrtEqual","NULL","charCodeAt","nextHeap","access","compiled","newVariable","ptr","getVariable","paramsValues","saveTemps","registeredLength","incomingLength","compiledParam","registeredType","incomingType","recoverTemps","addTemp","addComment","temporal","code","natives","clearNatives","clear","getNatives","format","comment","delete","pos","u","native_concat","native_concat_str_bool","native_concat_bool_str","native_print_str","native_cmp_str","native_concat_num_str","native_concat_str_num","final","lblFor","elseIf","tempLbl","lblWhile","Conditional","Goto","AccessC3D","ExpressionC3D","Print","ReturnC3D","78","88","89","evaluateConditional","setOutput","CONSOLE","evaluateExpresssion","EXPRESSION","Compiler","output","clearCode","getFunctions","getCode","getTemporal","header","setTemp","Home","props","sleep","ms","Promise","resolve","setTimeout","handleCompile","a","toast","warning","compiler","success","getOutput","setState","isDebugging","handleBeautify","handleDebug","canMoveForward","currentLine","hasEnded","getEnd","getConsole","refs","editor","scrollToLine","getStack","getHeap","getVariables","handleEnd","finishExecution","handleStart","restart","handleInput","handleOutput","handleLine","origin","sessionRef","Beautify","beautify","session","getSession","resized","window","addEventListener","resize","bind","innerWidth","removeEventListener","renderStack","map","renderHeap","renderVariables","from","keys","key","href","className","onClick","style","opacity","ref","width","height","mode","theme","showPrintMargin","onChange","highlightActiveLine","editorProps","$blockScrolling","commands","bindKey","win","mac","exec","markers","startRow","startCol","endRow","endCol","Component","App","ReactDOM","render","StrictMode","document","getElementById","description","isTemp"],"mappings":"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","file":"static/js/main.8ccf50cc.chunk.js","sourcesContent":["export enum Types {\n    NUMBER = \"number\",\n    STRING = \"string\",\n    BOOLEAN = \"boolean\",\n    VOID = \"void\",\n    NULL = 'null'\n}\n\nexport class Type {\n    type: Types;\n    constructor(type: Types) {\n        this.type = type\n    }\n}\n\nexport function getType(str: string) {\n    switch (str) {\n        case 'number':\n            return new Type(Types.NUMBER)\n        case 'string':\n            return new Type(Types.STRING)\n        case 'boolean':\n            return new Type(Types.BOOLEAN)\n        case 'void':\n            return new Type(Types.VOID)\n    }\n}\n","import { Environment } from \"../Environment\";\nimport { Return } from \"../utils/Return\";\nimport { Type } from \"../utils/Type\";\n\nexport abstract class Expression {\n    trueLabel: string;\n    falseLabel: string;\n    line: number;\n    column: number;\n\n    constructor(line: number, column: number) {\n        this.trueLabel = this.falseLabel = \"\";\n        this.line = line;\n        this.column = column;\n    }\n\n    public sameType(left: Type, right: Type): boolean {\n        if (left.type === right.type) return true;\n        return false;\n      }    \n\n    public abstract compile(env: Environment): Return;\n\n}\n","import { Environment } from \"../Environment\";\nimport { Type } from \"../utils/Type\";\n\nexport abstract class Instruction {\n  line: number;\n  column: number;\n\n  constructor(line: number, column: number) {\n    this.line = line;\n    this.column = column;\n  }\n\n  public sameType(left: Type, right: Type): boolean {\n    if (left.type === right.type) return true;\n    return false;\n  }\n\n  public abstract compile(env: Environment): any;\n}\n","import { InstructionC3D } from \"./Abstract/Instruction\"\nimport { FunctionC3D } from \"./instruction/Function\"\nconst parser = require(\"../grammar/interpreter\");\nexport enum Type {\n    RETURN = 'return',\n    ACCESS = 'access',\n    GOTO = 'goto',\n    EXPRESSION = 'expression',\n    LABEL = 'label',\n    CONSOLE = 'console'\n}\n\nexport class Interpreter {\n    private static interpreter: Interpreter\n    private functions: FunctionC3D[]\n    private currentIndex: number\n    stack: number[]\n    heap: number[]\n    variables: Map<string, number>;\n    logs: any[]\n    input: string\n    console: string\n    end: boolean\n\n    private constructor() {\n        this.functions = []\n        this.currentIndex = 0\n        this.stack = []\n        this.heap = []\n        this.variables = new Map()\n        this.logs = []\n        this.input = ''\n        this.console = ''\n        this.end = false\n    }\n\n    public restart(input: string) {\n        this.input = input\n        this.functions = []\n        this.currentIndex = 0\n        this.stack = []\n        this.heap = []\n        this.variables = new Map()\n        this.logs = []\n        this.console = ''\n        this.end = false\n\n        return this.setupFunctions(input)\n    }\n\n    public static getInstance() {\n        return this.interpreter || (this.interpreter = new this())\n    }\n\n    public setupFunctions(input: string) {\n        let line: number = -1;\n        let node;\n        try {\n            node = parser.parse(input);\n        } catch (error) {\n            return { state: false, message: 'There was an error while generating your TAC!', line };\n        }\n        node.forEach((e: InstructionC3D, i: number) => {\n            if (e instanceof FunctionC3D) {\n                this.functions.push(e)\n                if (e.getId() === 'main') {\n                    line = e.getLine()\n                    this.currentIndex = i\n                }\n            }\n        });\n        this.variables.set('p', 0)\n        this.variables.set('h', 0)\n        if (line === -1) return { state: false, message: 'main function not found', line };\n        return { state: true, message: 'TAC generated successfully!', line };\n\n    }\n\n    private searchFunction(name: string) {\n        this.functions.forEach((e, i) => {\n            if (e.getId() === name) this.currentIndex = i\n        });\n    }\n\n    public finishExecution() {\n        let line = 0;\n        while (!this.end) {\n            line = this.goForward()\n        }\n        return line\n    }\n\n    public goForward() {\n        const currentFunction: FunctionC3D = this.functions[this.currentIndex]\n        const currentInstruction: InstructionC3D = currentFunction.getInstruction()\n        const i = currentFunction.getIndex()\n        const result = currentInstruction.debug()\n        if (result?.type === Type.ACCESS) {\n            this.logs.push({ functionIndex: this.currentIndex, instructionIndex: i })\n            currentFunction.resetIndex()\n            this.searchFunction(result.content)\n        }\n        else if (result?.type === Type.RETURN) {\n            if (currentFunction.getId() === 'main') { this.end = true; return currentInstruction.getLine() }\n            const { functionIndex, instructionIndex } = this.logs.pop()\n            this.currentIndex = functionIndex\n            this.functions[this.currentIndex].setIndex(instructionIndex)\n        }\n        else if (result?.type === Type.GOTO && result.content.goto) {\n            currentFunction.goToLabel(result.content.label)\n        }\n        return currentInstruction.getLine()\n    }\n\n    public evaluateConditional(left: string, relational: string, right: string): boolean {\n        const leftSearch = this.variables.get(left)\n        const leftValue = leftSearch !== undefined ? leftSearch : +left\n\n        const rightSearch = this.variables.get(right)\n        const rightValue = rightSearch !== undefined ? rightSearch : +right\n        return this.getRelationalResult(leftValue, rightValue, relational)\n    }\n\n    public evaluateExpresssion(target: string, left: string, right: string, op: string) {\n\n        const targetIsStructure: boolean = this.isStructure(target)\n        if (!targetIsStructure) {\n            const leftIsStructure = this.isStructure(left)\n            let leftSearch: number | undefined\n            let leftValue: number\n            if (leftIsStructure) {\n                const splitted = left.split(',')\n                leftSearch = this.variables.get(splitted[1])\n                leftValue = leftSearch !== undefined ? leftSearch : +splitted[1]\n                leftValue = this.whichStructure(left) ? this.heap[leftValue] : this.stack[leftValue]\n            }\n            else {\n                leftSearch = this.variables.get(left)\n                leftValue = leftSearch !== undefined ? leftSearch : +left\n            }\n            if (right === '') { this.variables.set(target, leftValue); return }\n            const rightSearch = this.variables.get(right)\n            const rightValue = rightSearch !== undefined ? rightSearch : +right\n            const result = this.getArithmeticResult(leftValue, rightValue, op)\n            this.variables.set(target, result); return\n        }\n\n        const leftSearch = this.variables.get(left)\n        const leftValue = leftSearch !== undefined ? leftSearch : +left\n        const splitted = target.split(',')\n        const targetSearch = this.variables.get(splitted[1])\n        const targetValue = targetSearch !== undefined ? targetSearch : +splitted[1]\n        this.whichStructure(target) ? this.heap[targetValue] = leftValue : this.stack[targetValue] = leftValue\n\n    }\n\n    private getRelationalResult(left: number, right: number, op: string): boolean {\n        switch (op) {\n            case '<=':\n                return left <= right\n            case '>=':\n                return left >= right\n            case '<':\n                return left < right\n            case '>':\n                return left > right\n            case '!=':\n                return left !== right\n            case '==':\n                return left === right\n        }\n        return false;\n    }\n\n    private getArithmeticResult(left: number, right: number, op: string): number {\n        switch (op) {\n            case '+':\n                return left + right\n            case '-':\n                return left - right\n            case '*':\n                return left * right\n            case '/':\n                return left / right\n        }\n        return 0;\n    }\n\n    public setOutput(cast: string, value: string) {\n        const leftSearch = this.variables.get(value)\n        const leftValue = leftSearch !== undefined ? leftSearch : +value\n        if (cast.includes('%f')) this.console += leftValue\n        if (cast.includes('%c')) this.console += String.fromCharCode(leftValue)\n    }\n\n    private isStructure(structure: string): boolean {\n        return structure.startsWith('Heap') || structure.startsWith('Stack')\n    }\n    private whichStructure(structure: string): boolean {\n        return structure.startsWith('Heap')\n    }\n    public getHeap() {\n        return this.heap\n    }\n    public getStack() {\n        return this.stack\n    }\n    public getVariables() {\n        return this.variables\n    }\n    public getConsole() {\n        return this.console\n    }\n\n    public getEnd() {\n        return this.end\n    }\n\n}","export abstract class InstructionC3D {\n    line: number;\n    column: number\n    constructor(line: number, column: number) {\n        this.line = line\n        this.column = column\n    }\n\n    public getLine() {\n        return this.line\n    }\n    public abstract debug(): any;\n}","import { DeclareFunction } from \"../actions/instruction/function/DeclareFunction\";\nimport { Param } from \"../utils/Param\";\nimport { Type } from \"../utils/Type\";\n\nexport class SymbolFunction {\n  type: Type;\n  id: string;\n  size: number;\n  params: Array<Param>;\n  column: number;\n  line: number;\n  constructor(func: DeclareFunction) {\n    this.type = func.type;\n    this.id = func.id;\n    this.size = func.params.length;\n    this.params = func.params;\n    this.column = func.column;\n    this.line = func.line;\n  }\n}\n","import { Type } from \"../utils/Type\";\n\nexport class Symbol {\n  type: Type;\n  identifier: string;\n  position: number;\n  isConst: boolean;\n  isGlobal: boolean;\n  isHeap: boolean\n  constructor(type: Type, identifier: string, position: number, isConst: boolean, isGlobal: boolean, isHeap: boolean = false) {\n    this.type = type;\n    this.identifier = identifier;\n    this.position = position;\n    this.isConst = isConst;\n    this.isGlobal = isGlobal;\n    this.isHeap = isHeap\n  }\n}\n","import { SymbolFunction } from \"./symbol/SymbolFunction\";\nimport { Symbol } from \"./symbol/Symbol\";\nimport { Type } from \"./utils/Type\";\nimport { DeclareFunction } from \"./actions/instruction/function/DeclareFunction\";\n\nexport class Environment {\n  public functions: Map<string, SymbolFunction>;\n  public variables: Map<string, Symbol>;\n  previous: Environment | null;\n  size: number;\n  break: string | null;\n  continue: string | null;\n  return: string | null;\n  actualFunction: SymbolFunction | null;\n\n  constructor(previous: Environment | null = null) {\n    this.functions = new Map();\n    this.variables = new Map();\n    this.previous = previous;\n    this.size = previous?.size || 0;\n    this.break = previous?.break || null;\n    this.return = previous?.return || null;\n    this.continue = previous?.continue || null;\n    this.actualFunction = previous?.actualFunction || null;\n  }\n\n  setEnvironmentFunction(actualFunction: SymbolFunction, ret: string) {\n    this.size = 1;\n    this.return = ret;\n    this.actualFunction = actualFunction;\n  }\n\n  public addVariable(id: string, type: Type, isConst: boolean, isHeap: boolean): Symbol | null {\n    if (this.variables.get(id) !== undefined) return null;\n    const newVar = new Symbol(type, id, this.size++, isConst, this.previous == null, isHeap);\n    this.variables.set(id, newVar);\n    return newVar;\n  }\n\n  public getVariable(id: string): Symbol | null {\n    let env: Environment | null = this;\n    while (env != null) {\n      const sym = env.variables.get(id);\n      if (sym !== undefined) return sym;\n      env = env.previous;\n    }\n    return null;\n  }\n\n  public addFunction(func: DeclareFunction): boolean {\n    if (this.functions.has(func.id)) return false;\n    this.functions.set(func.id, new SymbolFunction(func));\n    return true;\n  }\n\n  public getFunction(id: string): SymbolFunction {\n    //@ts-ignore\n    return this.functions.get(id);\n  }\n\n  public searchFunction(id: string): SymbolFunction | null {\n    let env: Environment | null = this;\n    while (env != null) {\n      const sym = env.functions.get(id);\n      if (sym !==undefined) return sym;\n      env = env.previous;\n    }\n    return null;\n  }\n}\n","export let Logs : Array<any> = new Array();","import { Generator } from \"../../../Generator\";\nimport { Environment } from \"../../../Environment\";\nimport { Type } from \"../../../utils/Type\";\nimport { Param } from \"../../../utils/Param\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class DeclareFunction extends Instruction {\n  private preCompile: boolean;\n  private body: Instruction;\n  id: string;\n  params: Array<Param>;\n  type: Type;\n  constructor(id: string, params: Array<Param>, type: Type, body: Instruction, line: number, column: number) {\n    super(line, column);\n    this.preCompile = true;\n    this.id = id\n    this.params = params\n    this.type = type\n    this.body = body\n  }\n\n  compile(env: Environment) {\n    if (this.preCompile) {\n      this.preCompile = false;\n      this.validateParams();\n      if (!env.addFunction(this)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Duplicate function implementation: ${this.id}`);\n      return;\n    }\n\n    const generator = Generator.getInstance();\n    const newEnv = new Environment(env);\n\n    const symbolFunction = env.getFunction(this.id);\n    const returnlbl = generator.newLabel();\n    const tempStorage = generator.getTempStorage();\n\n    newEnv.setEnvironmentFunction(symbolFunction, returnlbl);\n    this.params.forEach((param) => { newEnv.addVariable(param.id, param.type, false, false) });\n    generator.clearTempStorage();\n    const auxCode = generator.saveCode();\n    generator.clearPrevious();\n    generator.addBegin(symbolFunction.id);\n    this.body.compile(newEnv);\n    generator.addLabel(returnlbl);\n    generator.addEnd();\n    generator.addFunction();\n    generator.setCode(auxCode);\n\n    generator.setTempStorage(tempStorage);\n  }\n\n  private validateParams() {\n    const set = new Set<string>();\n    this.params.forEach((param) => {\n      if (set.has(param.id)) throw new ErrorTS(this.line, this.column, \"Semantical;\", `Duplicate identifier '${param.id}'`);\n      set.add(param.id);\n    });\n  }\n}\n","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Label } from \"./Label\";\n\nexport class FunctionC3D extends InstructionC3D {\n\n    private currentIndex: number\n    private type: string;\n    private id: string;\n    private instr: InstructionC3D[]\n\n    constructor(type: string, id: string, instr: InstructionC3D[], line: number, column: number) {\n        super(line, column);\n        this.currentIndex = 0\n        this.type = type\n        this.id = id\n        this.instr = instr\n    }\n\n    debug() { }\n\n    public getInstruction() {\n        const i: number = this.currentIndex;\n        this.currentIndex++\n        return this.instr[i]\n    }\n\n    public goToLabel(label: string) {\n        this.instr.forEach((e, i) => {\n            if (e instanceof Label && e.getLabel() === label) this.currentIndex = i\n        });\n    }\n\n    public resetIndex() {\n        this.currentIndex = 0\n    }\n\n    public setIndex(i: number) {\n        this.currentIndex = i\n    }\n\n    public getIndex() {\n        return this.currentIndex\n    }\n\n    public getId() {\n        return this.id;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class Label extends InstructionC3D {\n    private label: string\n    constructor(label: string, line: number, column: number) {\n        super(line, column);\n        this.label = label\n    }\n\n    debug() {\n        return {\n            type: Type.LABEL\n        }\n    }\n\n    public getLabel() {\n        return this.label;\n    }\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar grammar = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,18],$V1=[1,7],$V2=[1,16],$V3=[1,17],$V4=[1,20],$V5=[1,26],$V6=[1,22],$V7=[1,19],$V8=[1,21],$V9=[1,31],$Va=[1,24],$Vb=[1,25],$Vc=[1,33],$Vd=[1,34],$Ve=[1,35],$Vf=[1,36],$Vg=[1,32],$Vh=[1,23],$Vi=[1,38],$Vj=[1,39],$Vk=[1,29],$Vl=[2,5,9,19,20,21,22,25,26,28,31,32,39,48,53,54,55,56,60,61,65,66,67],$Vm=[1,45],$Vn=[1,46],$Vo=[1,47],$Vp=[1,48],$Vq=[1,49],$Vr=[1,50],$Vs=[1,51],$Vt=[1,52],$Vu=[1,53],$Vv=[1,54],$Vw=[1,55],$Vx=[1,56],$Vy=[1,66],$Vz=[2,52],$VA=[1,72],$VB=[1,73],$VC=[1,74],$VD=[12,23,36,37,38,39,40,41,42,43,44,45,46,47,59],$VE=[2,59],$VF=[12,23,36,37,38,39,42,43,44,45,46,47,59],$VG=[12,23,36,37,42,43,44,45,46,47,59],$VH=[12,23,36,37,46,47,59],$VI=[2,5,9,19,20,21,22,25,26,27,28,31,32,39,48,53,54,55,56,60,61,65,66,67],$VJ=[1,120],$VK=[1,123],$VL=[23,59];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"S\":3,\"INSTRUCTIONS\":4,\"EOF\":5,\"INSTRUCTION\":6,\"IF\":7,\"WHILE\":8,\"SWITCH\":9,\"FOR\":10,\"DO_WHILE\":11,\";\":12,\"RETURN\":13,\"EXPRESION\":14,\"ASIGNAR\":15,\"DECLARAR_FUNCIONES\":16,\"DECLARAR_VARIABLE\":17,\"CONSOLE\":18,\"break\":19,\"continue\":20,\"while\":21,\"(\":22,\")\":23,\"CUERPO\":24,\"do\":25,\"if\":26,\"else\":27,\"for\":28,\"CUERPO_FOR\":29,\"{\":30,\"}\":31,\"console\":32,\".\":33,\"log\":34,\"LISTA_EXPRESIONES\":35,\"&&\":36,\"||\":37,\"+\":38,\"-\":39,\"*\":40,\"/\":41,\">\":42,\">=\":43,\"<\":44,\"<=\":45,\"==\":46,\"!=\":47,\"!\":48,\"ACCESO\":49,\"++\":50,\"--\":51,\"LITERAL\":52,\"number\":53,\"true\":54,\"false\":55,\"cadena\":56,\"FUNCION\":57,\"=\":58,\",\":59,\"id\":60,\"return\":61,\"DINAMICO\":62,\":\":63,\"TIPO\":64,\"let\":65,\"const\":66,\"function\":67,\"PARAMETROS\":68,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"SWITCH\",12:\";\",19:\"break\",20:\"continue\",21:\"while\",22:\"(\",23:\")\",25:\"do\",26:\"if\",27:\"else\",28:\"for\",30:\"{\",31:\"}\",32:\"console\",33:\".\",34:\"log\",36:\"&&\",37:\"||\",38:\"+\",39:\"-\",40:\"*\",41:\"/\",42:\">\",43:\">=\",44:\"<\",45:\"<=\",46:\"==\",47:\"!=\",48:\"!\",50:\"++\",51:\"--\",53:\"number\",54:\"true\",55:\"false\",56:\"cadena\",58:\"=\",59:\",\",60:\"id\",61:\"return\",63:\":\",65:\"let\",66:\"const\",67:\"function\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[6,1],[6,2],[6,2],[6,2],[6,2],[6,1],[6,2],[6,2],[6,2],[6,2],[6,1],[8,5],[11,6],[7,5],[7,7],[7,7],[10,5],[29,5],[29,5],[24,2],[24,3],[18,6],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,2],[14,2],[14,3],[14,2],[14,2],[14,1],[52,1],[52,1],[52,1],[52,1],[52,1],[52,1],[15,3],[35,3],[35,1],[57,4],[57,3],[49,1],[13,1],[13,2],[17,6],[17,4],[64,1],[62,1],[62,1],[16,8],[16,7],[68,5],[68,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1]\nbreak;\ncase 3:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1];\nbreak;\ncase 4:\nthis.$ = [$$[$0]];\nbreak;\ncase 5: case 6: case 7: case 8: case 13: case 18: case 47: case 52: case 53:\nthis.$ = $$[$0]\nbreak;\ncase 9: case 10: case 14: case 15: case 44:\nthis.$ = $$[$0-1]\nbreak;\ncase 11: case 12:\nthis.$ = new Call($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 16:\nthis.$ = new Break(_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 17:\nthis.$ = new Continue(_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 19:\nthis.$ = new While($$[$0-2], $$[$0], _$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 20:\nthis.$ = new DoWhile($$[$0-1], $$[$0-4], _$[$0-5].first_line, _$[$0-5].first_column)\nbreak;\ncase 21:\nthis.$ = new If($$[$0-2], $$[$0], null, _$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 22: case 23:\nthis.$ = new If($$[$0-4], $$[$0-2], $$[$0], _$[$0-6].first_line, _$[$0-6].first_column)\nbreak;\ncase 24:\nthis.$ = new For($$[$0-2],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 25: case 26:\nthis.$ = new ForBody($$[$0-4],$$[$0-2],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 27:\nthis.$ = new Statement([], _$[$0-1].first_line, _$[$0-1].first_column);\nbreak;\ncase 28:\nthis.$ = new Statement($$[$0-1], _$[$0-2].first_line, _$[$0-2].first_column);\nbreak;\ncase 29:\nthis.$ = new Console($$[$0-1], _$[$0-5].first_line, _$[$0-5].first_column)\nbreak;\ncase 30:\nthis.$ = new And($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 31:\nthis.$ = new Or($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 32:\nthis.$ = new Plus($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 33:\nthis.$ = new Minus($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 34:\nthis.$ = new Mul($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 35:\nthis.$ = new Div($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 36:\nthis.$ = new Great(false,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 37:\nthis.$ = new Great(true,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 38:\nthis.$ = new Less(false,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 39:\nthis.$ = new Less(true,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 40:\nthis.$ = new Equals($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 41:\nthis.$ = new NotEquals($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 42:\nthis.$ = new Neg($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 43:\nthis.$ = new Not($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 45:\nthis.$ = new Inc($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 46:\nthis.$ = new Dec($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 48:\nthis.$ = new Primitive($$[$0], _$[$0].first_line, _$[$0].first_column, Types.NUMBER)\nbreak;\ncase 49:\nthis.$ = new Primitive(true, _$[$0].first_line, _$[$0].first_column, Types.BOOLEAN)\nbreak;\ncase 50:\nthis.$ = new Primitive(false, _$[$0].first_line, _$[$0].first_column, Types.BOOLEAN)\nbreak;\ncase 51:\nthis.$ = new Complex($$[$0], _$[$0].first_line, _$[$0].first_column, Types.STRING)\nbreak;\ncase 54:\nthis.$ = new AssignVariable($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column)\nbreak;\ncase 55:\n$$[$0-2].push($$[$0]);this.$=$$[$0-2]\nbreak;\ncase 56:\nthis.$ = [$$[$0]]\nbreak;\ncase 57:\nthis.$ = new AccessFunction($$[$0-3],$$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\nbreak;\ncase 58:\nthis.$ = new AccessFunction($$[$0-2],[],_$[$0-2].first_line,_$[$0-2].first_column);\nbreak;\ncase 59:\nthis.$ = new AccessVariable($$[$0],null,_$[$0].first_line,_$[$0].first_column)\nbreak;\ncase 60:\n this.$ = new ReturnTS(null,_$[$0].first_line,_$[$0].first_column)\nbreak;\ncase 61:\n this.$ = new ReturnTS($$[$0],_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 62:\nthis.$ = new DeclareVariable($$[$0-5],$$[$0-4],$$[$0-2],$$[$0],_$[$0-5].first_line,_$[$0-5].first_column)\nbreak;\ncase 63:\nthis.$ = new DeclareVariable($$[$0-3],$$[$0-2],$$[$0],null,_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 64:\nthis.$ = getType($$[$0])\nbreak;\ncase 65:\nthis.$=false\nbreak;\ncase 66:\nthis.$=true\nbreak;\ncase 67:\nthis.$ = new DeclareFunction($$[$0-6],$$[$0-4],$$[$0-1],$$[$0],_$[$0-7].first_line,_$[$0-7].first_column)\nbreak;\ncase 68:\nthis.$ = new DeclareFunction($$[$0-5],[],$$[$0-1],$$[$0],_$[$0-6].first_line,_$[$0-6].first_column)\nbreak;\ncase 69:\n$$[$0-4].push(new Param($$[$0-2],$$[$0]));this.$=$$[$0-4]\nbreak;\ncase 70:\nthis.$ = [new Param($$[$0-2],$$[$0])]\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,5:[1,3],6:4,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{1:[3]},{2:$V0,5:[1,40],6:41,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{1:[2,2]},o($Vl,[2,4]),o($Vl,[2,5]),o($Vl,[2,6]),o($Vl,[2,7]),o($Vl,[2,8]),{12:[1,42]},{12:[1,43]},{12:[1,44],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[1,57]},o($Vl,[2,13]),{12:[1,58]},{12:[1,59]},{12:[1,60]},{12:[1,61]},o($Vl,[2,18]),{22:[1,62]},{22:[1,63]},{22:[1,64]},{24:65,30:$Vy},{12:[2,60],14:67,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:69,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:70,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:71,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o([12,36,37,38,39,40,41,42,43,44,45,46,47],$Vz,{50:$VA,51:$VB,58:$VC}),o($VD,[2,47]),{60:[1,75]},{60:[1,76]},{33:[1,77]},o([12,23,36,37,38,39,40,41,42,43,44,45,46,47,50,51,58,59],$VE,{22:[1,78]}),o($VD,[2,48]),o($VD,[2,49]),o($VD,[2,50]),o($VD,[2,51]),o($VD,[2,53]),{60:[2,65]},{60:[2,66]},{1:[2,1]},o($Vl,[2,3]),o($Vl,[2,9]),o($Vl,[2,10]),o($Vl,[2,11]),{14:79,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:80,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:81,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:82,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:83,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:84,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:85,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:86,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:87,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:88,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:89,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:90,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($Vl,[2,12]),o($Vl,[2,14]),o($Vl,[2,15]),o($Vl,[2,16]),o($Vl,[2,17]),{14:91,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:92,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{15:95,17:94,29:93,49:96,60:[1,97],62:30,65:$Vi,66:$Vj},{21:[1,98]},{2:$V0,4:100,6:4,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,31:[1,99],32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{12:[2,61],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},o($VD,$Vz,{50:$VA,51:$VB}),o($VF,[2,42],{40:$Vq,41:$Vr}),o($VD,[2,43]),{23:[1,101],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},o($VD,[2,45]),o($VD,[2,46]),{14:102,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{22:[1,103]},{63:[1,104]},{34:[1,105]},{14:108,22:$V5,23:[1,107],35:106,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o([12,23,36,37,59],[2,30],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),o([12,23,37,59],[2,31],{36:$Vm,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),o($VF,[2,32],{40:$Vq,41:$Vr}),o($VF,[2,33],{40:$Vq,41:$Vr}),o($VD,[2,34]),o($VD,[2,35]),o($VG,[2,36],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,37],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,38],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,39],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VH,[2,40],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv}),o($VH,[2,41],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv}),{23:[1,109],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,110],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,111]},{12:[1,112]},{12:[1,113]},{58:$VC},{58:$VE},{22:[1,114]},o($VI,[2,27]),{2:$V0,6:41,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,31:[1,115],32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},o($VD,[2,44]),{12:[2,54],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,117],60:[1,118],68:116},{60:$VJ,64:119},{22:[1,121]},{23:[1,122],59:$VK},o($VD,[2,58]),o($VL,[2,56],{36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),{24:124,30:$Vy},{24:125,30:$Vy},{24:126,30:$Vy},{14:127,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:128,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:129,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($VI,[2,28]),{23:[1,130],59:[1,131]},{63:[1,132]},{63:[1,133]},{12:[2,63],58:[1,134]},o([12,23,30,58,59],[2,64]),{14:108,22:$V5,35:135,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($VD,[2,57]),{14:136,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($Vl,[2,21],{27:[1,137]}),o($Vl,[2,19]),o($Vl,[2,24]),{12:[1,138],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[1,139],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,140],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{63:[1,141]},{60:[1,142]},{60:$VJ,64:143},{60:$VJ,64:144},{14:145,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{23:[1,146],59:$VK},o($VL,[2,55],{36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),{7:148,24:147,26:$V7,30:$Vy},{14:149,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:150,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{12:[2,20]},{60:$VJ,64:151},{63:[1,152]},{24:153,30:$Vy},o($VL,[2,70]),{12:[2,62],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[2,29]},o($Vl,[2,22]),o($Vl,[2,23]),{23:[2,25],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[2,26],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{24:154,30:$Vy},{60:$VJ,64:155},o($Vl,[2,68]),o($Vl,[2,67]),o($VL,[2,69])],\ndefaultActions: {3:[2,2],38:[2,65],39:[2,66],40:[2,1],97:[2,59],140:[2,20],146:[2,29]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n    const {Types,getType} = require('../compiler/utils/Type');\n    const {Param} = require('../compiler/utils/Param');\n\n    const {Break} = require('../compiler/actions/instruction/transfer/Break');\n    const {Continue} = require('../compiler/actions/instruction/transfer/Continue');\n    const {ReturnTS} = require('../compiler/actions/instruction/transfer/Return');\n\n    const {Call} = require('../compiler/actions/instruction/Call')\n    const {Console} = require('../compiler/actions/instruction/Console')\n    const {Statement} = require('../compiler/actions/instruction/Statement')\n\n    const {And} = require('../compiler/actions/expression/logical/And')\n    const {Or} = require('../compiler/actions/expression/logical/Or')\n    const {Not} = require('../compiler/actions/expression/logical/Not')\n    \n    const {Plus} = require('../compiler/actions/expression/arithmetic/Plus')\n    const {Mul} = require('../compiler/actions/expression/arithmetic/Mul')\n    const {Div} = require('../compiler/actions/expression/arithmetic/Div')\n    const {Minus} = require('../compiler/actions/expression/arithmetic/Minus')\n    const {Neg} = require('../compiler/actions/expression/arithmetic/Neg')\n    const {Inc} = require('../compiler/actions/expression/arithmetic/Inc')\n    const {Dec} = require('../compiler/actions/expression/arithmetic/Dec')\n\n    const {Equals} = require('../compiler/actions/expression/relational/Equals')\n    const {NotEquals} = require('../compiler/actions/expression/relational/NotEquals')\n    const {Less} = require('../compiler/actions/expression/relational/Less')\n    const {Great} = require('../compiler/actions/expression/relational/Great')\n    \n    const {Primitive} = require('../compiler/actions/expression/literal/Primitive')\n    const {Complex} = require('../compiler/actions/expression/literal/Complex')\n\n    const {DeclareVariable} = require('../compiler/actions/instruction/variable/DeclareVariable')\n    const {AssignVariable} = require('../compiler/actions/instruction/variable/AssignVariable')\n\n    const {AccessVariable} = require('../compiler/actions/expression/access/AccessVariable')\n    const {AccessFunction} = require('../compiler/actions/expression/access/AccessFunction')\n\n    const {DeclareFunction} = require('../compiler/actions/instruction/function/DeclareFunction')\n\n    const {DoWhile} = require('../compiler/actions/instruction/control/DoWhile')\n    const {For} = require('../compiler/actions/instruction/control/For')\n    const {ForBody} = require('../compiler/actions/instruction/control/ForBody')\n    const {If} = require('../compiler/actions/instruction/control/If')\n    const {While} = require('../compiler/actions/instruction/control/While')\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-sensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// ignora los espacios en blanco\nbreak;\ncase 1:// comentario de linea\nbreak;\ncase 2:// comentario de multiples lineas\t\nbreak;\ncase 3:return 53\nbreak;\ncase 4:return \"log\"\nbreak;\ncase 5:return \"console\"\nbreak;\ncase 6:return \".\"\nbreak;\ncase 7:return \",\"\nbreak;\ncase 8:return \"++\"\nbreak;\ncase 9:return \"--\"\nbreak;\ncase 10:return \"true\"\nbreak;\ncase 11:return \"false\"\nbreak;\ncase 12:return \"return\"\nbreak;\ncase 13:return \"let\"\nbreak;\ncase 14:return \"const\"\nbreak;\ncase 15:return 67\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 27;\nbreak;\ncase 18:return \"do\"\nbreak;\ncase 19:return \"while\"\nbreak;\ncase 20:return \"for\"\nbreak;\ncase 21:return 19;\nbreak;\ncase 22:return \"continue\"\nbreak;\ncase 23:return \";\";\nbreak;\ncase 24:return \":\";\nbreak;\ncase 25:return 30;\nbreak;\ncase 26:return 31;\nbreak;\ncase 27:return 22;\nbreak;\ncase 28:return 23;\nbreak;\ncase 29:return 45;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 46;\nbreak;\ncase 32:return 47;\nbreak;\ncase 33:return 36\nbreak;\ncase 34:return 37\nbreak;\ncase 35:return 48\nbreak;\ncase 36:return 38;\nbreak;\ncase 37:return 39;\nbreak;\ncase 38:return 40;\nbreak;\ncase 39:return 41;\nbreak;\ncase 40:return 44;\nbreak;\ncase 41:return 42;\nbreak;\ncase 42:return 58;\nbreak;\ncase 43: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 56; \nbreak;\ncase 44: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 56; \nbreak;\ncase 45:return 60;\nbreak;\ncase 46:return 5;\nbreak;\ncase 47:return 'ERROR'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/,/^(?:(([0-9]+)(\\.([0-9]+))?))/,/^(?:log\\b)/,/^(?:console\\b)/,/^(?:\\.)/,/^(?:,)/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:return\\b)/,/^(?:let\\b)/,/^(?:const\\b)/,/^(?:function\\b)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:do\\b)/,/^(?:while\\b)/,/^(?:for\\b)/,/^(?:break\\b)/,/^(?:continue\\b)/,/^(?:;)/,/^(?::)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:<=)/,/^(?:>=)/,/^(?:==)/,/^(?:!=)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:!)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:<)/,/^(?:>)/,/^(?:=)/,/^(?:'([^\\\\\\']|\\\\.)*')/,/^(?:\"([^\\\\\\\"]|\\\\.)*\")/,/^(?:([a-zA-Z_])[a-zA-Z0-9_]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = grammar;\nexports.Parser = grammar.Parser;\nexports.parse = function () { return grammar.parse.apply(grammar, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { Type } from \"./Type\";\n\nexport class Param {\n    id: string;\n    type: Type;\n    constructor(id: string, type: Type) {\n        this.id = id\n        this.type = type\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class Break extends Instruction {\n  constructor(line: number, column: number) {\n    super(line, column);\n  }\n\n  compile(enviorement: Environment): void {\n    if (enviorement.break == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"A 'break' statement can only be used within an enclosing iteration statement\");\n    Generator.getInstance().addGoto(enviorement.break);\n  }\n}\n","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class Continue extends Instruction {\n  constructor(line: number, column: number) {\n    super(line, column);\n  }\n\n  compile(enviorement: Environment) {\n    if (enviorement.continue == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"A 'continue' statement can only be used within an enclosing iteration statement\");\n    Generator.getInstance().addGoto(enviorement.continue);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class ReturnTS extends Instruction {\n    private value: Expression | null\n    constructor(value: Expression | null, line: number, column: number) {\n        super(line, column);\n        this.value = value\n    }\n\n    compile(env: Environment): void {\n        const value = this.value?.compile(env) || new Return('0', false, new Type(Types.VOID));\n        const symbolFunction = env.actualFunction;\n        const generator = Generator.getInstance();\n\n        if (symbolFunction == null) throw new ErrorTS(this.line, this.column, 'Semantico', `A 'return' statement can only be used within a function body`);\n\n        if (!this.sameType(symbolFunction.type, value.type)) throw new ErrorTS(this.line, this.column, 'Semantical', `Type '${value.type.type}' is not assignable to type '${symbolFunction.type.type}'`);\n\n        if (symbolFunction.type.type === Types.BOOLEAN) {\n            const templabel = generator.newLabel();\n            generator.addLabel(value.trueLabel);\n            generator.addSetStack('p', '1');\n            generator.addGoto(templabel);\n            generator.addLabel(value.falseLabel);\n            generator.addSetStack('p', '0');\n            generator.addLabel(templabel);\n        }\n        else if (symbolFunction.type.type !== Types.VOID) generator.addSetStack('p', value.getValue());\n        generator.addGoto(env.return || '');\n    }\n}","import { Expression } from \"../../abstract/Expression\";\nimport { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\n\nexport class Call extends Instruction {\n  private call: Expression;\n\n  constructor(call: Expression, line: number, column: number) {\n    super(line, column);\n    this.call = call;\n  }\n\n  compile(enviorement: Environment) {\n    const value = this.call.compile(enviorement);\n    if (value !== undefined) value.getValue();\n  }\n}\n","import { Expression } from \"../../abstract/Expression\";\nimport { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\nimport { Generator, Natives } from \"../../Generator\";\nimport { ErrorTS } from \"../../utils/Error\";\nimport { Types } from \"../../utils/Type\";\n\nexport class Console extends Instruction {\n  private value: Array<Expression>\n  constructor(value: Array<Expression>, line: number, column: number) {\n    super(line, column);\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    const n = this.value.length;\n    const generator = Generator.getInstance();\n    let j = 0;\n    this.value.forEach((i: Expression) => {\n      const value = i.compile(env);\n      switch (value.type.type) {\n        case Types.NUMBER:\n          generator.addPrint(\"f\", \"(float)\" + value.getValue());\n          break;\n        case Types.BOOLEAN:\n          const templabel = generator.newLabel();\n          generator.addLabel(value.trueLabel);\n          generator.addPrintTrue();\n          generator.addGoto(templabel);\n          generator.addLabel(value.falseLabel);\n          generator.addPrintFalse();\n          generator.addLabel(templabel);\n          break;\n        case Types.STRING:\n          generator.addNextEnv(env.size);\n          generator.addSetStack(\"p\", value.getValue());\n          generator.addCall(\"native_print_str\");\n          generator.addNative(Natives.print_str);\n          generator.addPrevEnv(env.size);\n          break;\n        default:\n          throw new ErrorTS(this.line, this.column, \"Semantical\", `'${value.type.type}' not supported in this version`);\n      }\n      j++;\n      if (j !== n) {\n        generator.addPrint(\"c\", \"32\");\n      }\n    });\n    generator.addPrint(\"c\", \"10\");\n  }\n}\n","import { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\nimport { Logs } from \"../../utils/LogArray\";\n\nexport class Statement extends Instruction {\n    private instructions: Array<Instruction> | null\n    constructor(instructions: Array<Instruction> | null, line: number, column: number) {\n        super(line, column);\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): any {\n        const newEnv = env.actualFunction == null ? new Environment(env) : env;\n        this.instructions?.forEach((instruction) => {\n            try {\n                instruction.compile(newEnv);\n            } catch (error) {\n                Logs.push(error);\n            }\n        });\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class And extends Expression {\n    private left: Expression;\n    private right: Expression;\n\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left;\n        this.right = right;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.left.trueLabel = generator.newLabel();\n        this.right.trueLabel = this.trueLabel;\n        this.left.falseLabel = this.right.falseLabel = this.falseLabel;\n\n        const left = this.left.compile(env);\n        generator.addLabel(this.left.trueLabel);\n        const right = this.right.compile(env);\n        if (left.type.type === Types.BOOLEAN && right.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, left.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.right.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '&&' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Or extends Expression {\n\n    private left: Expression;\n    private right: Expression;\n\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left;\n        this.right = right;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.left.trueLabel = this.right.trueLabel = this.trueLabel;\n        this.left.falseLabel = generator.newLabel();\n        this.right.falseLabel = this.falseLabel;\n\n        const left = this.left.compile(env);\n        generator.addLabel(this.left.falseLabel);\n        const right = this.right.compile(env);\n\n        if (left.type.type === Types.BOOLEAN && right.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, left.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.right.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '||' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Not extends Expression {\n    private value: Expression;\n\n    constructor(value: Expression, line: number, column: number) {\n        super(line, column);\n        this.value = value;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.value.trueLabel = this.falseLabel;\n        this.value.falseLabel = this.trueLabel;\n\n        const value = this.value.compile(env);\n\n        if (value.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, value.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '!' with ${value.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Plus extends Expression {\n\n    constructor(private left: Expression, private right: Expression, line: number, column: number) {\n        super(line, column);\n    }\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        let right: Return | null = null;\n        const generator = Generator.getInstance();\n        let temp;\n        let tempAux;\n        switch (left.type.type) {\n            case Types.NUMBER:\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '+');\n                        return new Return(temp, true, left.type);\n                    case Types.STRING:\n                        tempAux = generator.newTemporal();\n                        generator.freeTemp(tempAux);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_num_str'); generator.addNative(Natives.concat_num_str);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.BOOLEAN:\n                        const lblTemp = generator.newLabel();\n                        tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n\n                        generator.addLabel(right.trueLabel);\n                        generator.addExpression(tempAux, '1');\n                        generator.addGoto(lblTemp);\n\n                        generator.addLabel(right.falseLabel);\n                        generator.addExpression(tempAux, '0');\n                        generator.addLabel(lblTemp);\n\n                        generator.addExpression(temp, left.getValue(), tempAux, '+');\n                        return new Return(temp, true, left.type);\n                }\n                break;\n            case Types.STRING:\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_str_num'); generator.addNative(Natives.concat_str_num);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.STRING:\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat'); generator.addNative(Natives.concat);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.BOOLEAN:\n                        const lblTemp = generator.newLabel();\n\n                        generator.addLabel(right.trueLabel);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, '1');\n                        generator.addGoto(lblTemp);\n\n                        generator.addLabel(right.falseLabel);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, '0');\n                        generator.addLabel(lblTemp);\n\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_str_bool'); generator.addNative(Natives.concat_str_bool);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                }\n                break;\n            case Types.BOOLEAN:\n                const tempBoolean = generator.newTemporal();\n                const lblTemp = generator.newLabel();\n                generator.addLabel(left.trueLabel);\n                generator.addExpression(tempBoolean, '1');\n                generator.addGoto(lblTemp);\n\n                generator.addLabel(left.falseLabel);\n                generator.addExpression(tempBoolean, '1');\n                generator.addLabel(lblTemp);\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                switch (right.type.type) {\n                    case Types.STRING:\n                        tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, tempBoolean); generator.freeTemp(tempBoolean);\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_bool_str'); generator.addNative(Natives.concat_bool_str);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.NUMBER:\n                        generator.addExpression(temp, tempBoolean, right.getValue(), '+'); generator.freeTemp(tempBoolean);\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '+' cannot be applied to types '${left.type.type}' and '${right?.type.type}' `);\n    }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Mul extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '*');\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '*' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\nexport class Div extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '/');\n                        return new Return(temp, true, new Type(Types.NUMBER));\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '/' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Minus extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '-');\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '-' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Neg extends Expression {\n    private left: Expression\n    constructor(left: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                generator.addExpression(temp, '0', left.getValue(), '-');\n                return new Return(temp, true, left.type);\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '-' cannot be applied to type '${left.type.type}'`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Inc extends Expression {\n\n    constructor(private assign: Expression, line: number, column: number) {\n        super(line, column);\n    }\n\n    compile(env: Environment): Return {\n        //@ts-ignore\n        const assign = this.assign.compile(env, true);\n        const symbol = assign.symbol;\n        const generator = Generator.getInstance();\n        if (symbol == null) throw new ErrorTS(this.line, this.column, 'Semantical', 'The operand of an increment or decrement operator must be a variable or a property assign');\n        switch (assign.type.type) {\n            case Types.NUMBER:\n                const value = this.assign.compile(env);\n                const temp = generator.newTemporal();\n                if (symbol?.isGlobal) {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetStack(symbol.position, temp);\n                }\n                else if (symbol?.isHeap) {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetHeap(assign.getValue(), temp);\n                }\n                else {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetStack(assign.getValue(), temp);\n                }\n                return new Return(temp, true, symbol.type);\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '++' cannot be applied to type '${assign.type.type}'`);\n    }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Dec extends Expression {\n  private assign: Expression\n  constructor(assign: Expression, line: number, column: number) {\n    super(line, column);\n    this.assign = assign\n\n  }\n  compile(env: Environment): Return {\n    //@ts-ignore\n    const assign = this.assign.compile(env, true);\n    const symbol = assign.symbol;\n    const generator = Generator.getInstance();\n    if (symbol == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"The operand of an increment or decrement operator must be a variable or a property assign\");\n    switch (assign.type.type) {\n      case Types.NUMBER:\n        const value = this.assign.compile(env);\n        const temp = generator.newTemporal();\n        if (symbol?.isGlobal) {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetStack(symbol.position, temp);\n        } else if (symbol?.isHeap) {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetHeap(assign.getValue(), temp);\n        } else {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetStack(assign.getValue(), temp);\n        }\n        return new Return(temp, true, symbol.type);\n      default:\n        throw new ErrorTS(this.line, this.column, \"Semantical\", `Operator '--' cannot be applied to type '${assign.type.type}'`\n        );\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Equals extends Expression {\n  private left: Expression;\n  private right: Expression;\n\n  constructor(left: Expression, right: Expression, line: number, column: number) {\n    super(line, column);\n    this.left = left;\n    this.right = right;\n  }\n\n  //@ts-ignore\n  compile(env: Environment): Return {\n    const left = this.left.compile(env);\n    let right: Return | null = null;\n    const generator = Generator.getInstance();\n\n    switch (left.type.type) {\n      case Types.NUMBER:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.NUMBER:\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), \"==\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n      case Types.BOOLEAN:\n\n        const trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n        const falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n\n        generator.addLabel(left.trueLabel);\n        this.right.trueLabel = trueLabel;\n        this.right.falseLabel = falseLabel;\n        right = this.right.compile(env);\n\n        generator.addLabel(left.falseLabel);\n        this.right.trueLabel = falseLabel;\n        this.right.falseLabel = trueLabel;\n        right = this.right.compile(env);\n        if (right.type.type === Types.BOOLEAN) {\n          const auxReturn = new Return(\"\", false, left.type);\n          auxReturn.trueLabel = trueLabel;\n          auxReturn.falseLabel = falseLabel;\n          return auxReturn;\n        }\n        break;\n      case Types.STRING:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.STRING: {\n            const temp = generator.newTemporal(); generator.freeTemp(temp);\n            const tempAux = generator.newTemporal();\n            generator.freeTemp(tempAux);\n            generator.freeTemp(tempAux);\n            generator.addExpression(tempAux, \"p\", env.size + 1, \"+\");\n            generator.addSetStack(tempAux, left.getValue());\n            generator.addExpression(tempAux, tempAux, \"1\", \"+\");\n            generator.addSetStack(tempAux, right.getValue());\n            generator.addNextEnv(env.size);\n            generator.addCall(\"native_cmp_str\");\n            generator.addNative(Natives.cmp_str);\n            generator.addGetStack(temp, \"(int)p\");\n            generator.addPrevEnv(env.size);\n\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n          }\n\n        }\n        break;\n    }\n    throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '==' with ${left.type.type} and ${right?.type.type}`);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class NotEquals extends Expression {\n  private left: Expression;\n  private right: Expression\n  constructor(left: Expression, right: Expression, line: number, column: number) {\n    super(line, column);\n    this.left = left\n    this.right = right\n  }\n\n  //@ts-ignore\n  compile(env: Environment): Return {\n    const left = this.left.compile(env);\n    let right: Return | null = null;\n    const generator = Generator.getInstance();\n\n    switch (left.type.type) {\n      case Types.NUMBER:\n        right = this.right.compile(env);\n\n        switch (right.type.type) {\n          case Types.NUMBER:\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), \"!=\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n      case Types.BOOLEAN:\n        const trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n        const falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n\n        generator.addLabel(left.trueLabel);\n        this.right.trueLabel = falseLabel;\n        this.right.falseLabel = trueLabel;\n        right = this.right.compile(env);\n\n        generator.addLabel(left.falseLabel);\n        this.right.trueLabel = trueLabel;\n        this.right.falseLabel = falseLabel;\n        right = this.right.compile(env);\n\n        if (right.type.type === Types.BOOLEAN) {\n          const auxReturn = new Return(\"\", false, left.type);\n          auxReturn.trueLabel = trueLabel;\n          auxReturn.falseLabel = falseLabel;\n          return auxReturn;\n        }\n        break;\n      case Types.STRING:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.STRING:\n            const temp = generator.newTemporal();\n            generator.freeTemp(temp);\n            const tempAux = generator.newTemporal();\n            generator.freeTemp(tempAux);\n            generator.addExpression(tempAux, \"p\", env.size + 1, \"+\");\n            generator.addSetStack(tempAux, left.getValue());\n            generator.addExpression(tempAux, tempAux, \"1\", \"+\");\n            generator.addSetStack(tempAux, right.getValue());\n            generator.addNextEnv(env.size);\n            generator.addCall(\"native_cmp_str\");\n            generator.addNative(Natives.cmp_str);\n            generator.addGetStack(temp, \"p\");\n            generator.addPrevEnv(env.size);\n\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(temp, \"1\", \"!=\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n    }\n    throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '!=' with ${left.type.type} and ${right?.type.type}`);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Less extends Expression {\n\n    private isLessEqual: boolean;\n    private left: Expression;\n    private right: Expression\n    constructor(isLessEqual: boolean, left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.isLessEqual = isLessEqual\n        this.left = left\n        this.right = right\n    }\n    compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n\n        const lefType = left.type.type;\n        const rightType = right.type.type;\n        const operator = this.isLessEqual ? '<=' : '<'\n\n        if (lefType === Types.NUMBER && rightType === Types.NUMBER) {\n            const generator = Generator.getInstance();\n            this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), operator, this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return('', false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '${operator}' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Great extends Expression {\n    private isGrtEqual: boolean;\n    private left: Expression;\n    private right: Expression\n    constructor(isGrtEqual: boolean, left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.isGrtEqual = isGrtEqual\n        this.left = left\n        this.right = right\n    }\n\n    compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n\n        const lefType = left.type.type;\n        const rightType = right.type.type;\n        const operator = this.isGrtEqual ? '>=' : '>'\n\n        if (lefType === Types.NUMBER && rightType === Types.NUMBER) {\n            const generator = Generator.getInstance();\n            this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), operator, this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return('', false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '${operator}' with ${left.type.type}  and ${right.type.type}`);\n    }\n}","import { Generator } from \"../../../Generator\";\nimport { Return } from \"../../../utils/Return\";\nimport { Environment } from \"../../../Environment\";\nimport { Types, Type } from \"../../../utils/Type\";\nimport { Expression } from \"../../../abstract/Expression\";\n\nexport class Primitive extends Expression {\n    private value: any\n    private type: Types\n    constructor(value: any, line: number, column: number, type: Types) {\n        super(line, column);\n        this.value = value\n        this.type = type\n    }\n\n    //@ts-ignore\n    public compile(env: Environment): Return {\n        switch (this.type) {\n            case Types.NUMBER:\n                return new Return(this.value, false, new Type(this.type));\n            case Types.BOOLEAN:\n                const generator = Generator.getInstance();\n                const auxReturn = new Return('', false, new Type(this.type));\n                this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n                this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n                this.value ? generator.addGoto(this.trueLabel) : generator.addGoto(this.falseLabel);\n                auxReturn.trueLabel = this.trueLabel;\n                auxReturn.falseLabel = this.falseLabel;\n                return auxReturn;\n            case Types.NULL:\n                return new Return('-1', false, new Type(this.type));\n        }\n    }\n\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Complex extends Expression {\n\n    private value: any\n    private type: Types\n    constructor(value: any, line: number, column: number, type: Types) {\n        super(line, column);\n        this.value = value\n        this.type = type\n    }\n\n    public compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        generator.addExpression(temp, 'h');\n        for (let i = 0; i < this.value.length; i++) {\n            generator.addSetHeap('h', this.value.charCodeAt(i));\n            generator.nextHeap();\n        }\n        generator.addSetHeap('h', '-1');\n        generator.nextHeap();\n        return new Return(temp, true, new Type(this.type));\n    }\n\n\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class DeclareVariable extends Instruction {\n  private access: boolean;\n  private id: string;\n  private type: Type;\n  private value: Expression | null\n  constructor(access: boolean, id: string, type: Type, value: Expression | null, line: number, column: number) {\n    super(line, column);\n    this.access = access\n    this.id = id\n    this.type = type\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    const generator = Generator.getInstance();\n    const compiled = this.value?.compile(env);\n    if (compiled == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Variable '${this.id}' must be initialized`);\n    if (!this.sameType(this.type, compiled.type)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Type '${compiled.type.type}' is not assignable to type '${this.type.type}'`);\n    const newVariable = env.addVariable(this.id, this.type, this.access, false);\n    if (newVariable == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot redeclare block-scoped variable '${this.id}'`);\n    if (newVariable.isGlobal) {\n      if (this.type.type === Types.BOOLEAN) {\n        const templabel = generator.newLabel();\n        generator.addLabel(compiled.trueLabel);\n        generator.addSetStack(newVariable.position, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiled.falseLabel);\n        generator.addSetStack(newVariable.position, \"0\");\n        generator.addLabel(templabel);\n      }\n      else generator.addSetStack(newVariable.position, compiled.getValue());\n    }\n    else {\n      const temp = generator.newTemporal(); generator.freeTemp(temp);\n      if (this.type.type === Types.BOOLEAN) {\n        const templabel = generator.newLabel();\n        generator.addLabel(compiled.trueLabel);\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiled.falseLabel);\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, \"0\");\n        generator.addLabel(templabel);\n      } else {\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, compiled.getValue());\n      }\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AssignVariable extends Instruction {\n  private target: Expression;\n  private value: Expression;\n  constructor(target: Expression, value: Expression, line: number, column: number) {\n    super(line, column);\n    this.target = target\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    //@ts-ignore\n    const target = this.target.compile(env, true);\n    if (target.symbol?.isConst)\n      throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot assign to '${target.symbol.identifier}' because it is a constant.`);\n    const value = this.value.compile(env);\n\n    const generator = Generator.getInstance();\n    const symbol = target.symbol;\n\n    if (!this.sameType(target.type, value.type)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Type '${value.type.type}' is not assignable to type '${target.type.type}'`);\n\n    const ptr = symbol?.isGlobal ? symbol.position : target.getValue()\n    if (target.type.type === Types.BOOLEAN) {\n      const templabel = generator.newLabel();\n      generator.addLabel(value.trueLabel);\n      generator.addSetStack(ptr, \"1\");\n      generator.addGoto(templabel);\n      generator.addLabel(value.falseLabel);\n      generator.addSetStack(ptr, \"0\");\n      generator.addLabel(templabel);\n    }\n    else generator.addSetStack(ptr, value.getValue());\n\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AccessVariable extends Expression {\n  private id: string;\n  private previous: Expression | null\n  constructor(id: string, previous: Expression | null, line: number, column: number) {\n    super(line, column);\n    this.id = id;\n    this.previous = previous\n  }\n  compile(env: Environment, state?: boolean): Return {\n    const generator = Generator.getInstance();\n    let symbol = env.getVariable(this.id);\n    if (symbol == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot find name '${this.id}'`);\n    if (state) {\n      if (symbol.isGlobal) return new Return(symbol.position + \"\", false, symbol.type, symbol);\n      else {\n        const temp = generator.newTemporal();\n        generator.addExpression(temp, \"p\", symbol.position, \"+\");\n        return new Return(temp, true, symbol.type, symbol);\n      }\n    } else {\n      const temp = generator.newTemporal();\n      if (symbol.isGlobal) {\n        generator.addGetStack(temp, symbol.position);\n      }\n      else {\n        const tempAux = generator.newTemporal();\n        generator.freeTemp(tempAux);\n        generator.addExpression(tempAux, \"p\", symbol.position, \"+\");\n        generator.addGetStack(temp, tempAux);\n      }\n      if (symbol.type.type !== Types.BOOLEAN) return new Return(temp, true, symbol.type, symbol);\n      generator.freeTemp(temp);\n      const auxReturn = new Return(\"\", false, symbol.type, symbol);\n      this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n      this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n      generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n      generator.addGoto(this.falseLabel);\n      auxReturn.trueLabel = this.trueLabel;\n      auxReturn.falseLabel = this.falseLabel;\n      return auxReturn;\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AccessFunction extends Expression {\n  private id: string;\n  private params: Array<Expression>\n  constructor(id: string, params: Array<Expression>, line: number, column: number) {\n    super(line, column);\n    this.id = id\n    this.params = params\n  }\n\n  compile(env: Environment): Return {\n    const symbolFunction = env.searchFunction(this.id);\n    if (symbolFunction == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot find name '${this.id}'`);\n    const paramsValues = new Array<Return>();\n    const generator = Generator.getInstance();\n    const size = generator.saveTemps(env);\n\n    const registeredLength = symbolFunction.params.length;\n    const incomingLength = this.params.length;\n    if (registeredLength !== incomingLength) throw new ErrorTS(this.line, this.column, \"Semantical\", `Expected ${registeredLength} arguments, but got ${incomingLength}`);\n    let i = 0;\n    this.params.forEach((param) => {\n      const compiledParam = param.compile(env);\n      const registeredType = symbolFunction.params[i].type.type;\n      const incomingType = compiledParam.type.type;\n      if (registeredType !== incomingType) throw new ErrorTS(this.line, this.column, \"Semantical\", `Argument of type '${incomingType}' is not assignable to parameter of type '${registeredType}'`);\n      if (incomingType === Types.BOOLEAN) {\n        const temp = generator.newTemporal();\n        generator.freeTemp(temp);\n        const templabel = generator.newLabel();\n        generator.addLabel(compiledParam.trueLabel);\n        generator.addExpression(temp, \"p\", env.size + i + 1, \"+\");\n        generator.addSetStack(temp, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiledParam.falseLabel);\n        generator.addExpression(temp, \"p\", env.size + i + 1, \"+\");\n        generator.addSetStack(temp, \"0\");\n        generator.addLabel(templabel);\n      }\n      paramsValues.push(compiledParam);\n      i++;\n    });\n    const temp = generator.newTemporal();\n    generator.freeTemp(temp);\n    if (paramsValues.length !== 0) {\n      generator.addExpression(temp, \"p\", env.size + 1, \"+\");\n      paramsValues.forEach((value, index) => {\n        if (value.type.type !== Types.BOOLEAN)\n          generator.addSetStack(temp, value.getValue());\n        if (index !== paramsValues.length - 1)\n          generator.addExpression(temp, temp, \"1\", \"+\");\n      });\n    }\n\n    generator.addNextEnv(env.size);\n    generator.addCall(symbolFunction.id);\n    generator.addGetStack(temp, \"p\");\n    generator.addPrevEnv(env.size);\n    generator.recoverTemps(env, size);\n    generator.addTemp(temp);\n\n    if (symbolFunction.type.type !== Types.BOOLEAN) return new Return(temp, true, symbolFunction.type);\n    const auxReturn = new Return(\"\", false, symbolFunction.type);\n    this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n    this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n    generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n    generator.addGoto(this.falseLabel);\n    auxReturn.trueLabel = this.trueLabel;\n    auxReturn.falseLabel = this.falseLabel;\n    return auxReturn;\n  }\n}\n","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class DoWhile extends Instruction {\n    private condition: Expression;\n    private instructions: Instruction\n    constructor(condition: Expression, instructions: Instruction, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        generator.addComment('BEGIN doWhile');\n        newEnv.continue = this.condition.trueLabel = generator.newLabel();\n        newEnv.break = this.condition.falseLabel = generator.newLabel();\n        generator.addLabel(this.condition.trueLabel);\n\n        this.instructions.compile(newEnv);\n\n        const condition = this.condition.compile(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END DoWhile');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', 'Condition found not boolean');\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\n\nexport class For extends Instruction {\n    private condition: Expression;\n    private instructions: Instruction\n    constructor(condition: Expression, instructions: Instruction, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        generator.addComment('BEGIN For');\n        //@ts-ignore\n        this.condition.compile(newEnv, this.instructions);\n    }\n\n}","import { Environment } from \"./Environment\";\n\nexport enum Natives {\n  concat = 0,\n  concat_str_bool = 1,\n  concat_bool_str = 2,\n  print_str = 3,\n  cmp_str = 4,\n  concat_num_str = 5,\n  concat_str_num = 6,\n}\n\nexport class Generator {\n  private static generator: Generator;\n  private temporal: number;\n  private label: number;\n  private code: string[];\n  private functions: string[];\n  private tempStorage: Set<string>;\n  private natives: boolean[];\n\n  private constructor() {\n    this.temporal = 0;\n    this.label = 0;\n    this.code = [];\n    this.functions = [];\n    this.natives = [];\n    this.clearNatives();\n    this.tempStorage = new Set();\n  }\n\n  private clearNatives() {\n    for (let i = 0; i < this.natives.length; i++) {\n      this.natives[i] = false;;\n    }\n  }\n\n  public static getInstance() {\n    return this.generator || (this.generator = new this());\n  }\n\n  public getTempStorage() {\n    return this.tempStorage;\n  }\n\n  public clearTempStorage() {\n    this.tempStorage.clear();\n  }\n\n  public setTempStorage(tempStorage: Set<string>) {\n    this.tempStorage = tempStorage;\n  }\n\n  public clearCode() {\n    this.temporal = 0;\n    this.label = 0;\n    this.code = [];\n    this.functions = [];\n    this.natives = [];\n    this.clearNatives();\n    this.tempStorage = new Set();\n  }\n\n\n  public saveCode() {\n    return this.code;\n  }\n\n  public clearPrevious() {\n    this.code = [];\n  }\n\n  public setCode(code: string[]) {\n    this.code = code;\n  }\n\n  public addFunction() {\n    this.functions = this.functions.concat(this.code);\n  }\n\n  public addCode(code: string) {\n    this.code.push(code);\n  }\n\n  public getFunctions() {\n    let value = this.getNatives();\n    value += this.functions.join('\\n');\n    return value\n  }\n\n  public getCode(): string {\n    return this.code.join('\\n');\n  }\n\n  public newTemporal(): string {\n    const temp = 'T' + this.temporal++\n    this.tempStorage.add(temp);\n    return temp;\n  }\n\n  public newLabel(): string {\n    return 'L' + this.label++;\n  }\n\n  public getTemporal(): number {\n    return this.temporal\n  }\n\n  public addLabel(label: string) {\n    this.code.push(`${label}:`);\n  }\n\n  public addExpression(target: string, left: any, right: any = '', operator: string = '') {\n    this.code.push(`${target} = ${left} ${operator} ${right};`);\n  }\n\n  public addfmod(target: string, left: any, right: any = '') {\n    this.code.push(`${target} = fmod(${left},${right});`);\n  }\n\n  public addUnary(target: string, left: any,) {\n    this.code.push(`${target} = ${left};`);\n  }\n\n\n  public addGoto(label: string) {\n    this.code.push(`goto ${label};`);\n  }\n\n  public addIf(left: any, right: any, operator: string, label: string) {\n    this.code.push(`if (${left} ${operator} ${right}) goto ${label};`);\n  }\n\n  public nextHeap() {\n    this.code.push('h = h + 1;');\n  }\n\n  public addGetHeap(target: any, index: any) {\n    this.code.push(`${target} = Heap[(int)${index}];`);\n  }\n\n  public addSetHeap(index: any, value: any) {\n    this.code.push(`Heap[(int)${index}] = ${value};`);\n  }\n\n  public addGetStack(target: any, index: any) {\n    this.code.push(`${target} = Stack[(int)${index}];`);\n  }\n\n  public addSetStack(index: any, value: any) {\n    this.code.push(`Stack[(int)${index}] = ${value};`);\n  }\n\n  public addNextEnv(size: number) {\n    this.code.push(`p = p + ${size};`);\n  }\n\n  public addPrevEnv(size: number) {\n    this.code.push(`p = p - ${size};`);\n  }\n\n  public addCall(id: string) {\n    this.code.push(` ${id}();`);\n  }\n\n  public addBegin(id: string) {\n    this.code.push(`\\nvoid ${id}(){`);\n  }\n\n  public addEnd() {\n    this.code.push(`return;\\n}\\n`);\n  }\n\n  public addPrint(format: string, value: any) {\n    this.code.push(`printf(\"%${format}\",${value});`);\n  }\n\n  public addPrintTrue() {\n    this.addPrint('c', 't'.charCodeAt(0));\n    this.addPrint('c', 'r'.charCodeAt(0));\n    this.addPrint('c', 'u'.charCodeAt(0));\n    this.addPrint('c', 'e'.charCodeAt(0));\n  }\n\n  public addPrintFalse() {\n    this.addPrint('c', 'f'.charCodeAt(0));\n    this.addPrint('c', 'a'.charCodeAt(0));\n    this.addPrint('c', 'l'.charCodeAt(0));\n    this.addPrint('c', 's'.charCodeAt(0));\n    this.addPrint('c', 'e'.charCodeAt(0));\n  }\n\n  public addComment(comment: string) {\n    this.code.push(`/***** ${comment} *****/`);\n  }\n\n  public freeTemp(temp: string) {\n    if (this.tempStorage.has(temp)) {\n      this.tempStorage.delete(temp);\n    }\n  }\n\n  public addTemp(temp: string) {\n    if (!this.tempStorage.has(temp))\n      this.tempStorage.add(temp);\n  }\n\n  public saveTemps(enviorement: Environment): number {\n    if (this.tempStorage.size > 0) {\n      const temp = this.newTemporal(); this.freeTemp(temp);\n      let size = 0;\n\n      this.addComment('BEGIN Saving temps');\n      this.addExpression(temp, 'p', enviorement.size, '+');\n      this.tempStorage.forEach((value) => {\n        size++;\n        this.addSetStack(temp, value);\n        if (size !== this.tempStorage.size)\n          this.addExpression(temp, temp, '1', '+');\n      });\n      this.addComment('END Saving temps');\n    }\n    let ptr = enviorement.size;\n    enviorement.size = ptr + this.tempStorage.size;\n    return ptr;\n  }\n\n  public recoverTemps(enviorement: Environment, pos: number) {\n    if (this.tempStorage.size > 0) {\n      const temp = this.newTemporal(); this.freeTemp(temp);\n      let size = 0;\n\n      this.addComment('BEGIN Recovering temps');\n      this.addExpression(temp, 'p', pos, '+');\n      this.tempStorage.forEach((value) => {\n        size++;\n        this.addGetStack(value, temp);\n        if (size !== this.tempStorage.size)\n          this.addExpression(temp, temp, '1', '+');\n      });\n      this.addComment('END Recovering temps');\n      enviorement.size = pos;\n    }\n  }\n\n  public addNative(n: Natives) {\n    this.natives[n] = true;\n  }\n\n  public getNatives(): string {\n    const natives: string[] = [];\n    this.natives.forEach((i, u) => {\n      if (i) {\n        switch (u) {\n          case 0:\n            natives.push(this.native_concat()); break\n          case 1:\n            natives.push(this.native_concat_str_bool()); break;\n          case 2:\n            natives.push(this.native_concat_bool_str()); break;\n          case 3:\n            natives.push(this.native_print_str()); break;\n          case 4:\n            natives.push(this.native_cmp_str()); break;\n          case 5:\n            natives.push(this.native_concat_num_str()); break;\n          case 6:\n            natives.push(this.native_concat_str_num()); break;\n        }\n      }\n    });\n    return natives.join(\"\\n\");\n  }\n\n\n  public native_concat(): string {\n    return `void native_concat()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L3:\n          if (N2 != -1)\n            goto L4;\n          goto L5;\n        L4:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L3;\n        L5:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_str_bool(): string {\n    return `void native_concat_str_bool()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          if (N1 == 1)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = 116;\n          h = h + 1;\n          Heap[(int)h] = 114;\n          h = h + 1;\n          Heap[(int)h] = 117;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n          goto L5;\n        L4:\n          Heap[(int)h] = 102;\n          h = h + 1;\n          Heap[(int)h] = 97;\n          h = h + 1;\n          Heap[(int)h] = 108;\n          h = h + 1;\n          Heap[(int)h] = 115;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n        L5:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_bool_str(): string {\n    return `void native_concat_bool_str()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N3 = h;\n          if (N1 == 1)\n            goto L0;\n          goto L1;\n        L0:\n          Heap[(int)h] = 116;\n          h = h + 1;\n          Heap[(int)h] = 114;\n          h = h + 1;\n          Heap[(int)h] = 117;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n          goto L2;\n        L1:\n          Heap[(int)h] = 102;\n          h = h + 1;\n          Heap[(int)h] = 97;\n          h = h + 1;\n          Heap[(int)h] = 108;\n          h = h + 1;\n          Heap[(int)h] = 115;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L5:\n          if (N2 != -1)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L5;\n        L4:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_print_str(): string {\n    return `void native_print_str()\n        {\n          N0 = p + 0;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          if (N2 != 92)\n            goto L3;\n          goto L4;\n        L4:\n          N3 = N1 + 1;\n          N2 = Heap[(int)N3];\n          if (N2 == -1)\n            goto L2;\n          goto L5;\n        L5:\n          if (N2 == 92)\n            goto L6;\n          goto L7;\n        L7:\n          if (N2 == 34)\n            goto L8;\n          goto L9;\n        L9:\n          if (N2 == 110)\n            goto L10;\n          goto L11;\n        L11:\n          if (N2 == 114)\n            goto L12;\n          goto L13;\n        L13:\n          if (N2 == 116)\n            goto L14;\n          goto L15;\n        L15:\n          N2 = Heap[(int)N1];\n          goto L3;\n        L6:\n          N1 = N1 + 1;\n          N2 = 92;\n          goto L3;\n        L8:\n          N1 = N1 + 1;\n          N2 = 34;\n          goto L3;\n        L10:\n          N1 = N1 + 1;\n          N2 = 10;\n          goto L3;\n        L12:\n          N1 = N1 + 1;\n          N2 = 10;\n          goto L3;\n        L14:\n          N1 = N1 + 1;\n          N2 = 9;\n          goto L3;\n        L3:\n          printf(\"%c\", (int)N2);\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          //printf(\"%c\", 10);\n          return;\n        }\\n`\n  }\n\n  public native_cmp_str(): string {\n    return `void native_cmp_str()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        \n          N3 = p + 2;\n          N4 = Stack[(int)N3];\n          N5 = Heap[(int)N4];\n          N6 = 1;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          if (N5 != -1)\n            goto L3;\n          goto L5;\n        L3:\n          if (N2 == N5)\n            goto L4;\n          goto L5;\n        L4:\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          N5 = Heap[(int)N1];\n          goto L0;\n        L2:\n          if (N5 == -1)\n            goto L6;\n          goto L5;\n        L5:\n          N6 = 0;\n        L6:\n          Stack[(int)p] = N6;\n          return;\n        }\\n`\n  }\n\n\n  public native_concat_num_str(): string {\n    return `void native_concat_num_str()\n        {\n          N7 = -1;\n          N1 = p + 1;\n          N2 = Stack[(int)N1];\n          N3 = h;\n          if (N2 < 0)\n            goto L0;\n          goto L1;\n        L0:\n          N7 = 45;\n          N2 = 0 - N2;\n        L1:\n          N4 = fmod(N2, 10);\n          N2 = N2 / 10;\n          Heap[(int)h] = N4 + 48;\n          h = h + 1;\n          if (N2 < 1)\n            goto L2;\n          goto L1;\n        L2:\n          N4 = h - N3;\n          N5 = h - N4;\n          N6 = h;\n          N3 = h;\n          if (N7 == 45)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = N7;\n          h = h + 1;\n        L4:\n          if (N5 != N6)\n            goto L5;\n          goto L6;\n        L5:\n          N6 = N6 - 1;\n          N2 = Heap[(int)N6];\n          Heap[(int)h] = N2;\n          h = h + 1;\n          goto L4;\n        L6:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        \n        L7:\n          if (N2 != -1)\n            goto L8;\n          goto L9;\n        L8:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L7;\n        L9:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_str_num(): string {\n    return `void native_concat_str_num()\n        {\n          N7 = -1;\n          N1 = p + 2;\n          N2 = Stack[(int)N1];\n          N3 = h;\n          if (N2 < 0)\n            goto L0;\n          goto L1;\n        L0:\n          N7 = 45;\n          N2 = 0 - N2;\n        L1:\n          N4 = fmod(N2, 10);\n          N2 = N2 / 10;\n          N4 = N4 + 48;\n          Heap[(int)h] = N4;\n          h = h + 1;\n          if (N2 < 1)\n            goto L2;\n          goto L1;\n        L2:\n          N4 = h - N3;\n          N5 = h - N4;\n          N6 = h;\n        \n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L3:\n          if (N2 != -1)\n            goto L4;\n          goto L5;\n        L4:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L3;\n        L5:\n          if (N7 == 45)\n            goto L6;\n          goto L7;\n        L6:\n          Heap[(int)h] = N7;\n          h = h + 1;\n        L7:\n          if (N5 != N6)\n            goto L8;\n          goto L9;\n        L8:\n          N6 = N6 - 1;\n          N2 = Heap[(int)N6];\n          Heap[(int)h] = N2;\n          h = h + 1;\n          goto L7;\n        L9:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { AssignVariable } from \"../variable/AssignVariable\";\nimport { DeclareVariable } from \"../variable/DeclareVariable\";\n\nexport class ForBody extends Instruction {\n    private left: AssignVariable | DeclareVariable\n    private condition: Expression\n    final: Expression\n    constructor(left: AssignVariable | DeclareVariable, condition: Expression, final: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.condition = condition\n        this.final = final\n    }\n\n    compile(env: Environment, instructions?: Instruction): void {\n        const generator = Generator.getInstance();\n        const lblFor = generator.newLabel();\n        this.left.compile(env);\n        generator.addLabel(lblFor);\n        const condition = this.condition.compile(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            env.break = condition.falseLabel;\n            env.continue = lblFor;\n            generator.addLabel(condition.trueLabel);\n\n            //@ts-ignore\n            instructions.compile(env);\n\n            this.final.compile(env).getValue();\n\n            generator.addGoto(lblFor);\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END For');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Condition found not boolean`);\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class If extends Instruction {\n    private condition: Expression\n    private instruction: Instruction\n    private elseIf: Instruction|null\n    constructor(condition: Expression, instruction: Instruction, elseIf: Instruction | null, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instruction = instruction\n        this.elseIf = elseIf\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        generator.addComment('BEGIN if');\n        const condition = this.condition?.compile(env); condition.getValue();\n        const newEnv = new Environment(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            generator.addLabel(condition.trueLabel);\n            this.instruction.compile(newEnv);\n            if (this.elseIf !== null) {\n                const tempLbl = generator.newLabel();\n                generator.addGoto(tempLbl);\n                generator.addLabel(condition.falseLabel);\n                this.elseIf.compile(env);\n                generator.addLabel(tempLbl);\n            }\n            else {\n                generator.addLabel(condition.falseLabel);\n            }\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', 'Condition found not boolean');\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class While extends Instruction {\n\n    constructor(private condition: Expression, private instruction: Instruction, line: number, column: number) {\n        super(line, column);\n    }\n\n    compile(env: Environment) : void{\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        const lblWhile = generator.newLabel();\n        generator.addComment('BEGIN while');\n        generator.addLabel(lblWhile);\n        const condition = this.condition.compile(env);\n        if(condition.type.type === Types.BOOLEAN){\n            newEnv.break = condition.falseLabel;\n            newEnv.continue = lblWhile;\n            generator.addLabel(condition.trueLabel);\n\n            this.instruction.compile(newEnv);\n\n            generator.addGoto(lblWhile);\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END while');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Condition found not boolean`);\n    }\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar interpreter = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[5,7],$V2=[1,23],$V3=[1,24],$V4=[1,25],$V5=[1,27],$V6=[1,28],$V7=[1,29],$V8=[1,30],$V9=[8,13,25,28,32,36,49,52],$Va=[1,53],$Vb=[1,52],$Vc=[1,51],$Vd=[8,38,53],$Ve=[2,39],$Vf=[1,58],$Vg=[10,18,37,38,39,40,41,42,43,44,45,46,51],$Vh=[18,29];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INICIO\":3,\"GLOBALES\":4,\"EOF\":5,\"DECLARAR_FUNCIONES\":6,\"void\":7,\"id\":8,\"(\":9,\")\":10,\"CUERPO\":11,\"{\":12,\"}\":13,\"INSTRUCCIONES\":14,\"INSTRUCCION\":15,\"LABEL\":16,\"IF\":17,\";\":18,\"GOTO\":19,\"FUNCION\":20,\"EXPRESION\":21,\"PRINT\":22,\"RETURN\":23,\":\":24,\"if\":25,\"VALOR\":26,\"RELATIONAL\":27,\"goto\":28,\"=\":29,\"ARITHMETIC\":30,\"STRUCTURE\":31,\"printf\":32,\"cadena\":33,\",\":34,\"CASTEO\":35,\"return\":36,\"+\":37,\"-\":38,\"*\":39,\"/\":40,\">\":41,\">=\":42,\"<\":43,\"<=\":44,\"==\":45,\"!=\":46,\"float\":47,\"int\":48,\"Stack\":49,\"[\":50,\"]\":51,\"Heap\":52,\"number\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"void\",8:\"id\",9:\"(\",10:\")\",12:\"{\",13:\"}\",18:\";\",24:\":\",25:\"if\",28:\"goto\",29:\"=\",32:\"printf\",33:\"cadena\",34:\",\",36:\"return\",37:\"+\",38:\"-\",39:\"*\",40:\"/\",41:\">\",42:\">=\",43:\"<\",44:\"<=\",45:\"==\",46:\"!=\",47:\"float\",48:\"int\",49:\"Stack\",50:\"[\",51:\"]\",52:\"Heap\",53:\"number\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,5],[11,2],[11,3],[14,2],[14,1],[15,1],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[16,2],[17,8],[19,2],[20,3],[21,5],[21,3],[21,3],[21,3],[22,7],[23,1],[30,1],[30,1],[30,1],[30,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[35,3],[35,3],[35,0],[31,5],[31,5],[26,1],[26,2],[26,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1]\nbreak;\ncase 3:\n$$[$0-1].push($$[$0]);this.$=$$[$0-1];\nbreak;\ncase 4:\nthis.$=[$$[$0]];\nbreak;\ncase 5:\nthis.$=new FunctionC3D($$[$0-4],$$[$0-3],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 6:\nthis.$=[]\nbreak;\ncase 7: case 11: case 12: case 13: case 14: case 15: case 16:\nthis.$=$$[$0-1]\nbreak;\ncase 8:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1];\nbreak;\ncase 9:\nthis.$ = [$$[$0]];\nbreak;\ncase 10: case 27: case 28: case 29: case 30: case 31: case 32: case 33: case 34: case 35: case 36:\nthis.$=$$[$0]\nbreak;\ncase 17:\nthis.$=new Label($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 18:\nthis.$=new Conditional($$[$0-5],$$[$0-4],$$[$0-3],$$[$0],_$[$0-7].first_line, _$[$0-7].first_column)\nbreak;\ncase 19:\nthis.$=new Goto($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 20:\nthis.$=new AccessC3D($$[$0-2],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 21:\nthis.$=new ExpressionC3D(_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-4],$$[$0-2],$$[$0],$$[$0-1])\nbreak;\ncase 22: case 23: case 24:\nthis.$=new ExpressionC3D(_$[$0-2].first_line, _$[$0-2].first_column,$$[$0-2],$$[$0])\nbreak;\ncase 25:\nthis.$=new Print($$[$0-4],$$[$0-1],_$[$0-6].first_line, _$[$0-6].first_column)\nbreak;\ncase 26:\nthis.$=new ReturnC3D(_$[$0].first_line, _$[$0].first_column)\nbreak;\ncase 37: case 38:\nthis.$=$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 39:\nthis.$=\"\"\nbreak;\ncase 40: case 41:\nthis.$=$$[$0-4]+\",\"+$$[$0-1]\nbreak;\ncase 42: case 44:\nthis.$ = $$[$0]\nbreak;\ncase 43:\nthis.$ = $$[$0-1]+$$[$0]\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:$V0},{1:[3]},{5:[1,6],6:7,7:$V0},{1:[2,2]},o($V1,[2,4]),{8:[1,8]},{1:[2,1]},o($V1,[2,3]),{9:[1,9]},{10:[1,10]},{11:11,12:[1,12]},o($V1,[2,5]),{8:$V2,13:[1,13],14:14,15:15,16:16,17:17,19:18,20:19,21:20,22:21,23:22,25:$V3,28:$V4,31:26,32:$V5,36:$V6,49:$V7,52:$V8},o($V1,[2,6]),{8:$V2,13:[1,31],15:32,16:16,17:17,19:18,20:19,21:20,22:21,23:22,25:$V3,28:$V4,31:26,32:$V5,36:$V6,49:$V7,52:$V8},o($V9,[2,9]),o($V9,[2,10]),{18:[1,33]},{18:[1,34]},{18:[1,35]},{18:[1,36]},{18:[1,37]},{18:[1,38]},{9:[1,40],24:[1,39],29:[1,41]},{9:[1,42]},{8:[1,43]},{29:[1,44]},{9:[1,45]},{18:[2,26]},{50:[1,46]},{50:[1,47]},o($V1,[2,7]),o($V9,[2,8]),o($V9,[2,11]),o($V9,[2,12]),o($V9,[2,13]),o($V9,[2,14]),o($V9,[2,15]),o($V9,[2,16]),o($V9,[2,17]),{10:[1,48]},{8:$Va,26:49,31:50,38:$Vb,49:$V7,52:$V8,53:$Vc},{8:$Va,26:54,38:$Vb,53:$Vc},{18:[2,19]},{8:$Va,26:55,38:$Vb,53:$Vc},{33:[1,56]},o($Vd,$Ve,{35:57,9:$Vf}),o($Vd,$Ve,{35:59,9:$Vf}),{18:[2,20]},{18:[2,22],30:60,37:[1,61],38:[1,62],39:[1,63],40:[1,64]},{18:[2,23]},o($Vg,[2,42]),{53:[1,65]},o($Vg,[2,44]),{27:66,41:[1,67],42:[1,68],43:[1,69],44:[1,70],45:[1,71],46:[1,72]},{18:[2,24]},{34:[1,73]},{8:$Va,26:74,38:$Vb,53:$Vc},{47:[1,75],48:[1,76]},{8:$Va,26:77,38:$Vb,53:$Vc},{8:$Va,26:78,38:$Vb,53:$Vc},o($Vd,[2,27]),o($Vd,[2,28]),o($Vd,[2,29]),o($Vd,[2,30]),o($Vg,[2,43]),{8:$Va,26:79,38:$Vb,53:$Vc},o($Vd,[2,31]),o($Vd,[2,32]),o($Vd,[2,33]),o($Vd,[2,34]),o($Vd,[2,35]),o($Vd,[2,36]),o($Vd,$Ve,{35:80,9:$Vf}),{51:[1,81]},{10:[1,82]},{10:[1,83]},{51:[1,84]},{18:[2,21]},{10:[1,85]},{8:$Va,26:86,38:$Vb,53:$Vc},o($Vh,[2,40]),o($Vd,[2,37]),o($Vd,[2,38]),o($Vh,[2,41]),{28:[1,87]},{10:[1,88]},{8:[1,89]},{18:[2,25]},{18:[2,18]}],\ndefaultActions: {3:[2,2],6:[2,1],28:[2,26],43:[2,19],48:[2,20],50:[2,23],55:[2,24],78:[2,21],88:[2,25],89:[2,18]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n    const {FunctionC3D} = require('../interpreter/instruction/Function');\n    const {Conditional} = require('../interpreter/instruction/Conditional');\n    const {Label} = require('../interpreter/instruction/Label');\n    const {Goto} = require('../interpreter/instruction/Goto');\n    const {AccessC3D} = require('../interpreter/instruction/Access');\n    const {Print} = require('../interpreter/instruction/Print');\n    const {ReturnC3D} = require('../interpreter/instruction/Return');\n    const {ExpressionC3D} = require('../interpreter/instruction/Expression');\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// ignora los espacios en blanco\nbreak;\ncase 1:// comentario de linea\nbreak;\ncase 2:// comentario de multiples lineas\t\nbreak;\ncase 3:return 53\nbreak;\ncase 4:return 'double'\nbreak;\ncase 5:return 7\nbreak;\ncase 6:return 48\nbreak;\ncase 7:return 47\nbreak;\ncase 8:return \"return\"\nbreak;\ncase 9:return \"if\";\nbreak;\ncase 10:return \"goto\";\nbreak;\ncase 11:return \"Stack\";\nbreak;\ncase 12:return \"Heap\";\nbreak;\ncase 13:return \"printf\"\nbreak;\ncase 14:return \",\"\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return \";\";\nbreak;\ncase 17:return 12;\nbreak;\ncase 18:return 13;\nbreak;\ncase 19:return 9;\nbreak;\ncase 20:return 10;\nbreak;\ncase 21:return 50\nbreak;\ncase 22:return 51                   \nbreak;\ncase 23:return 44;\nbreak;\ncase 24:return 42;\nbreak;\ncase 25:return 45;\nbreak;\ncase 26:return 46;\nbreak;\ncase 27:return 37;\nbreak;\ncase 28:return 38;\nbreak;\ncase 29:return 39;\nbreak;\ncase 30:return 40;\nbreak;\ncase 31:return 43;\nbreak;\ncase 32:return 41;\nbreak;\ncase 33:return 29;\nbreak;\ncase 34: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 33; \nbreak;\ncase 35:return 8;\nbreak;\ncase 36:return 5;\nbreak;\ncase 37:return 'ERROR'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/,/^(?:(([0-9]+)(\\.([0-9]+))?))/,/^(?:double\\b)/,/^(?:void\\b)/,/^(?:int\\b)/,/^(?:float\\b)/,/^(?:return\\b)/,/^(?:if\\b)/,/^(?:goto\\b)/,/^(?:Stack\\b)/,/^(?:Heap\\b)/,/^(?:printf\\b)/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:<=)/,/^(?:>=)/,/^(?:==)/,/^(?:!=)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:<)/,/^(?:>)/,/^(?:=)/,/^(?:\"([^\\\\\\\"]|\\\\.)*\")/,/^(?:([a-zA-Z_])[a-zA-Z0-9_]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = interpreter;\nexports.Parser = interpreter.Parser;\nexports.parse = function () { return interpreter.parse.apply(interpreter, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class Conditional extends InstructionC3D {\n\n    private left: string\n    private relational: string\n    private right: string\n    private label: string\n\n    constructor(left: string, relational: string, right: string, label: string, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n        this.relational = relational\n        this.label = label\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        const result = interpreter.evaluateConditional(this.left, this.relational, this.right)\n        return {\n            type: Type.GOTO, content: { goto: result, label: this.label }\n        }\n    }\n    public getDestination() {\n        return this.label;\n    }\n\n    public getLeft() {\n        return this.left;\n    }\n    public getRight() {\n        return this.right;\n    }\n    public getRelational() {\n        return this.relational;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class Goto extends InstructionC3D {\n    private label: string\n    constructor(label: string, line: number, column: number) {\n        super(line, column);\n        this.label = label\n    }\n\n    debug() {\n        return {\n            type: Type.GOTO, content: { goto: true, label: this.label }\n        }\n    }\n\n    public getDestination() {\n        return this.label;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class AccessC3D extends InstructionC3D {\n    private id\n    constructor(id: string, line: number, column: number) {\n        super(line, column);\n        this.id = id\n    }\n\n    debug() {\n        return { type: Type.ACCESS, content: this.id }\n    }\n\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class Print extends InstructionC3D {\n    private str: string\n    private value: string\n    constructor(str: string, value: string, line: number, column: number) {\n        super(line, column);\n        this.str = str\n        this.value = value\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        interpreter.setOutput(this.str, this.value)\n        return { type: Type.CONSOLE }\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from '../Interpreter'\nexport class ReturnC3D extends InstructionC3D {\n    constructor(line: number, column: number) {\n        super(line, column);\n    }\n    debug() { \n        return {type:Type.RETURN}\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class ExpressionC3D extends InstructionC3D {\n\n    private target: string;\n    private left: string;\n    private right: string;\n    private op: string\n\n    constructor(line: number, column: number, target: string, left: string, right: string = '', op: string = '') {\n        super(line, column);\n        this.target = target\n        this.left = left\n        this.right = right\n        this.op = op\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        interpreter.evaluateExpresssion(this.target, this.left, this.right, this.op)\n        return { type: Type.EXPRESSION }\n    }\n}","import { Instruction } from \"./abstract/Instruction\";\nimport { DeclareFunction } from \"./actions/instruction/function/DeclareFunction\";\nimport { Environment } from \"./Environment\";\nimport { Generator } from \"./Generator\";\nimport { Logs } from \"./utils/LogArray\";\nconst parser = require(\"../grammar/grammar\");\n\n/*\nfunction a(n:number):number{\n    return n;\n}\nconsole.log(a(1));\n*/\nexport class Compiler {\n  private code: string\n  private output: string\n  constructor(code: string) {\n    this.code = code\n    this.output = ''\n  }\n  compile() {\n    Logs.length = 0\n    let node;\n    try {\n      node = parser.parse(this.code);\n    } catch (error) {\n      Logs.push(error)\n      return { state: false, message: 'There was an error while parsing your input!' };\n    }\n    const generator = Generator.getInstance();\n    generator.clearCode();\n    const env = new Environment(null);\n    try {\n      node.forEach((e: Instruction) => {\n        if (e instanceof DeclareFunction) e.compile(env);\n      });\n      generator.addBegin(\"main\");\n      node.forEach((e: Instruction) => {\n        e.compile(env);\n      });\n      generator.addEnd();\n    } catch (error) {\n      Logs.push(error)\n      return { state: false, message: 'There was an error while generating your TAC!' };\n    }\n    const functions = generator.getFunctions();\n    const code = generator.getCode();\n    const labelCount = generator.getTemporal();\n    //this.code = this.header(labelCount - 1) + functions + code;\n    this.output = functions + code;\n    return { state: true, message: 'TAC generated successfully!' };\n  }\n  getOutput() {\n    return this.output;\n  }\n  private header(n: number) {\n    let header =\n      \"#include <stdio.h>\\n\" +\n      \"#include <math.h> \\n\" +\n      \"double Heap[170720]; \\n\" +\n      \"double Stack[170720];\\n\" +\n      \"double p;\\n\" +\n      \"double h;\\n\" +\n      \"double N0,N1,N2,N3,N4,N5,N6,N7;\\n\";\n    header += n > -1 ? \"double \" + this.setTemp(n) : \"\";\n    return header;\n  }\n  private setTemp(n: number) {\n    let i = 0;\n    let header = \"\";\n    while (i <= n) {\n      header += \"T\" + i;\n      if (i !== n) header += \", \";\n      else header += \";\\n\";\n      i++;\n    }\n    return header;\n  }\n}\n\nexport default Compiler;\n","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\n\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\n\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport Compiler from \"../../compiler/Compiler\";\nimport Beautify from \"ace-builds/src-noconflict/ext-beautify\";\nimport \"./Home.css\";\nimport { Interpreter } from \"../../interpreter/Interpreter\";\nimport { BsGearWideConnected } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Logs } from \"../../compiler/utils/LogArray\";\nimport { ErrorTS } from \"../../compiler/utils/Error\";\n\ninterface IProps {}\n\ninterface IState {\n  input: string;\n  output: string;\n  currentLine: number;\n  isDebugging: boolean;\n  stack: number[];\n  heap: number[];\n  variables: Map<string, number>;\n  console: string;\n  resized: boolean;\n  canMoveForward: boolean;\n}\n\nexport class Home extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\",\n      currentLine: 0,\n      isDebugging: false,\n      stack: [],\n      heap: [],\n      console: \"\",\n      variables: new Map(),\n      resized: false,\n      canMoveForward: false,\n    };\n  }\n\n  sleep = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  handleCompile = async () => {\n    const { input } = this.state;\n    if (!input) {\n      toast.warning(\"Input editor is empty!\");\n      return;\n    }\n    const compiler = new Compiler(input);\n    const result = compiler.compile();\n    const { state, message } = result;\n    if (!state) {\n      toast.error(message);\n      Logs.forEach((e:ErrorTS)=>{\n        toast.error(e.toString());\n      })\n      return;\n    }\n    toast.success(message);\n    const output = compiler.getOutput();\n\n    this.setState({ output, isDebugging: false });\n    await this.sleep(0.01);\n    this.handleBeautify(true);\n  };\n\n  handleDebug = () => {\n    let { isDebugging, canMoveForward } = this.state;\n    if (!canMoveForward) {\n      if (isDebugging) {\n        toast.warning(`You've reached the end, please, start again`);\n      } else {\n        toast.warning(`First, you must start debbuging!`);\n      }\n      return;\n    }\n    const interpreter = Interpreter.getInstance();\n    const currentLine = interpreter.goForward() - 1;\n    const hasEnded = interpreter.getEnd();\n    const console = interpreter.getConsole();\n    const sessionRef = this.refs.output;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    editor.scrollToLine(currentLine, true, true, function () {});\n    if (hasEnded) {\n      isDebugging = !isDebugging;\n      canMoveForward = !canMoveForward;\n    }\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      currentLine,\n      console,\n      isDebugging,\n      canMoveForward,\n    });\n  };\n\n  handleEnd = () => {\n    let { isDebugging, canMoveForward } = this.state;\n    if (!canMoveForward) {\n      if (isDebugging) {\n        toast.warning(`You've reached the end, please, start again`);\n      } else {\n        toast.warning(`First, you must start debbuging!`);\n      }\n      return;\n    }\n    isDebugging = !isDebugging;\n    canMoveForward = !canMoveForward;\n    const interpreter = Interpreter.getInstance();\n    const currentLine = interpreter.finishExecution()-1\n    const console = interpreter.getConsole();\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      currentLine,\n      console,\n      isDebugging,\n      canMoveForward,\n    });\n  };\n\n  handleStart = () => {\n    const { output } = this.state;\n    if (!output) {\n      toast.warning(\"Output editor is empty!\");\n      return;\n    }\n    const interpreter = Interpreter.getInstance();\n    const { line, state, message } = interpreter.restart(output);\n    if (!state) {\n      toast.error(message);\n      return;\n    }\n    const sessionRef = this.refs.output;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    editor.scrollToLine(line - 1, true, true, function () {});\n    let { isDebugging, canMoveForward } = this.state;\n    canMoveForward = isDebugging ? false : true;\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      isDebugging: !isDebugging,\n      currentLine: line - 1,\n      canMoveForward,\n      console: \"\",\n    });\n  };\n\n  handleInput = (e: any) => {\n    this.setState({ input: e });\n  };\n  handleOutput = (e: any) => {\n    this.setState({ output: e });\n  };\n  handleLine = () => {\n    this.setState({ currentLine: this.state.currentLine + 1 });\n  };\n  handleBeautify = async (origin: boolean) => {\n    const sessionRef = origin ? this.refs.output : this.refs.input;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    Beautify.beautify(editor.session);\n    const content = editor.getSession().getValue();\n    origin\n      ? this.setState({ output: content })\n      : this.setState({ input: content });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    const { resized } = this.state;\n    if (window.innerWidth <= 760 && !resized) {\n      toast.warning(\"Ahora en español, no lo haga compa :c\");\n      this.setState({ resized: true });\n    } else if (window.innerWidth > 760 && resized) {\n      this.setState({ resized: false });\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  render() {\n    let { heap, stack, isDebugging, variables, canMoveForward } = this.state;\n    const renderStack = stack.map((e, u) => {\n      return (\n        <tr>\n          <td>{u} </td>\n          <td>{e}</td>\n        </tr>\n      );\n    });\n\n    const renderHeap = heap.map((e, u) => {\n      return (\n        <tr>\n          <td>{u} </td>\n          <td>{e}</td>\n        </tr>\n      );\n    });\n    const renderVariables = Array.from(variables.keys()).map((key) => {\n      return (\n        <tr>\n          <td>{key} </td>\n          <td>{variables.get(key)}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <>\n        <nav>\n          <h1>TAC demo</h1>\n          <ul>\n            <li>\n              <a href=\"https://github.com/einjunge99/mistery-box\">\n                Code avaiable here\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div>\n            <div className=\"compile-title\" onClick={this.handleCompile}>\n              <h2>\n                Compile <BsGearWideConnected className=\"gear-icon\" />\n              </h2>\n            </div>\n            <div className=\"options\">\n              <div className=\"start-title\" onClick={this.handleStart}>\n                {isDebugging ? \"Restart\" : \"Start\"}\n              </div>\n              <div\n                style={canMoveForward ? { opacity: 1 } : { opacity: 0.4 }}\n                className=\"forward-title\"\n                onClick={this.handleDebug}\n              >\n                Next Line\n              </div>\n              <div\n                style={canMoveForward ? { opacity: 1 } : { opacity: 0.4 }}\n                className=\"forward-title\"\n                onClick={this.handleEnd}\n              >\n                End Execution\n              </div>\n            </div>\n            <div className=\"content-container\">\n              <div className=\"ace-container\">\n                <AceEditor\n                  ref=\"input\"\n                  width=\"500px\"\n                  height=\"400px\"\n                  mode=\"typescript\"\n                  theme=\"twilight\"\n                  showPrintMargin={false}\n                  onChange={this.handleInput}\n                  highlightActiveLine={true}\n                  editorProps={{ $blockScrolling: true }}\n                  commands={[\n                    {\n                      name: \"beautify\",\n                      bindKey: { win: \"shift-Alt-f\", mac: \"shift-Alt-f\" },\n                      exec: () => this.handleBeautify(false),\n                    },\n                  ]}\n                />\n                <AceEditor\n                  ref=\"output\"\n                  mode=\"c_cpp\"\n                  theme=\"twilight\"\n                  width=\"500px\"\n                  height=\"400px\"\n                  onChange={this.handleOutput}\n                  showPrintMargin={false}\n                  value={this.state.output}\n                  highlightActiveLine={true}\n                  editorProps={{ $blockScrolling: true }}\n                  markers={[\n                    {\n                      startRow: this.state.currentLine,\n                      startCol: 0,\n                      endRow: this.state.currentLine,\n                      endCol: 100,\n                      className: \"replacement_marker\",\n                      type: \"text\",\n                    },\n                  ]}\n                />\n              </div>\n              <div>\n                <div className=\"structure-wrapper example\">\n                  <table className=\"structure-table\">\n                    <caption>Stack</caption>\n                    <thead>\n                      <tr>\n                        <th>i</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderStack}</tbody>\n                  </table>\n                </div>\n              </div>\n              <div>\n                <div className=\"structure-wrapper example\">\n                  <table className=\"structure-table\">\n                    <caption>Heap</caption>\n                    <thead>\n                      <tr>\n                        <th>i</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderHeap}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div className=\"content-container\">\n              <AceEditor\n                mode=\"typescript\"\n                theme=\"tomorrow\"\n                width=\"1000px\"\n                height=\"200px\"\n                showPrintMargin={false}\n                value={this.state.console}\n                highlightActiveLine={true}\n                editorProps={{ $blockScrolling: true }}\n                markers={[\n                  {\n                    startRow: this.state.currentLine,\n                    startCol: 0,\n                    endRow: this.state.currentLine,\n                    endCol: 100,\n                    className: \"replacement_marker\",\n                    type: \"text\",\n                  },\n                ]}\n              />\n              <div>\n                <div className=\"variable-wrapper example\">\n                  <table className=\"variable-table\">\n                    <caption>Variables</caption>\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderVariables}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ToastContainer />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from \"./views/Home/Home\";\n\nfunction App() {\n  return (\n      <Home/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","\nexport class ErrorTS {\n    public line: number;\n    public column: number;\n    public type: string;\n    public description: string\n    constructor(line: number, column: number, type: string, description: string) {\n        this.line = line\n        this.column = column\n        this.type = type\n        this.description = description\n    }\n\n    public toString(): string {\n        return `[ERR]: ${this.type}, ${this.description} (line: ${this.line}, column:${this.column})\\n`;\n    }\n}","\nimport { Symbol } from \"../symbol/Symbol\";\nimport { Generator } from \"../Generator\";\nimport { Type } from \"./Type\";\n\nexport class Return {\n  trueLabel: string;\n  falseLabel: string;\n  value: string;\n  isTemp: boolean;\n  type: Type\n  symbol: Symbol | null\n  constructor(value: string, isTemp: boolean, type: Type, symbol: Symbol | null = null) {\n    this.trueLabel = this.falseLabel = \"\";\n    this.value = value;\n    this.isTemp = isTemp;\n    this.type = type;\n    this.symbol = symbol\n  }\n\n  getValue() {\n    Generator.getInstance().freeTemp(this.value);\n    return this.value;\n  }\n}\n"],"sourceRoot":""}