{"version":3,"sources":["compiler/utils/Type.ts","compiler/abstract/Expression.ts","compiler/abstract/Instruction.ts","interpreter/Interpreter.ts","interpreter/Abstract/Instruction.ts","compiler/symbol/SymbolFunction.ts","compiler/symbol/Symbol.ts","compiler/Environment.ts","compiler/utils/LogArray.ts","compiler/actions/instruction/function/DeclareFunction.ts","interpreter/instruction/Function.ts","interpreter/instruction/Label.ts","grammar/grammar.js","compiler/utils/Param.ts","compiler/actions/instruction/transfer/Break.ts","compiler/actions/instruction/transfer/Continue.ts","compiler/actions/instruction/transfer/Return.ts","compiler/actions/instruction/Call.ts","compiler/actions/instruction/Console.ts","compiler/actions/instruction/Statement.ts","compiler/actions/expression/logical/And.ts","compiler/actions/expression/logical/Or.ts","compiler/actions/expression/logical/Not.ts","compiler/actions/expression/arithmetic/Plus.ts","compiler/actions/expression/arithmetic/Mul.ts","compiler/actions/expression/arithmetic/Div.ts","compiler/actions/expression/arithmetic/Minus.ts","compiler/actions/expression/arithmetic/Neg.ts","compiler/actions/expression/arithmetic/Inc.ts","compiler/actions/expression/arithmetic/Dec.ts","compiler/actions/expression/relational/Equals.ts","compiler/actions/expression/relational/NotEquals.ts","compiler/actions/expression/relational/Less.ts","compiler/actions/expression/relational/Great.ts","compiler/actions/expression/literal/Primitive.ts","compiler/actions/expression/literal/Complex.ts","compiler/actions/instruction/variable/DeclareVariable.ts","compiler/actions/instruction/variable/AssignVariable.ts","compiler/actions/expression/access/AccessVariable.ts","compiler/actions/expression/access/AccessFunction.ts","compiler/actions/instruction/control/DoWhile.ts","compiler/actions/instruction/control/For.ts","compiler/actions/instruction/control/ForBody.ts","compiler/Generator.ts","compiler/actions/instruction/control/If.ts","compiler/actions/instruction/control/While.ts","grammar/interpreter.js","interpreter/instruction/Conditional.ts","interpreter/instruction/Goto.ts","interpreter/instruction/Access.ts","interpreter/instruction/Print.ts","interpreter/instruction/Return.ts","interpreter/instruction/Expression.ts","compiler/Compiler.ts","views/Home/Home.tsx","App.tsx","index.tsx","compiler/utils/Error.ts","compiler/utils/Return.ts"],"names":["Types","Type","type","this","getType","str","NUMBER","STRING","BOOLEAN","VOID","Expression","line","column","trueLabel","falseLabel","left","right","Instruction","parser","require","Interpreter","functions","currentIndex","stack","heap","variables","logs","input","console","end","Map","setupFunctions","node","parse","error","state","message","forEach","e","i","FunctionC3D","push","getId","getLine","set","name","goForward","currentFunction","currentInstruction","getInstruction","getIndex","result","debug","ACCESS","functionIndex","instructionIndex","resetIndex","searchFunction","content","RETURN","pop","setIndex","GOTO","goto","goToLabel","label","relational","leftSearch","get","leftValue","undefined","rightSearch","rightValue","getRelationalResult","target","op","isStructure","splitted","split","targetSearch","targetValue","whichStructure","getArithmeticResult","cast","value","includes","String","fromCharCode","structure","startsWith","interpreter","InstructionC3D","SymbolFunction","func","id","size","params","length","Symbol","identifier","position","isConst","isGlobal","isHeap","Environment","previous","break","continue","return","actualFunction","ret","newVar","env","sym","has","Logs","DeclareFunction","body","preCompile","validateParams","addFunction","ErrorTS","generator","Generator","getInstance","newEnv","symbolFunction","getFunction","returnlbl","newLabel","tempStorage","getTempStorage","setEnvironmentFunction","param","addVariable","clearTempStorage","auxCode","saveCode","clearPrevious","addBegin","compile","addLabel","addEnd","setCode","setTempStorage","Set","add","instr","Label","getLabel","LABEL","grammar","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","Call","first_line","first_column","Break","Continue","While","DoWhile","If","For","ForBody","Statement","Console","And","Or","Plus","Minus","Mul","Div","Great","Less","Equals","NotEquals","Neg","Not","Inc","Dec","Primitive","Complex","AssignVariable","AccessFunction","AccessVariable","ReturnTS","DeclareVariable","Param","table","defaultActions","parseError","hash","recoverable","Error","self","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","loc","Array","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","log","process","exit","source","readFileSync","normalize","module","argv","enviorement","addGoto","Return","sameType","templabel","addSetStack","getValue","j","addPrint","addPrintTrue","addPrintFalse","addNextEnv","addCall","addNative","Natives","print_str","addPrevEnv","instructions","instruction","auxReturn","temp","tempAux","newTemporal","addExpression","freeTemp","concat_num_str","addGetStack","lblTemp","concat_str_num","concat_str_bool","tempBoolean","concat_bool_str","assign","addSetHeap","addIf","cmp_str","isLessEqual","lefType","rightType","operator","isGrtEqual","NULL","charCodeAt","nextHeap","access","compiled","newVariable","ptr","getVariable","paramsValues","saveTemps","registeredLength","incomingLength","compiledParam","registeredType","incomingType","recoverTemps","addTemp","addComment","final","lblFor","temporal","code","natives","clearNatives","clear","getNatives","format","comment","delete","pos","u","native_concat","native_concat_str_bool","native_concat_bool_str","native_print_str","native_cmp_str","native_concat_num_str","native_concat_str_num","elseIf","tempLbl","lblWhile","Conditional","Goto","AccessC3D","ExpressionC3D","Print","ReturnC3D","evaluateConditional","setOutput","CONSOLE","evaluateExpresssion","EXPRESSION","Compiler","output","clearCode","getFunctions","getCode","header","setTemp","Home","props","sleep","ms","Promise","resolve","setTimeout","handleCompile","a","toast","warning","compiler","success","getOutput","setState","isDebugging","handleBeautify","handleDebug","canMoveForward","currentLine","hasEnded","getEnd","getConsole","refs","editor","scrollToLine","getStack","getHeap","getVariables","handleEnd","finishExecution","handleStart","restart","handleInput","handleOutput","handleLine","origin","sessionRef","Beautify","beautify","session","getSession","resized","renderStack","map","renderHeap","renderVariables","from","keys","key","href","className","onClick","style","opacity","ref","width","height","mode","theme","showPrintMargin","onChange","highlightActiveLine","editorProps","$blockScrolling","commands","bindKey","win","mac","exec","markers","startRow","startCol","endRow","endCol","Component","App","ReactDOM","render","StrictMode","document","getElementById","description","isTemp"],"mappings":"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","file":"static/js/main.572d3a6c.chunk.js","sourcesContent":["export enum Types {\n    NUMBER = \"number\",\n    STRING = \"string\",\n    BOOLEAN = \"boolean\",\n    VOID = \"void\",\n    NULL = 'null'\n}\n\nexport class Type {\n    type: Types;\n    constructor(type: Types) {\n        this.type = type\n    }\n}\n\nexport function getType(str: string) {\n    switch (str) {\n        case 'number':\n            return new Type(Types.NUMBER)\n        case 'string':\n            return new Type(Types.STRING)\n        case 'boolean':\n            return new Type(Types.BOOLEAN)\n        case 'void':\n            return new Type(Types.VOID)\n    }\n}\n","import { Environment } from \"../Environment\";\nimport { Return } from \"../utils/Return\";\nimport { Type } from \"../utils/Type\";\n\nexport abstract class Expression {\n    trueLabel: string;\n    falseLabel: string;\n    line: number;\n    column: number;\n\n    constructor(line: number, column: number) {\n        this.trueLabel = this.falseLabel = \"\";\n        this.line = line;\n        this.column = column;\n    }\n\n    public sameType(left: Type, right: Type): boolean {\n        if (left.type === right.type) return true;\n        return false;\n      }    \n\n    public abstract compile(env: Environment): Return;\n\n}\n","import { Environment } from \"../Environment\";\nimport { Type } from \"../utils/Type\";\n\nexport abstract class Instruction {\n  line: number;\n  column: number;\n\n  constructor(line: number, column: number) {\n    this.line = line;\n    this.column = column;\n  }\n\n  public sameType(left: Type, right: Type): boolean {\n    if (left.type === right.type) return true;\n    return false;\n  }\n\n  public abstract compile(env: Environment): any;\n}\n","import { InstructionC3D } from \"./Abstract/Instruction\"\nimport { FunctionC3D } from \"./instruction/Function\"\nconst parser = require(\"../grammar/interpreter\");\nexport enum Type {\n    RETURN = 'return',\n    ACCESS = 'access',\n    GOTO = 'goto',\n    EXPRESSION = 'expression',\n    LABEL = 'label',\n    CONSOLE = 'console'\n}\n\nexport class Interpreter {\n    private static interpreter: Interpreter\n    private functions: FunctionC3D[]\n    private currentIndex: number\n    stack: number[]\n    heap: number[]\n    variables: Map<string, number>;\n    logs: any[]\n    input: string\n    console: string\n    end: boolean\n\n    private constructor() {\n        this.functions = []\n        this.currentIndex = 0\n        this.stack = []\n        this.heap = []\n        this.variables = new Map()\n        this.logs = []\n        this.input = ''\n        this.console = ''\n        this.end = false\n    }\n\n    public restart(input: string) {\n        this.input = input\n        this.functions = []\n        this.currentIndex = 0\n        this.stack = []\n        this.heap = []\n        this.variables = new Map()\n        this.logs = []\n        this.console = ''\n        this.end = false\n\n        return this.setupFunctions(input)\n    }\n\n    public static getInstance() {\n        return this.interpreter || (this.interpreter = new this())\n    }\n\n    public setupFunctions(input: string) {\n        let line: number = -1;\n        let node;\n        try {\n            node = parser.parse(input);\n        } catch (error) {\n            return { state: false, message: 'There was an error while generating your TAC!', line };\n        }\n        node.forEach((e: InstructionC3D, i: number) => {\n            if (e instanceof FunctionC3D) {\n                this.functions.push(e)\n                if (e.getId() === 'main') {\n                    line = e.getLine()\n                    this.currentIndex = i\n                }\n            }\n        });\n        this.variables.set('p', 0)\n        this.variables.set('h', 0)\n        if (line === -1) return { state: false, message: 'main function not found', line };\n        return { state: true, message: 'TAC generated successfully!', line };\n\n    }\n\n    private searchFunction(name: string) {\n        this.functions.forEach((e, i) => {\n            if (e.getId() === name) this.currentIndex = i\n        });\n    }\n\n    public finishExecution() {\n        let line = 0;\n        while (!this.end) {\n            line = this.goForward()\n        }\n        return line\n    }\n\n    public goForward() {\n        const currentFunction: FunctionC3D = this.functions[this.currentIndex]\n        const currentInstruction: InstructionC3D = currentFunction.getInstruction()\n        const i = currentFunction.getIndex()\n        const result = currentInstruction.debug()\n        if (result?.type === Type.ACCESS) {\n            this.logs.push({ functionIndex: this.currentIndex, instructionIndex: i })\n            currentFunction.resetIndex()\n            this.searchFunction(result.content)\n        }\n        else if (result?.type === Type.RETURN) {\n            if (currentFunction.getId() === 'main') { this.end = true; return currentInstruction.getLine() }\n            const { functionIndex, instructionIndex } = this.logs.pop()\n            this.currentIndex = functionIndex\n            this.functions[this.currentIndex].setIndex(instructionIndex)\n        }\n        else if (result?.type === Type.GOTO && result.content.goto) {\n            currentFunction.goToLabel(result.content.label)\n        }\n        return currentInstruction.getLine()\n    }\n\n    public evaluateConditional(left: string, relational: string, right: string): boolean {\n        const leftSearch = this.variables.get(left)\n        const leftValue = leftSearch !== undefined ? leftSearch : +left\n\n        const rightSearch = this.variables.get(right)\n        const rightValue = rightSearch !== undefined ? rightSearch : +right\n        return this.getRelationalResult(leftValue, rightValue, relational)\n    }\n\n    public evaluateExpresssion(target: string, left: string, right: string, op: string) {\n\n        const targetIsStructure: boolean = this.isStructure(target)\n        if (!targetIsStructure) {\n            const leftIsStructure = this.isStructure(left)\n            let leftSearch: number | undefined\n            let leftValue: number\n            if (leftIsStructure) {\n                const splitted = left.split(',')\n                leftSearch = this.variables.get(splitted[1])\n                leftValue = leftSearch !== undefined ? leftSearch : +splitted[1]\n                leftValue = this.whichStructure(left) ? this.heap[leftValue] : this.stack[leftValue]\n            }\n            else {\n                leftSearch = this.variables.get(left)\n                leftValue = leftSearch !== undefined ? leftSearch : +left\n            }\n            if (right === '') { this.variables.set(target, leftValue); return }\n            const rightSearch = this.variables.get(right)\n            const rightValue = rightSearch !== undefined ? rightSearch : +right\n            const result = this.getArithmeticResult(leftValue, rightValue, op)\n            this.variables.set(target, result); return\n        }\n\n        const leftSearch = this.variables.get(left)\n        const leftValue = leftSearch !== undefined ? leftSearch : +left\n        const splitted = target.split(',')\n        const targetSearch = this.variables.get(splitted[1])\n        const targetValue = targetSearch !== undefined ? targetSearch : +splitted[1]\n        this.whichStructure(target) ? this.heap[targetValue] = leftValue : this.stack[targetValue] = leftValue\n\n    }\n\n    private getRelationalResult(left: number, right: number, op: string): boolean {\n        switch (op) {\n            case '<=':\n                return left <= right\n            case '>=':\n                return left >= right\n            case '<':\n                return left < right\n            case '>':\n                return left > right\n            case '!=':\n                return left !== right\n            case '==':\n                return left === right\n        }\n        return false;\n    }\n\n    private getArithmeticResult(left: number, right: number, op: string): number {\n        switch (op) {\n            case '+':\n                return left + right\n            case '-':\n                return left - right\n            case '*':\n                return left * right\n            case '/':\n                return left / right\n        }\n        return 0;\n    }\n\n    public setOutput(cast: string, value: string) {\n        const leftSearch = this.variables.get(value)\n        const leftValue = leftSearch !== undefined ? leftSearch : +value\n        if (cast.includes('%f')) this.console += leftValue\n        if (cast.includes('%c')) this.console += String.fromCharCode(leftValue)\n    }\n\n    private isStructure(structure: string): boolean {\n        return structure.startsWith('Heap') || structure.startsWith('Stack')\n    }\n    private whichStructure(structure: string): boolean {\n        return structure.startsWith('Heap')\n    }\n    public getHeap() {\n        return this.heap\n    }\n    public getStack() {\n        return this.stack\n    }\n    public getVariables() {\n        return this.variables\n    }\n    public getConsole() {\n        return this.console\n    }\n\n    public getEnd() {\n        return this.end\n    }\n\n}","export abstract class InstructionC3D {\n    line: number;\n    column: number\n    constructor(line: number, column: number) {\n        this.line = line\n        this.column = column\n    }\n\n    public getLine() {\n        return this.line\n    }\n    public abstract debug(): any;\n}","import { DeclareFunction } from \"../actions/instruction/function/DeclareFunction\";\nimport { Param } from \"../utils/Param\";\nimport { Type } from \"../utils/Type\";\n\nexport class SymbolFunction {\n  type: Type;\n  id: string;\n  size: number;\n  params: Array<Param>;\n  column: number;\n  line: number;\n  constructor(func: DeclareFunction) {\n    this.type = func.type;\n    this.id = func.id;\n    this.size = func.params.length;\n    this.params = func.params;\n    this.column = func.column;\n    this.line = func.line;\n  }\n}\n","import { Type } from \"../utils/Type\";\n\nexport class Symbol {\n  type: Type;\n  identifier: string;\n  position: number;\n  isConst: boolean;\n  isGlobal: boolean;\n  isHeap: boolean\n  constructor(type: Type, identifier: string, position: number, isConst: boolean, isGlobal: boolean, isHeap: boolean = false) {\n    this.type = type;\n    this.identifier = identifier;\n    this.position = position;\n    this.isConst = isConst;\n    this.isGlobal = isGlobal;\n    this.isHeap = isHeap\n  }\n}\n","import { SymbolFunction } from \"./symbol/SymbolFunction\";\nimport { Symbol } from \"./symbol/Symbol\";\nimport { Type } from \"./utils/Type\";\nimport { DeclareFunction } from \"./actions/instruction/function/DeclareFunction\";\n\nexport class Environment {\n  public functions: Map<string, SymbolFunction>;\n  public variables: Map<string, Symbol>;\n  previous: Environment | null;\n  size: number;\n  break: string | null;\n  continue: string | null;\n  return: string | null;\n  actualFunction: SymbolFunction | null;\n\n  constructor(previous: Environment | null = null) {\n    this.functions = new Map();\n    this.variables = new Map();\n    this.previous = previous;\n    this.size = previous?.size || 0;\n    this.break = previous?.break || null;\n    this.return = previous?.return || null;\n    this.continue = previous?.continue || null;\n    this.actualFunction = previous?.actualFunction || null;\n  }\n\n  setEnvironmentFunction(actualFunction: SymbolFunction, ret: string) {\n    this.size = 1;\n    this.return = ret;\n    this.actualFunction = actualFunction;\n  }\n\n  public addVariable(id: string, type: Type, isConst: boolean, isHeap: boolean): Symbol | null {\n    if (this.variables.get(id) !== undefined) return null;\n    const newVar = new Symbol(type, id, this.size++, isConst, this.previous == null, isHeap);\n    this.variables.set(id, newVar);\n    return newVar;\n  }\n\n  public getVariable(id: string): Symbol | null {\n    let env: Environment | null = this;\n    while (env != null) {\n      const sym = env.variables.get(id);\n      if (sym !== undefined) return sym;\n      env = env.previous;\n    }\n    return null;\n  }\n\n  public addFunction(func: DeclareFunction): boolean {\n    if (this.functions.has(func.id)) return false;\n    this.functions.set(func.id, new SymbolFunction(func));\n    return true;\n  }\n\n  public getFunction(id: string): SymbolFunction {\n    //@ts-ignore\n    return this.functions.get(id);\n  }\n\n  public searchFunction(id: string): SymbolFunction | null {\n    let env: Environment | null = this;\n    while (env != null) {\n      const sym = env.functions.get(id);\n      if (sym !==undefined) return sym;\n      env = env.previous;\n    }\n    return null;\n  }\n}\n","export let Logs: Array<any> = [];","import { Generator } from \"../../../Generator\";\nimport { Environment } from \"../../../Environment\";\nimport { Type } from \"../../../utils/Type\";\nimport { Param } from \"../../../utils/Param\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class DeclareFunction extends Instruction {\n  private preCompile: boolean;\n  private body: Instruction;\n  id: string;\n  params: Array<Param>;\n  type: Type;\n  constructor(id: string, params: Array<Param>, type: Type, body: Instruction, line: number, column: number) {\n    super(line, column);\n    this.preCompile = true;\n    this.id = id\n    this.params = params\n    this.type = type\n    this.body = body\n  }\n\n  compile(env: Environment) {\n    if (this.preCompile) {\n      this.preCompile = false;\n      this.validateParams();\n      if (!env.addFunction(this)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Duplicate function implementation: ${this.id}`);\n      return;\n    }\n\n    const generator = Generator.getInstance();\n    const newEnv = new Environment(env);\n\n    const symbolFunction = env.getFunction(this.id);\n    const returnlbl = generator.newLabel();\n    const tempStorage = generator.getTempStorage();\n\n    newEnv.setEnvironmentFunction(symbolFunction, returnlbl);\n    this.params.forEach((param) => { newEnv.addVariable(param.id, param.type, false, false) });\n    generator.clearTempStorage();\n    const auxCode = generator.saveCode();\n    generator.clearPrevious();\n    generator.addBegin(symbolFunction.id);\n    this.body.compile(newEnv);\n    generator.addLabel(returnlbl);\n    generator.addEnd();\n    generator.addFunction();\n    generator.setCode(auxCode);\n\n    generator.setTempStorage(tempStorage);\n  }\n\n  private validateParams() {\n    const set = new Set<string>();\n    this.params.forEach((param) => {\n      if (set.has(param.id)) throw new ErrorTS(this.line, this.column, \"Semantical;\", `Duplicate identifier '${param.id}'`);\n      set.add(param.id);\n    });\n  }\n}\n","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Label } from \"./Label\";\n\nexport class FunctionC3D extends InstructionC3D {\n\n    private currentIndex: number\n    private type: string;\n    private id: string;\n    private instr: InstructionC3D[]\n\n    constructor(type: string, id: string, instr: InstructionC3D[], line: number, column: number) {\n        super(line, column);\n        this.currentIndex = 0\n        this.type = type\n        this.id = id\n        this.instr = instr\n    }\n\n    debug() { }\n\n    public getInstruction() {\n        const i: number = this.currentIndex;\n        this.currentIndex++\n        return this.instr[i]\n    }\n\n    public goToLabel(label: string) {\n        this.instr.forEach((e, i) => {\n            if (e instanceof Label && e.getLabel() === label) this.currentIndex = i\n        });\n    }\n\n    public resetIndex() {\n        this.currentIndex = 0\n    }\n\n    public setIndex(i: number) {\n        this.currentIndex = i\n    }\n\n    public getIndex() {\n        return this.currentIndex\n    }\n\n    public getId() {\n        return this.id;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class Label extends InstructionC3D {\n    private label: string\n    constructor(label: string, line: number, column: number) {\n        super(line, column);\n        this.label = label\n    }\n\n    debug() {\n        return {\n            type: Type.LABEL\n        }\n    }\n\n    public getLabel() {\n        return this.label;\n    }\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar grammar = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,18],$V1=[1,7],$V2=[1,16],$V3=[1,17],$V4=[1,20],$V5=[1,26],$V6=[1,22],$V7=[1,19],$V8=[1,21],$V9=[1,31],$Va=[1,24],$Vb=[1,25],$Vc=[1,33],$Vd=[1,34],$Ve=[1,35],$Vf=[1,36],$Vg=[1,32],$Vh=[1,23],$Vi=[1,38],$Vj=[1,39],$Vk=[1,29],$Vl=[2,5,9,19,20,21,22,25,26,28,31,32,39,48,53,54,55,56,60,61,65,66,67],$Vm=[1,45],$Vn=[1,46],$Vo=[1,47],$Vp=[1,48],$Vq=[1,49],$Vr=[1,50],$Vs=[1,51],$Vt=[1,52],$Vu=[1,53],$Vv=[1,54],$Vw=[1,55],$Vx=[1,56],$Vy=[1,66],$Vz=[2,52],$VA=[1,72],$VB=[1,73],$VC=[1,74],$VD=[12,23,36,37,38,39,40,41,42,43,44,45,46,47,59],$VE=[2,59],$VF=[12,23,36,37,38,39,42,43,44,45,46,47,59],$VG=[12,23,36,37,42,43,44,45,46,47,59],$VH=[12,23,36,37,46,47,59],$VI=[2,5,9,19,20,21,22,25,26,27,28,31,32,39,48,53,54,55,56,60,61,65,66,67],$VJ=[1,120],$VK=[1,123],$VL=[23,59];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"S\":3,\"INSTRUCTIONS\":4,\"EOF\":5,\"INSTRUCTION\":6,\"IF\":7,\"WHILE\":8,\"SWITCH\":9,\"FOR\":10,\"DO_WHILE\":11,\";\":12,\"RETURN\":13,\"EXPRESION\":14,\"ASIGNAR\":15,\"DECLARAR_FUNCIONES\":16,\"DECLARAR_VARIABLE\":17,\"CONSOLE\":18,\"break\":19,\"continue\":20,\"while\":21,\"(\":22,\")\":23,\"CUERPO\":24,\"do\":25,\"if\":26,\"else\":27,\"for\":28,\"CUERPO_FOR\":29,\"{\":30,\"}\":31,\"console\":32,\".\":33,\"log\":34,\"LISTA_EXPRESIONES\":35,\"&&\":36,\"||\":37,\"+\":38,\"-\":39,\"*\":40,\"/\":41,\">\":42,\">=\":43,\"<\":44,\"<=\":45,\"==\":46,\"!=\":47,\"!\":48,\"ACCESO\":49,\"++\":50,\"--\":51,\"LITERAL\":52,\"number\":53,\"true\":54,\"false\":55,\"cadena\":56,\"FUNCION\":57,\"=\":58,\",\":59,\"id\":60,\"return\":61,\"DINAMICO\":62,\":\":63,\"TIPO\":64,\"let\":65,\"const\":66,\"function\":67,\"PARAMETROS\":68,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"SWITCH\",12:\";\",19:\"break\",20:\"continue\",21:\"while\",22:\"(\",23:\")\",25:\"do\",26:\"if\",27:\"else\",28:\"for\",30:\"{\",31:\"}\",32:\"console\",33:\".\",34:\"log\",36:\"&&\",37:\"||\",38:\"+\",39:\"-\",40:\"*\",41:\"/\",42:\">\",43:\">=\",44:\"<\",45:\"<=\",46:\"==\",47:\"!=\",48:\"!\",50:\"++\",51:\"--\",53:\"number\",54:\"true\",55:\"false\",56:\"cadena\",58:\"=\",59:\",\",60:\"id\",61:\"return\",63:\":\",65:\"let\",66:\"const\",67:\"function\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[6,1],[6,2],[6,2],[6,2],[6,2],[6,1],[6,2],[6,2],[6,2],[6,2],[6,1],[8,5],[11,6],[7,5],[7,7],[7,7],[10,5],[29,5],[29,5],[24,2],[24,3],[18,6],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,3],[14,2],[14,2],[14,3],[14,2],[14,2],[14,1],[52,1],[52,1],[52,1],[52,1],[52,1],[52,1],[15,3],[35,3],[35,1],[57,4],[57,3],[49,1],[13,1],[13,2],[17,6],[17,4],[64,1],[62,1],[62,1],[16,8],[16,7],[68,5],[68,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1]\nbreak;\ncase 3:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1];\nbreak;\ncase 4:\nthis.$ = [$$[$0]];\nbreak;\ncase 5: case 6: case 7: case 8: case 13: case 18: case 47: case 52: case 53:\nthis.$ = $$[$0]\nbreak;\ncase 9: case 10: case 14: case 15: case 44:\nthis.$ = $$[$0-1]\nbreak;\ncase 11: case 12:\nthis.$ = new Call($$[$0-1],_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 16:\nthis.$ = new Break(_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 17:\nthis.$ = new Continue(_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 19:\nthis.$ = new While($$[$0-2], $$[$0], _$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 20:\nthis.$ = new DoWhile($$[$0-1], $$[$0-4], _$[$0-5].first_line, _$[$0-5].first_column)\nbreak;\ncase 21:\nthis.$ = new If($$[$0-2], $$[$0], null, _$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 22: case 23:\nthis.$ = new If($$[$0-4], $$[$0-2], $$[$0], _$[$0-6].first_line, _$[$0-6].first_column)\nbreak;\ncase 24:\nthis.$ = new For($$[$0-2],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 25: case 26:\nthis.$ = new ForBody($$[$0-4],$$[$0-2],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 27:\nthis.$ = new Statement([], _$[$0-1].first_line, _$[$0-1].first_column);\nbreak;\ncase 28:\nthis.$ = new Statement($$[$0-1], _$[$0-2].first_line, _$[$0-2].first_column);\nbreak;\ncase 29:\nthis.$ = new Console($$[$0-1], _$[$0-5].first_line, _$[$0-5].first_column)\nbreak;\ncase 30:\nthis.$ = new And($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 31:\nthis.$ = new Or($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 32:\nthis.$ = new Plus($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 33:\nthis.$ = new Minus($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 34:\nthis.$ = new Mul($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 35:\nthis.$ = new Div($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 36:\nthis.$ = new Great(false,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 37:\nthis.$ = new Great(true,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 38:\nthis.$ = new Less(false,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 39:\nthis.$ = new Less(true,$$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 40:\nthis.$ = new Equals($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 41:\nthis.$ = new NotEquals($$[$0-2],$$[$0],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 42:\nthis.$ = new Neg($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 43:\nthis.$ = new Not($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 45:\nthis.$ = new Inc($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 46:\nthis.$ = new Dec($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 48:\nthis.$ = new Primitive($$[$0], _$[$0].first_line, _$[$0].first_column, Types.NUMBER)\nbreak;\ncase 49:\nthis.$ = new Primitive(true, _$[$0].first_line, _$[$0].first_column, Types.BOOLEAN)\nbreak;\ncase 50:\nthis.$ = new Primitive(false, _$[$0].first_line, _$[$0].first_column, Types.BOOLEAN)\nbreak;\ncase 51:\nthis.$ = new Complex($$[$0], _$[$0].first_line, _$[$0].first_column, Types.STRING)\nbreak;\ncase 54:\nthis.$ = new AssignVariable($$[$0-2],$$[$0],_$[$0-2].first_line,_$[$0-2].first_column)\nbreak;\ncase 55:\n$$[$0-2].push($$[$0]);this.$=$$[$0-2]\nbreak;\ncase 56:\nthis.$ = [$$[$0]]\nbreak;\ncase 57:\nthis.$ = new AccessFunction($$[$0-3],$$[$0-1],_$[$0-3].first_line,_$[$0-3].first_column);\nbreak;\ncase 58:\nthis.$ = new AccessFunction($$[$0-2],[],_$[$0-2].first_line,_$[$0-2].first_column);\nbreak;\ncase 59:\nthis.$ = new AccessVariable($$[$0],null,_$[$0].first_line,_$[$0].first_column)\nbreak;\ncase 60:\n this.$ = new ReturnTS(null,_$[$0].first_line,_$[$0].first_column)\nbreak;\ncase 61:\n this.$ = new ReturnTS($$[$0],_$[$0-1].first_line,_$[$0-1].first_column)\nbreak;\ncase 62:\nthis.$ = new DeclareVariable($$[$0-5],$$[$0-4],$$[$0-2],$$[$0],_$[$0-5].first_line,_$[$0-5].first_column)\nbreak;\ncase 63:\nthis.$ = new DeclareVariable($$[$0-3],$$[$0-2],$$[$0],null,_$[$0-3].first_line,_$[$0-3].first_column)\nbreak;\ncase 64:\nthis.$ = getType($$[$0])\nbreak;\ncase 65:\nthis.$=false\nbreak;\ncase 66:\nthis.$=true\nbreak;\ncase 67:\nthis.$ = new DeclareFunction($$[$0-6],$$[$0-4],$$[$0-1],$$[$0],_$[$0-7].first_line,_$[$0-7].first_column)\nbreak;\ncase 68:\nthis.$ = new DeclareFunction($$[$0-5],[],$$[$0-1],$$[$0],_$[$0-6].first_line,_$[$0-6].first_column)\nbreak;\ncase 69:\n$$[$0-4].push(new Param($$[$0-2],$$[$0]));this.$=$$[$0-4]\nbreak;\ncase 70:\nthis.$ = [new Param($$[$0-2],$$[$0])]\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,5:[1,3],6:4,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{1:[3]},{2:$V0,5:[1,40],6:41,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{1:[2,2]},o($Vl,[2,4]),o($Vl,[2,5]),o($Vl,[2,6]),o($Vl,[2,7]),o($Vl,[2,8]),{12:[1,42]},{12:[1,43]},{12:[1,44],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[1,57]},o($Vl,[2,13]),{12:[1,58]},{12:[1,59]},{12:[1,60]},{12:[1,61]},o($Vl,[2,18]),{22:[1,62]},{22:[1,63]},{22:[1,64]},{24:65,30:$Vy},{12:[2,60],14:67,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:69,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:70,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:71,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o([12,36,37,38,39,40,41,42,43,44,45,46,47],$Vz,{50:$VA,51:$VB,58:$VC}),o($VD,[2,47]),{60:[1,75]},{60:[1,76]},{33:[1,77]},o([12,23,36,37,38,39,40,41,42,43,44,45,46,47,50,51,58,59],$VE,{22:[1,78]}),o($VD,[2,48]),o($VD,[2,49]),o($VD,[2,50]),o($VD,[2,51]),o($VD,[2,53]),{60:[2,65]},{60:[2,66]},{1:[2,1]},o($Vl,[2,3]),o($Vl,[2,9]),o($Vl,[2,10]),o($Vl,[2,11]),{14:79,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:80,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:81,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:82,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:83,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:84,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:85,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:86,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:87,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:88,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:89,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:90,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($Vl,[2,12]),o($Vl,[2,14]),o($Vl,[2,15]),o($Vl,[2,16]),o($Vl,[2,17]),{14:91,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:92,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{15:95,17:94,29:93,49:96,60:[1,97],62:30,65:$Vi,66:$Vj},{21:[1,98]},{2:$V0,4:100,6:4,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,31:[1,99],32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},{12:[2,61],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},o($VD,$Vz,{50:$VA,51:$VB}),o($VF,[2,42],{40:$Vq,41:$Vr}),o($VD,[2,43]),{23:[1,101],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},o($VD,[2,45]),o($VD,[2,46]),{14:102,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{22:[1,103]},{63:[1,104]},{34:[1,105]},{14:108,22:$V5,23:[1,107],35:106,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o([12,23,36,37,59],[2,30],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),o([12,23,37,59],[2,31],{36:$Vm,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),o($VF,[2,32],{40:$Vq,41:$Vr}),o($VF,[2,33],{40:$Vq,41:$Vr}),o($VD,[2,34]),o($VD,[2,35]),o($VG,[2,36],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,37],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,38],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VG,[2,39],{38:$Vo,39:$Vp,40:$Vq,41:$Vr}),o($VH,[2,40],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv}),o($VH,[2,41],{38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv}),{23:[1,109],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,110],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,111]},{12:[1,112]},{12:[1,113]},{58:$VC},{58:$VE},{22:[1,114]},o($VI,[2,27]),{2:$V0,6:41,7:5,8:6,9:$V1,10:8,11:9,13:10,14:11,15:12,16:13,17:14,18:15,19:$V2,20:$V3,21:$V4,22:$V5,25:$V6,26:$V7,28:$V8,31:[1,115],32:$V9,39:$Va,48:$Vb,49:27,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg,61:$Vh,62:30,65:$Vi,66:$Vj,67:$Vk},o($VD,[2,44]),{12:[2,54],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,117],60:[1,118],68:116},{60:$VJ,64:119},{22:[1,121]},{23:[1,122],59:$VK},o($VD,[2,58]),o($VL,[2,56],{36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),{24:124,30:$Vy},{24:125,30:$Vy},{24:126,30:$Vy},{14:127,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:128,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:129,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($VI,[2,28]),{23:[1,130],59:[1,131]},{63:[1,132]},{63:[1,133]},{12:[2,63],58:[1,134]},o([12,23,30,58,59],[2,64]),{14:108,22:$V5,35:135,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($VD,[2,57]),{14:136,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},o($Vl,[2,21],{27:[1,137]}),o($Vl,[2,19]),o($Vl,[2,24]),{12:[1,138],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[1,139],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[1,140],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{63:[1,141]},{60:[1,142]},{60:$VJ,64:143},{60:$VJ,64:144},{14:145,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{23:[1,146],59:$VK},o($VL,[2,55],{36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx}),{7:148,24:147,26:$V7,30:$Vy},{14:149,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{14:150,22:$V5,39:$Va,48:$Vb,49:68,52:28,53:$Vc,54:$Vd,55:$Ve,56:$Vf,57:37,60:$Vg},{12:[2,20]},{60:$VJ,64:151},{63:[1,152]},{24:153,30:$Vy},o($VL,[2,70]),{12:[2,62],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{12:[2,29]},o($Vl,[2,22]),o($Vl,[2,23]),{23:[2,25],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{23:[2,26],36:$Vm,37:$Vn,38:$Vo,39:$Vp,40:$Vq,41:$Vr,42:$Vs,43:$Vt,44:$Vu,45:$Vv,46:$Vw,47:$Vx},{24:154,30:$Vy},{60:$VJ,64:155},o($Vl,[2,68]),o($Vl,[2,67]),o($VL,[2,69])],\ndefaultActions: {3:[2,2],38:[2,65],39:[2,66],40:[2,1],97:[2,59],140:[2,20],146:[2,29]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n    const {Types,getType} = require('../compiler/utils/Type');\n    const {Param} = require('../compiler/utils/Param');\n\n    const {Break} = require('../compiler/actions/instruction/transfer/Break');\n    const {Continue} = require('../compiler/actions/instruction/transfer/Continue');\n    const {ReturnTS} = require('../compiler/actions/instruction/transfer/Return');\n\n    const {Call} = require('../compiler/actions/instruction/Call')\n    const {Console} = require('../compiler/actions/instruction/Console')\n    const {Statement} = require('../compiler/actions/instruction/Statement')\n\n    const {And} = require('../compiler/actions/expression/logical/And')\n    const {Or} = require('../compiler/actions/expression/logical/Or')\n    const {Not} = require('../compiler/actions/expression/logical/Not')\n    \n    const {Plus} = require('../compiler/actions/expression/arithmetic/Plus')\n    const {Mul} = require('../compiler/actions/expression/arithmetic/Mul')\n    const {Div} = require('../compiler/actions/expression/arithmetic/Div')\n    const {Minus} = require('../compiler/actions/expression/arithmetic/Minus')\n    const {Neg} = require('../compiler/actions/expression/arithmetic/Neg')\n    const {Inc} = require('../compiler/actions/expression/arithmetic/Inc')\n    const {Dec} = require('../compiler/actions/expression/arithmetic/Dec')\n\n    const {Equals} = require('../compiler/actions/expression/relational/Equals')\n    const {NotEquals} = require('../compiler/actions/expression/relational/NotEquals')\n    const {Less} = require('../compiler/actions/expression/relational/Less')\n    const {Great} = require('../compiler/actions/expression/relational/Great')\n    \n    const {Primitive} = require('../compiler/actions/expression/literal/Primitive')\n    const {Complex} = require('../compiler/actions/expression/literal/Complex')\n\n    const {DeclareVariable} = require('../compiler/actions/instruction/variable/DeclareVariable')\n    const {AssignVariable} = require('../compiler/actions/instruction/variable/AssignVariable')\n\n    const {AccessVariable} = require('../compiler/actions/expression/access/AccessVariable')\n    const {AccessFunction} = require('../compiler/actions/expression/access/AccessFunction')\n\n    const {DeclareFunction} = require('../compiler/actions/instruction/function/DeclareFunction')\n\n    const {DoWhile} = require('../compiler/actions/instruction/control/DoWhile')\n    const {For} = require('../compiler/actions/instruction/control/For')\n    const {ForBody} = require('../compiler/actions/instruction/control/ForBody')\n    const {If} = require('../compiler/actions/instruction/control/If')\n    const {While} = require('../compiler/actions/instruction/control/While')\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-sensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// ignora los espacios en blanco\nbreak;\ncase 1:// comentario de linea\nbreak;\ncase 2:// comentario de multiples lineas\t\nbreak;\ncase 3:return 53\nbreak;\ncase 4:return \"log\"\nbreak;\ncase 5:return \"console\"\nbreak;\ncase 6:return \".\"\nbreak;\ncase 7:return \",\"\nbreak;\ncase 8:return \"++\"\nbreak;\ncase 9:return \"--\"\nbreak;\ncase 10:return \"true\"\nbreak;\ncase 11:return \"false\"\nbreak;\ncase 12:return \"return\"\nbreak;\ncase 13:return \"let\"\nbreak;\ncase 14:return \"const\"\nbreak;\ncase 15:return 67\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 27;\nbreak;\ncase 18:return \"do\"\nbreak;\ncase 19:return \"while\"\nbreak;\ncase 20:return \"for\"\nbreak;\ncase 21:return 19;\nbreak;\ncase 22:return \"continue\"\nbreak;\ncase 23:return \";\";\nbreak;\ncase 24:return \":\";\nbreak;\ncase 25:return 30;\nbreak;\ncase 26:return 31;\nbreak;\ncase 27:return 22;\nbreak;\ncase 28:return 23;\nbreak;\ncase 29:return 45;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 46;\nbreak;\ncase 32:return 47;\nbreak;\ncase 33:return 36\nbreak;\ncase 34:return 37\nbreak;\ncase 35:return 48\nbreak;\ncase 36:return 38;\nbreak;\ncase 37:return 39;\nbreak;\ncase 38:return 40;\nbreak;\ncase 39:return 41;\nbreak;\ncase 40:return 44;\nbreak;\ncase 41:return 42;\nbreak;\ncase 42:return 58;\nbreak;\ncase 43: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 56; \nbreak;\ncase 44: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 56; \nbreak;\ncase 45:return 60;\nbreak;\ncase 46:return 5;\nbreak;\ncase 47:return 'ERROR'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/,/^(?:(([0-9]+)(\\.([0-9]+))?))/,/^(?:log\\b)/,/^(?:console\\b)/,/^(?:\\.)/,/^(?:,)/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:return\\b)/,/^(?:let\\b)/,/^(?:const\\b)/,/^(?:function\\b)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:do\\b)/,/^(?:while\\b)/,/^(?:for\\b)/,/^(?:break\\b)/,/^(?:continue\\b)/,/^(?:;)/,/^(?::)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:<=)/,/^(?:>=)/,/^(?:==)/,/^(?:!=)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:!)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:<)/,/^(?:>)/,/^(?:=)/,/^(?:'([^\\\\\\']|\\\\.)*')/,/^(?:\"([^\\\\\\\"]|\\\\.)*\")/,/^(?:([a-zA-Z_])[a-zA-Z0-9_]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = grammar;\nexports.Parser = grammar.Parser;\nexports.parse = function () { return grammar.parse.apply(grammar, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { Type } from \"./Type\";\n\nexport class Param {\n    id: string;\n    type: Type;\n    constructor(id: string, type: Type) {\n        this.id = id\n        this.type = type\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class Break extends Instruction {\n\n  compile(enviorement: Environment): void {\n    if (enviorement.break == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"A 'break' statement can only be used within an enclosing iteration statement\");\n    Generator.getInstance().addGoto(enviorement.break);\n  }\n}\n","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class Continue extends Instruction {\n\n  compile(enviorement: Environment) {\n    if (enviorement.continue == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"A 'continue' statement can only be used within an enclosing iteration statement\");\n    Generator.getInstance().addGoto(enviorement.continue);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class ReturnTS extends Instruction {\n    private value: Expression | null\n    constructor(value: Expression | null, line: number, column: number) {\n        super(line, column);\n        this.value = value\n    }\n\n    compile(env: Environment): void {\n        const value = this.value?.compile(env) || new Return('0', false, new Type(Types.VOID));\n        const symbolFunction = env.actualFunction;\n        const generator = Generator.getInstance();\n\n        if (symbolFunction == null) throw new ErrorTS(this.line, this.column, 'Semantico', `A 'return' statement can only be used within a function body`);\n\n        if (!this.sameType(symbolFunction.type, value.type)) throw new ErrorTS(this.line, this.column, 'Semantical', `Type '${value.type.type}' is not assignable to type '${symbolFunction.type.type}'`);\n\n        if (symbolFunction.type.type === Types.BOOLEAN) {\n            const templabel = generator.newLabel();\n            generator.addLabel(value.trueLabel);\n            generator.addSetStack('p', '1');\n            generator.addGoto(templabel);\n            generator.addLabel(value.falseLabel);\n            generator.addSetStack('p', '0');\n            generator.addLabel(templabel);\n        }\n        else if (symbolFunction.type.type !== Types.VOID) generator.addSetStack('p', value.getValue());\n        generator.addGoto(env.return || '');\n    }\n}","import { Expression } from \"../../abstract/Expression\";\nimport { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\n\nexport class Call extends Instruction {\n  private call: Expression;\n\n  constructor(call: Expression, line: number, column: number) {\n    super(line, column);\n    this.call = call;\n  }\n\n  compile(enviorement: Environment) {\n    const value = this.call.compile(enviorement);\n    if (value !== undefined) value.getValue();\n  }\n}\n","import { Expression } from \"../../abstract/Expression\";\nimport { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\nimport { Generator, Natives } from \"../../Generator\";\nimport { ErrorTS } from \"../../utils/Error\";\nimport { Types } from \"../../utils/Type\";\n\nexport class Console extends Instruction {\n  private value: Array<Expression>\n  constructor(value: Array<Expression>, line: number, column: number) {\n    super(line, column);\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    const n = this.value.length;\n    const generator = Generator.getInstance();\n    let j = 0;\n    this.value.forEach((i: Expression) => {\n      const value = i.compile(env);\n      switch (value.type.type) {\n        case Types.NUMBER:\n          generator.addPrint(\"f\", \"(float)\" + value.getValue());\n          break;\n        case Types.BOOLEAN:\n          const templabel = generator.newLabel();\n          generator.addLabel(value.trueLabel);\n          generator.addPrintTrue();\n          generator.addGoto(templabel);\n          generator.addLabel(value.falseLabel);\n          generator.addPrintFalse();\n          generator.addLabel(templabel);\n          break;\n        case Types.STRING:\n          generator.addNextEnv(env.size);\n          generator.addSetStack(\"p\", value.getValue());\n          generator.addCall(\"native_print_str\");\n          generator.addNative(Natives.print_str);\n          generator.addPrevEnv(env.size);\n          break;\n        default:\n          throw new ErrorTS(this.line, this.column, \"Semantical\", `'${value.type.type}' not supported in this version`);\n      }\n      j++;\n      if (j !== n) {\n        generator.addPrint(\"c\", \"32\");\n      }\n    });\n    generator.addPrint(\"c\", \"10\");\n  }\n}\n","import { Instruction } from \"../../abstract/Instruction\";\nimport { Environment } from \"../../Environment\";\nimport { Logs } from \"../../utils/LogArray\";\n\nexport class Statement extends Instruction {\n    private instructions: Array<Instruction> | null\n    constructor(instructions: Array<Instruction> | null, line: number, column: number) {\n        super(line, column);\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): any {\n        const newEnv = env.actualFunction == null ? new Environment(env) : env;\n        this.instructions?.forEach((instruction) => {\n            try {\n                instruction.compile(newEnv);\n            } catch (error) {\n                Logs.push(error);\n            }\n        });\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class And extends Expression {\n    private left: Expression;\n    private right: Expression;\n\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left;\n        this.right = right;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.left.trueLabel = generator.newLabel();\n        this.right.trueLabel = this.trueLabel;\n        this.left.falseLabel = this.right.falseLabel = this.falseLabel;\n\n        const left = this.left.compile(env);\n        generator.addLabel(this.left.trueLabel);\n        const right = this.right.compile(env);\n        if (left.type.type === Types.BOOLEAN && right.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, left.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.right.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '&&' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Or extends Expression {\n\n    private left: Expression;\n    private right: Expression;\n\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left;\n        this.right = right;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.left.trueLabel = this.right.trueLabel = this.trueLabel;\n        this.left.falseLabel = generator.newLabel();\n        this.right.falseLabel = this.falseLabel;\n\n        const left = this.left.compile(env);\n        generator.addLabel(this.left.falseLabel);\n        const right = this.right.compile(env);\n\n        if (left.type.type === Types.BOOLEAN && right.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, left.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.right.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '||' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Not extends Expression {\n    private value: Expression;\n\n    constructor(value: Expression, line: number, column: number) {\n        super(line, column);\n        this.value = value;\n    }\n\n    compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n        this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n\n        this.value.trueLabel = this.falseLabel;\n        this.value.falseLabel = this.trueLabel;\n\n        const value = this.value.compile(env);\n\n        if (value.type.type === Types.BOOLEAN) {\n            const auxReturn = new Return('', false, value.type);\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '!' with ${value.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Plus extends Expression {\n\n    constructor(private left: Expression, private right: Expression, line: number, column: number) {\n        super(line, column);\n    }\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        let right: Return | null = null;\n        const generator = Generator.getInstance();\n        let temp;\n        let tempAux;\n        switch (left.type.type) {\n            case Types.NUMBER:\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '+');\n                        return new Return(temp, true, left.type);\n                    case Types.STRING:\n                        tempAux = generator.newTemporal();\n                        generator.freeTemp(tempAux);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_num_str'); generator.addNative(Natives.concat_num_str);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.BOOLEAN:\n                        const lblTemp = generator.newLabel();\n                        tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n\n                        generator.addLabel(right.trueLabel);\n                        generator.addExpression(tempAux, '1');\n                        generator.addGoto(lblTemp);\n\n                        generator.addLabel(right.falseLabel);\n                        generator.addExpression(tempAux, '0');\n                        generator.addLabel(lblTemp);\n\n                        generator.addExpression(temp, left.getValue(), tempAux, '+');\n                        return new Return(temp, true, left.type);\n                }\n                break;\n            case Types.STRING:\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_str_num'); generator.addNative(Natives.concat_str_num);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.STRING:\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat'); generator.addNative(Natives.concat);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.BOOLEAN:\n                        const lblTemp = generator.newLabel();\n\n                        generator.addLabel(right.trueLabel);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, '1');\n                        generator.addGoto(lblTemp);\n\n                        generator.addLabel(right.falseLabel);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, left.getValue());\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, '0');\n                        generator.addLabel(lblTemp);\n\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_str_bool'); generator.addNative(Natives.concat_str_bool);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                }\n                break;\n            case Types.BOOLEAN:\n                const tempBoolean = generator.newTemporal();\n                const lblTemp = generator.newLabel();\n                generator.addLabel(left.trueLabel);\n                generator.addExpression(tempBoolean, '1');\n                generator.addGoto(lblTemp);\n\n                generator.addLabel(left.falseLabel);\n                generator.addExpression(tempBoolean, '1');\n                generator.addLabel(lblTemp);\n                right = this.right.compile(env);\n                temp = generator.newTemporal();\n                switch (right.type.type) {\n                    case Types.STRING:\n                        tempAux = generator.newTemporal(); generator.freeTemp(tempAux);\n                        generator.addExpression(tempAux, 'p', env.size + 1, '+');\n                        generator.addSetStack(tempAux, tempBoolean); generator.freeTemp(tempBoolean);\n                        generator.addExpression(tempAux, tempAux, '1', '+');\n                        generator.addSetStack(tempAux, right.getValue());\n                        generator.addNextEnv(env.size);\n                        generator.addCall('native_concat_bool_str'); generator.addNative(Natives.concat_bool_str);\n                        generator.addGetStack(temp, 'p');\n                        generator.addPrevEnv(env.size);\n                        return new Return(temp, true, new Type(Types.STRING));\n                    case Types.NUMBER:\n                        generator.addExpression(temp, tempBoolean, right.getValue(), '+'); generator.freeTemp(tempBoolean);\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '+' cannot be applied to types '${left.type.type}' and '${right?.type.type}' `);\n    }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Mul extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '*');\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '*' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\nexport class Div extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '/');\n                        return new Return(temp, true, new Type(Types.NUMBER));\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '/' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Minus extends Expression {\n    private left: Expression;\n    private right: Expression\n    constructor(left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                switch (right.type.type) {\n                    case Types.NUMBER:\n                        generator.addExpression(temp, left.getValue(), right.getValue(), '-');\n                        return new Return(temp, true, right.type);\n                }\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '-' cannot be applied to types '${left.type.type}' and '${right.type.type}' `);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Neg extends Expression {\n    private left: Expression\n    constructor(left: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n    }\n\n    public compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        switch (left.type.type) {\n            case Types.NUMBER:\n                generator.addExpression(temp, '0', left.getValue(), '-');\n                return new Return(temp, true, left.type);\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '-' cannot be applied to type '${left.type.type}'`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Inc extends Expression {\n\n    constructor(private assign: Expression, line: number, column: number) {\n        super(line, column);\n    }\n\n    compile(env: Environment): Return {\n        //@ts-ignore\n        const assign = this.assign.compile(env, true);\n        const symbol = assign.symbol;\n        const generator = Generator.getInstance();\n        if (symbol == null) throw new ErrorTS(this.line, this.column, 'Semantical', 'The operand of an increment or decrement operator must be a variable or a property assign');\n        switch (assign.type.type) {\n            case Types.NUMBER:\n                const value = this.assign.compile(env);\n                const temp = generator.newTemporal();\n                if (symbol?.isGlobal) {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetStack(symbol.position, temp);\n                }\n                else if (symbol?.isHeap) {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetHeap(assign.getValue(), temp);\n                }\n                else {\n                    generator.addExpression(temp, value.getValue(), '1', '+');\n                    generator.addSetStack(assign.getValue(), temp);\n                }\n                return new Return(temp, true, symbol.type);\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Operator '++' cannot be applied to type '${assign.type.type}'`);\n    }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class Dec extends Expression {\n  private assign: Expression\n  constructor(assign: Expression, line: number, column: number) {\n    super(line, column);\n    this.assign = assign\n\n  }\n  compile(env: Environment): Return {\n    //@ts-ignore\n    const assign = this.assign.compile(env, true);\n    const symbol = assign.symbol;\n    const generator = Generator.getInstance();\n    if (symbol == null) throw new ErrorTS(this.line, this.column, \"Semantical\", \"The operand of an increment or decrement operator must be a variable or a property assign\");\n    switch (assign.type.type) {\n      case Types.NUMBER:\n        const value = this.assign.compile(env);\n        const temp = generator.newTemporal();\n        if (symbol?.isGlobal) {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetStack(symbol.position, temp);\n        } else if (symbol?.isHeap) {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetHeap(assign.getValue(), temp);\n        } else {\n          generator.addExpression(temp, value.getValue(), \"1\", \"-\");\n          generator.addSetStack(assign.getValue(), temp);\n        }\n        return new Return(temp, true, symbol.type);\n      default:\n        throw new ErrorTS(this.line, this.column, \"Semantical\", `Operator '--' cannot be applied to type '${assign.type.type}'`\n        );\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Equals extends Expression {\n  private left: Expression;\n  private right: Expression;\n\n  constructor(left: Expression, right: Expression, line: number, column: number) {\n    super(line, column);\n    this.left = left;\n    this.right = right;\n  }\n\n  //@ts-ignore\n  compile(env: Environment): Return {\n    const left = this.left.compile(env);\n    let right: Return | null = null;\n    const generator = Generator.getInstance();\n\n    switch (left.type.type) {\n      case Types.NUMBER:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.NUMBER:\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), \"==\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n      case Types.BOOLEAN:\n\n        const trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n        const falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n\n        generator.addLabel(left.trueLabel);\n        this.right.trueLabel = trueLabel;\n        this.right.falseLabel = falseLabel;\n        right = this.right.compile(env);\n\n        generator.addLabel(left.falseLabel);\n        this.right.trueLabel = falseLabel;\n        this.right.falseLabel = trueLabel;\n        right = this.right.compile(env);\n        if (right.type.type === Types.BOOLEAN) {\n          const auxReturn = new Return(\"\", false, left.type);\n          auxReturn.trueLabel = trueLabel;\n          auxReturn.falseLabel = falseLabel;\n          return auxReturn;\n        }\n        break;\n      case Types.STRING:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.STRING: {\n            const temp = generator.newTemporal(); generator.freeTemp(temp);\n            const tempAux = generator.newTemporal();\n            generator.freeTemp(tempAux);\n            generator.freeTemp(tempAux);\n            generator.addExpression(tempAux, \"p\", env.size + 1, \"+\");\n            generator.addSetStack(tempAux, left.getValue());\n            generator.addExpression(tempAux, tempAux, \"1\", \"+\");\n            generator.addSetStack(tempAux, right.getValue());\n            generator.addNextEnv(env.size);\n            generator.addCall(\"native_cmp_str\");\n            generator.addNative(Natives.cmp_str);\n            generator.addGetStack(temp, \"(int)p\");\n            generator.addPrevEnv(env.size);\n\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n          }\n\n        }\n        break;\n    }\n    throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '==' with ${left.type.type} and ${right?.type.type}`);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator, Natives } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class NotEquals extends Expression {\n  private left: Expression;\n  private right: Expression\n  constructor(left: Expression, right: Expression, line: number, column: number) {\n    super(line, column);\n    this.left = left\n    this.right = right\n  }\n\n  //@ts-ignore\n  compile(env: Environment): Return {\n    const left = this.left.compile(env);\n    let right: Return | null = null;\n    const generator = Generator.getInstance();\n\n    switch (left.type.type) {\n      case Types.NUMBER:\n        right = this.right.compile(env);\n\n        switch (right.type.type) {\n          case Types.NUMBER:\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), \"!=\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n      case Types.BOOLEAN:\n        const trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n        const falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n\n        generator.addLabel(left.trueLabel);\n        this.right.trueLabel = falseLabel;\n        this.right.falseLabel = trueLabel;\n        right = this.right.compile(env);\n\n        generator.addLabel(left.falseLabel);\n        this.right.trueLabel = trueLabel;\n        this.right.falseLabel = falseLabel;\n        right = this.right.compile(env);\n\n        if (right.type.type === Types.BOOLEAN) {\n          const auxReturn = new Return(\"\", false, left.type);\n          auxReturn.trueLabel = trueLabel;\n          auxReturn.falseLabel = falseLabel;\n          return auxReturn;\n        }\n        break;\n      case Types.STRING:\n        right = this.right.compile(env);\n        switch (right.type.type) {\n          case Types.STRING:\n            const temp = generator.newTemporal();\n            generator.freeTemp(temp);\n            const tempAux = generator.newTemporal();\n            generator.freeTemp(tempAux);\n            generator.addExpression(tempAux, \"p\", env.size + 1, \"+\");\n            generator.addSetStack(tempAux, left.getValue());\n            generator.addExpression(tempAux, tempAux, \"1\", \"+\");\n            generator.addSetStack(tempAux, right.getValue());\n            generator.addNextEnv(env.size);\n            generator.addCall(\"native_cmp_str\");\n            generator.addNative(Natives.cmp_str);\n            generator.addGetStack(temp, \"p\");\n            generator.addPrevEnv(env.size);\n\n            this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n            generator.addIf(temp, \"1\", \"!=\", this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return(\"\", false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        break;\n    }\n    throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '!=' with ${left.type.type} and ${right?.type.type}`);\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Less extends Expression {\n\n    private isLessEqual: boolean;\n    private left: Expression;\n    private right: Expression\n    constructor(isLessEqual: boolean, left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.isLessEqual = isLessEqual\n        this.left = left\n        this.right = right\n    }\n    compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n\n        const lefType = left.type.type;\n        const rightType = right.type.type;\n        const operator = this.isLessEqual ? '<=' : '<'\n\n        if (lefType === Types.NUMBER && rightType === Types.NUMBER) {\n            const generator = Generator.getInstance();\n            this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), operator, this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return('', false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '${operator}' with ${left.type.type} and ${right.type.type}`);\n    }\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Great extends Expression {\n    private isGrtEqual: boolean;\n    private left: Expression;\n    private right: Expression\n    constructor(isGrtEqual: boolean, left: Expression, right: Expression, line: number, column: number) {\n        super(line, column);\n        this.isGrtEqual = isGrtEqual\n        this.left = left\n        this.right = right\n    }\n\n    compile(env: Environment): Return {\n        const left = this.left.compile(env);\n        const right = this.right.compile(env);\n\n        const lefType = left.type.type;\n        const rightType = right.type.type;\n        const operator = this.isGrtEqual ? '>=' : '>'\n\n        if (lefType === Types.NUMBER && rightType === Types.NUMBER) {\n            const generator = Generator.getInstance();\n            this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n            this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n            generator.addIf(left.getValue(), right.getValue(), operator, this.trueLabel);\n            generator.addGoto(this.falseLabel);\n            const auxReturn = new Return('', false, new Type(Types.BOOLEAN));\n            auxReturn.trueLabel = this.trueLabel;\n            auxReturn.falseLabel = this.falseLabel;\n            return auxReturn;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Cannot apply '${operator}' with ${left.type.type}  and ${right.type.type}`);\n    }\n}","import { Generator } from \"../../../Generator\";\nimport { Return } from \"../../../utils/Return\";\nimport { Environment } from \"../../../Environment\";\nimport { Types, Type } from \"../../../utils/Type\";\nimport { Expression } from \"../../../abstract/Expression\";\n\nexport class Primitive extends Expression {\n    private value: any\n    private type: Types\n    constructor(value: any, line: number, column: number, type: Types) {\n        super(line, column);\n        this.value = value\n        this.type = type\n    }\n\n    //@ts-ignore\n    public compile(env: Environment): Return {\n        switch (this.type) {\n            case Types.NUMBER:\n                return new Return(this.value, false, new Type(this.type));\n            case Types.BOOLEAN:\n                const generator = Generator.getInstance();\n                const auxReturn = new Return('', false, new Type(this.type));\n                this.trueLabel = this.trueLabel === '' ? generator.newLabel() : this.trueLabel;\n                this.falseLabel = this.falseLabel === '' ? generator.newLabel() : this.falseLabel;\n                this.value ? generator.addGoto(this.trueLabel) : generator.addGoto(this.falseLabel);\n                auxReturn.trueLabel = this.trueLabel;\n                auxReturn.falseLabel = this.falseLabel;\n                return auxReturn;\n            case Types.NULL:\n                return new Return('-1', false, new Type(this.type));\n        }\n    }\n\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Return } from \"../../../utils/Return\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class Complex extends Expression {\n\n    private value: any\n    private type: Types\n    constructor(value: any, line: number, column: number, type: Types) {\n        super(line, column);\n        this.value = value\n        this.type = type\n    }\n\n    public compile(env: Environment): Return {\n        const generator = Generator.getInstance();\n        const temp = generator.newTemporal();\n        generator.addExpression(temp, 'h');\n        for (let i = 0; i < this.value.length; i++) {\n            generator.addSetHeap('h', this.value.charCodeAt(i));\n            generator.nextHeap();\n        }\n        generator.addSetHeap('h', '-1');\n        generator.nextHeap();\n        return new Return(temp, true, new Type(this.type));\n    }\n\n\n}","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Type, Types } from \"../../../utils/Type\";\n\nexport class DeclareVariable extends Instruction {\n  private access: boolean;\n  private id: string;\n  private type: Type;\n  private value: Expression | null\n  constructor(access: boolean, id: string, type: Type, value: Expression | null, line: number, column: number) {\n    super(line, column);\n    this.access = access\n    this.id = id\n    this.type = type\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    const generator = Generator.getInstance();\n    const compiled = this.value?.compile(env);\n    if (compiled == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Variable '${this.id}' must be initialized`);\n    if (!this.sameType(this.type, compiled.type)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Type '${compiled.type.type}' is not assignable to type '${this.type.type}'`);\n    const newVariable = env.addVariable(this.id, this.type, this.access, false);\n    if (newVariable == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot redeclare block-scoped variable '${this.id}'`);\n    if (newVariable.isGlobal) {\n      if (this.type.type === Types.BOOLEAN) {\n        const templabel = generator.newLabel();\n        generator.addLabel(compiled.trueLabel);\n        generator.addSetStack(newVariable.position, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiled.falseLabel);\n        generator.addSetStack(newVariable.position, \"0\");\n        generator.addLabel(templabel);\n      }\n      else generator.addSetStack(newVariable.position, compiled.getValue());\n    }\n    else {\n      const temp = generator.newTemporal(); generator.freeTemp(temp);\n      if (this.type.type === Types.BOOLEAN) {\n        const templabel = generator.newLabel();\n        generator.addLabel(compiled.trueLabel);\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiled.falseLabel);\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, \"0\");\n        generator.addLabel(templabel);\n      } else {\n        generator.addExpression(temp, \"p\", newVariable.position, \"+\");\n        generator.addSetStack(temp, compiled.getValue());\n      }\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Instruction } from \"../../../abstract/Instruction\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AssignVariable extends Instruction {\n  private target: Expression;\n  private value: Expression;\n  constructor(target: Expression, value: Expression, line: number, column: number) {\n    super(line, column);\n    this.target = target\n    this.value = value\n  }\n\n  compile(env: Environment): void {\n    //@ts-ignore\n    const target = this.target.compile(env, true);\n    if (target.symbol?.isConst)\n      throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot assign to '${target.symbol.identifier}' because it is a constant.`);\n    const value = this.value.compile(env);\n\n    const generator = Generator.getInstance();\n    const symbol = target.symbol;\n\n    if (!this.sameType(target.type, value.type)) throw new ErrorTS(this.line, this.column, \"Semantical\", `Type '${value.type.type}' is not assignable to type '${target.type.type}'`);\n\n    const ptr = symbol?.isGlobal ? symbol.position : target.getValue()\n    if (target.type.type === Types.BOOLEAN) {\n      const templabel = generator.newLabel();\n      generator.addLabel(value.trueLabel);\n      generator.addSetStack(ptr, \"1\");\n      generator.addGoto(templabel);\n      generator.addLabel(value.falseLabel);\n      generator.addSetStack(ptr, \"0\");\n      generator.addLabel(templabel);\n    }\n    else generator.addSetStack(ptr, value.getValue());\n\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AccessVariable extends Expression {\n  private id: string;\n  private previous: Expression | null\n  constructor(id: string, previous: Expression | null, line: number, column: number) {\n    super(line, column);\n    this.id = id;\n    this.previous = previous\n  }\n  compile(env: Environment, state?: boolean): Return {\n    const generator = Generator.getInstance();\n    let symbol = env.getVariable(this.id);\n    if (symbol == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot find name '${this.id}'`);\n    if (state) {\n      if (symbol.isGlobal) return new Return(symbol.position + \"\", false, symbol.type, symbol);\n      else {\n        const temp = generator.newTemporal();\n        generator.addExpression(temp, \"p\", symbol.position, \"+\");\n        return new Return(temp, true, symbol.type, symbol);\n      }\n    } else {\n      const temp = generator.newTemporal();\n      if (symbol.isGlobal) {\n        generator.addGetStack(temp, symbol.position);\n      }\n      else {\n        const tempAux = generator.newTemporal();\n        generator.freeTemp(tempAux);\n        generator.addExpression(tempAux, \"p\", symbol.position, \"+\");\n        generator.addGetStack(temp, tempAux);\n      }\n      if (symbol.type.type !== Types.BOOLEAN) return new Return(temp, true, symbol.type, symbol);\n      generator.freeTemp(temp);\n      const auxReturn = new Return(\"\", false, symbol.type, symbol);\n      this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n      this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n      generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n      generator.addGoto(this.falseLabel);\n      auxReturn.trueLabel = this.trueLabel;\n      auxReturn.falseLabel = this.falseLabel;\n      return auxReturn;\n    }\n  }\n}\n","import { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { Return } from \"../../../utils/Return\";\nimport { Types } from \"../../../utils/Type\";\n\nexport class AccessFunction extends Expression {\n  private id: string;\n  private params: Array<Expression>\n  constructor(id: string, params: Array<Expression>, line: number, column: number) {\n    super(line, column);\n    this.id = id\n    this.params = params\n  }\n\n  compile(env: Environment): Return {\n    const symbolFunction = env.searchFunction(this.id);\n    if (symbolFunction == null) throw new ErrorTS(this.line, this.column, \"Semantical\", `Cannot find name '${this.id}'`);\n    const paramsValues = new Array<Return>();\n    const generator = Generator.getInstance();\n    const size = generator.saveTemps(env);\n\n    const registeredLength = symbolFunction.params.length;\n    const incomingLength = this.params.length;\n    if (registeredLength !== incomingLength) throw new ErrorTS(this.line, this.column, \"Semantical\", `Expected ${registeredLength} arguments, but got ${incomingLength}`);\n    let i = 0;\n    this.params.forEach((param) => {\n      const compiledParam = param.compile(env);\n      const registeredType = symbolFunction.params[i].type.type;\n      const incomingType = compiledParam.type.type;\n      if (registeredType !== incomingType) throw new ErrorTS(this.line, this.column, \"Semantical\", `Argument of type '${incomingType}' is not assignable to parameter of type '${registeredType}'`);\n      if (incomingType === Types.BOOLEAN) {\n        const temp = generator.newTemporal();\n        generator.freeTemp(temp);\n        const templabel = generator.newLabel();\n        generator.addLabel(compiledParam.trueLabel);\n        generator.addExpression(temp, \"p\", env.size + i + 1, \"+\");\n        generator.addSetStack(temp, \"1\");\n        generator.addGoto(templabel);\n        generator.addLabel(compiledParam.falseLabel);\n        generator.addExpression(temp, \"p\", env.size + i + 1, \"+\");\n        generator.addSetStack(temp, \"0\");\n        generator.addLabel(templabel);\n      }\n      paramsValues.push(compiledParam);\n      i++;\n    });\n    const temp = generator.newTemporal();\n    generator.freeTemp(temp);\n    if (paramsValues.length !== 0) {\n      generator.addExpression(temp, \"p\", env.size + 1, \"+\");\n      paramsValues.forEach((value, index) => {\n        if (value.type.type !== Types.BOOLEAN)\n          generator.addSetStack(temp, value.getValue());\n        if (index !== paramsValues.length - 1)\n          generator.addExpression(temp, temp, \"1\", \"+\");\n      });\n    }\n\n    generator.addNextEnv(env.size);\n    generator.addCall(symbolFunction.id);\n    generator.addGetStack(temp, \"p\");\n    generator.addPrevEnv(env.size);\n    generator.recoverTemps(env, size);\n    generator.addTemp(temp);\n\n    if (symbolFunction.type.type !== Types.BOOLEAN) return new Return(temp, true, symbolFunction.type);\n    const auxReturn = new Return(\"\", false, symbolFunction.type);\n    this.trueLabel = this.trueLabel === \"\" ? generator.newLabel() : this.trueLabel;\n    this.falseLabel = this.falseLabel === \"\" ? generator.newLabel() : this.falseLabel;\n    generator.addIf(temp, \"1\", \"==\", this.trueLabel);\n    generator.addGoto(this.falseLabel);\n    auxReturn.trueLabel = this.trueLabel;\n    auxReturn.falseLabel = this.falseLabel;\n    return auxReturn;\n  }\n}\n","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class DoWhile extends Instruction {\n    private condition: Expression;\n    private instructions: Instruction\n    constructor(condition: Expression, instructions: Instruction, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        generator.addComment('BEGIN doWhile');\n        newEnv.continue = this.condition.trueLabel = generator.newLabel();\n        newEnv.break = this.condition.falseLabel = generator.newLabel();\n        generator.addLabel(this.condition.trueLabel);\n\n        this.instructions.compile(newEnv);\n\n        const condition = this.condition.compile(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END DoWhile');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', 'Condition found not boolean');\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\n\nexport class For extends Instruction {\n    private condition: Expression;\n    private instructions: Instruction\n    constructor(condition: Expression, instructions: Instruction, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instructions = instructions\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        generator.addComment('BEGIN for');\n        //@ts-ignore\n        this.condition.compile(newEnv, this.instructions);\n    }\n\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\nimport { AssignVariable } from \"../variable/AssignVariable\";\nimport { DeclareVariable } from \"../variable/DeclareVariable\";\n\nexport class ForBody extends Instruction {\n    private left: AssignVariable | DeclareVariable\n    private condition: Expression\n    final: Expression\n    constructor(left: AssignVariable | DeclareVariable, condition: Expression, final: Expression, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.condition = condition\n        this.final = final\n    }\n\n    compile(env: Environment, instructions?: Instruction): void {\n        const generator = Generator.getInstance();\n        const lblFor = generator.newLabel();\n        this.left.compile(env);\n        generator.addLabel(lblFor);\n        const condition = this.condition.compile(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            env.break = condition.falseLabel;\n            env.continue = lblFor;\n            generator.addLabel(condition.trueLabel);\n\n            //@ts-ignore\n            instructions.compile(env);\n\n            this.final.compile(env).getValue();\n\n            generator.addGoto(lblFor);\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END for');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Condition found not boolean`);\n    }\n}","import { Environment } from \"./Environment\";\n\nexport enum Natives {\n  concat = 0,\n  concat_str_bool = 1,\n  concat_bool_str = 2,\n  print_str = 3,\n  cmp_str = 4,\n  concat_num_str = 5,\n  concat_str_num = 6,\n}\n\nexport class Generator {\n  private static generator: Generator;\n  private temporal: number;\n  private label: number;\n  private code: string[];\n  private functions: string[];\n  private tempStorage: Set<string>;\n  private natives: boolean[];\n\n  private constructor() {\n    this.temporal = 0;\n    this.label = 0;\n    this.code = [];\n    this.functions = [];\n    this.natives = [];\n    this.clearNatives();\n    this.tempStorage = new Set();\n  }\n\n  private clearNatives() {\n    for (let i = 0; i < this.natives.length; i++) {\n      this.natives[i] = false;;\n    }\n  }\n\n  public static getInstance() {\n    return this.generator || (this.generator = new this());\n  }\n\n  public getTempStorage() {\n    return this.tempStorage;\n  }\n\n  public clearTempStorage() {\n    this.tempStorage.clear();\n  }\n\n  public setTempStorage(tempStorage: Set<string>) {\n    this.tempStorage = tempStorage;\n  }\n\n  public clearCode() {\n    this.temporal = 0;\n    this.label = 0;\n    this.code = [];\n    this.functions = [];\n    this.natives = [];\n    this.clearNatives();\n    this.tempStorage = new Set();\n  }\n\n\n  public saveCode() {\n    return this.code;\n  }\n\n  public clearPrevious() {\n    this.code = [];\n  }\n\n  public setCode(code: string[]) {\n    this.code = code;\n  }\n\n  public addFunction() {\n    this.functions = this.functions.concat(this.code);\n  }\n\n  public addCode(code: string) {\n    this.code.push(code);\n  }\n\n  public getFunctions() {\n    let value = this.getNatives();\n    value += this.functions.join('\\n');\n    return value\n  }\n\n  public getCode(): string {\n    return this.code.join('\\n');\n  }\n\n  public newTemporal(): string {\n    const temp = 'T' + this.temporal++\n    this.tempStorage.add(temp);\n    return temp;\n  }\n\n  public newLabel(): string {\n    return 'L' + this.label++;\n  }\n\n  public getTemporal(): number {\n    return this.temporal\n  }\n\n  public addLabel(label: string) {\n    this.code.push(`${label}:`);\n  }\n\n  public addExpression(target: string, left: any, right: any = '', operator: string = '') {\n    this.code.push(`${target} = ${left} ${operator} ${right};`);\n  }\n\n  public addfmod(target: string, left: any, right: any = '') {\n    this.code.push(`${target} = fmod(${left},${right});`);\n  }\n\n  public addUnary(target: string, left: any,) {\n    this.code.push(`${target} = ${left};`);\n  }\n\n\n  public addGoto(label: string) {\n    this.code.push(`goto ${label};`);\n  }\n\n  public addIf(left: any, right: any, operator: string, label: string) {\n    this.code.push(`if (${left} ${operator} ${right}) goto ${label};`);\n  }\n\n  public nextHeap() {\n    this.code.push('h = h + 1;');\n  }\n\n  public addGetHeap(target: any, index: any) {\n    this.code.push(`${target} = Heap[(int)${index}];`);\n  }\n\n  public addSetHeap(index: any, value: any) {\n    this.code.push(`Heap[(int)${index}] = ${value};`);\n  }\n\n  public addGetStack(target: any, index: any) {\n    this.code.push(`${target} = Stack[(int)${index}];`);\n  }\n\n  public addSetStack(index: any, value: any) {\n    this.code.push(`Stack[(int)${index}] = ${value};`);\n  }\n\n  public addNextEnv(size: number) {\n    this.code.push(`p = p + ${size};`);\n  }\n\n  public addPrevEnv(size: number) {\n    this.code.push(`p = p - ${size};`);\n  }\n\n  public addCall(id: string) {\n    this.code.push(` ${id}();`);\n  }\n\n  public addBegin(id: string) {\n    this.code.push(`\\nvoid ${id}(){`);\n  }\n\n  public addEnd() {\n    this.code.push(`return;\\n}\\n`);\n  }\n\n  public addPrint(format: string, value: any) {\n    this.code.push(`printf(\"%${format}\",${value});`);\n  }\n\n  public addPrintTrue() {\n    this.addPrint('c', 't'.charCodeAt(0));\n    this.addPrint('c', 'r'.charCodeAt(0));\n    this.addPrint('c', 'u'.charCodeAt(0));\n    this.addPrint('c', 'e'.charCodeAt(0));\n  }\n\n  public addPrintFalse() {\n    this.addPrint('c', 'f'.charCodeAt(0));\n    this.addPrint('c', 'a'.charCodeAt(0));\n    this.addPrint('c', 'l'.charCodeAt(0));\n    this.addPrint('c', 's'.charCodeAt(0));\n    this.addPrint('c', 'e'.charCodeAt(0));\n  }\n\n  public addComment(comment: string) {\n    this.code.push(`/***** ${comment} *****/`);\n  }\n\n  public freeTemp(temp: string) {\n    if (this.tempStorage.has(temp)) {\n      this.tempStorage.delete(temp);\n    }\n  }\n\n  public addTemp(temp: string) {\n    if (!this.tempStorage.has(temp))\n      this.tempStorage.add(temp);\n  }\n\n  public saveTemps(enviorement: Environment): number {\n    if (this.tempStorage.size > 0) {\n      const temp = this.newTemporal(); this.freeTemp(temp);\n      let size = 0;\n\n      this.addComment('BEGIN Saving temps');\n      this.addExpression(temp, 'p', enviorement.size, '+');\n      this.tempStorage.forEach((value) => {\n        size++;\n        this.addSetStack(temp, value);\n        if (size !== this.tempStorage.size)\n          this.addExpression(temp, temp, '1', '+');\n      });\n      this.addComment('END Saving temps');\n    }\n    let ptr = enviorement.size;\n    enviorement.size = ptr + this.tempStorage.size;\n    return ptr;\n  }\n\n  public recoverTemps(enviorement: Environment, pos: number) {\n    if (this.tempStorage.size > 0) {\n      const temp = this.newTemporal(); this.freeTemp(temp);\n      let size = 0;\n\n      this.addComment('BEGIN Recovering temps');\n      this.addExpression(temp, 'p', pos, '+');\n      this.tempStorage.forEach((value) => {\n        size++;\n        this.addGetStack(value, temp);\n        if (size !== this.tempStorage.size)\n          this.addExpression(temp, temp, '1', '+');\n      });\n      this.addComment('END Recovering temps');\n      enviorement.size = pos;\n    }\n  }\n\n  public addNative(n: Natives) {\n    this.natives[n] = true;\n  }\n\n  public getNatives(): string {\n    const natives: string[] = [];\n    this.natives.forEach((i, u) => {\n      if (i) {\n        switch (u) {\n          case 0:\n            natives.push(this.native_concat()); break\n          case 1:\n            natives.push(this.native_concat_str_bool()); break;\n          case 2:\n            natives.push(this.native_concat_bool_str()); break;\n          case 3:\n            natives.push(this.native_print_str()); break;\n          case 4:\n            natives.push(this.native_cmp_str()); break;\n          case 5:\n            natives.push(this.native_concat_num_str()); break;\n          case 6:\n            natives.push(this.native_concat_str_num()); break;\n        }\n      }\n    });\n    return natives.join(\"\\n\");\n  }\n\n\n  public native_concat(): string {\n    return `void native_concat()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L3:\n          if (N2 != -1)\n            goto L4;\n          goto L5;\n        L4:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L3;\n        L5:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_str_bool(): string {\n    return `void native_concat_str_bool()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          if (N1 == 1)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = 116;\n          h = h + 1;\n          Heap[(int)h] = 114;\n          h = h + 1;\n          Heap[(int)h] = 117;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n          goto L5;\n        L4:\n          Heap[(int)h] = 102;\n          h = h + 1;\n          Heap[(int)h] = 97;\n          h = h + 1;\n          Heap[(int)h] = 108;\n          h = h + 1;\n          Heap[(int)h] = 115;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n        L5:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_bool_str(): string {\n    return `void native_concat_bool_str()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N3 = h;\n          if (N1 == 1)\n            goto L0;\n          goto L1;\n        L0:\n          Heap[(int)h] = 116;\n          h = h + 1;\n          Heap[(int)h] = 114;\n          h = h + 1;\n          Heap[(int)h] = 117;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n          goto L2;\n        L1:\n          Heap[(int)h] = 102;\n          h = h + 1;\n          Heap[(int)h] = 97;\n          h = h + 1;\n          Heap[(int)h] = 108;\n          h = h + 1;\n          Heap[(int)h] = 115;\n          h = h + 1;\n          Heap[(int)h] = 101;\n          h = h + 1;\n        L2:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L5:\n          if (N2 != -1)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L5;\n        L4:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_print_str(): string {\n    return `void native_print_str()\n        {\n          N0 = p + 0;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          if (N2 != 92)\n            goto L3;\n          goto L4;\n        L4:\n          N3 = N1 + 1;\n          N2 = Heap[(int)N3];\n          if (N2 == -1)\n            goto L2;\n          goto L5;\n        L5:\n          if (N2 == 92)\n            goto L6;\n          goto L7;\n        L7:\n          if (N2 == 34)\n            goto L8;\n          goto L9;\n        L9:\n          if (N2 == 110)\n            goto L10;\n          goto L11;\n        L11:\n          if (N2 == 114)\n            goto L12;\n          goto L13;\n        L13:\n          if (N2 == 116)\n            goto L14;\n          goto L15;\n        L15:\n          N2 = Heap[(int)N1];\n          goto L3;\n        L6:\n          N1 = N1 + 1;\n          N2 = 92;\n          goto L3;\n        L8:\n          N1 = N1 + 1;\n          N2 = 34;\n          goto L3;\n        L10:\n          N1 = N1 + 1;\n          N2 = 10;\n          goto L3;\n        L12:\n          N1 = N1 + 1;\n          N2 = 10;\n          goto L3;\n        L14:\n          N1 = N1 + 1;\n          N2 = 9;\n          goto L3;\n        L3:\n          printf(\"%c\", (int)N2);\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L0;\n        L2:\n          //printf(\"%c\", 10);\n          return;\n        }\\n`\n  }\n\n  public native_cmp_str(): string {\n    return `void native_cmp_str()\n        {\n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        \n          N3 = p + 2;\n          N4 = Stack[(int)N3];\n          N5 = Heap[(int)N4];\n          N6 = 1;\n        L0:\n          if (N2 != -1)\n            goto L1;\n          goto L2;\n        L1:\n          if (N5 != -1)\n            goto L3;\n          goto L5;\n        L3:\n          if (N2 == N5)\n            goto L4;\n          goto L5;\n        L4:\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          N5 = Heap[(int)N1];\n          goto L0;\n        L2:\n          if (N5 == -1)\n            goto L6;\n          goto L5;\n        L5:\n          N6 = 0;\n        L6:\n          Stack[(int)p] = N6;\n          return;\n        }\\n`\n  }\n\n\n  public native_concat_num_str(): string {\n    return `void native_concat_num_str()\n        {\n          N7 = -1;\n          N1 = p + 1;\n          N2 = Stack[(int)N1];\n          N3 = h;\n          if (N2 < 0)\n            goto L0;\n          goto L1;\n        L0:\n          N7 = 45;\n          N2 = 0 - N2;\n        L1:\n          N4 = fmod(N2, 10);\n          N2 = N2 / 10;\n          Heap[(int)h] = N4 + 48;\n          h = h + 1;\n          if (N2 < 1)\n            goto L2;\n          goto L1;\n        L2:\n          N4 = h - N3;\n          N5 = h - N4;\n          N6 = h;\n          N3 = h;\n          if (N7 == 45)\n            goto L3;\n          goto L4;\n        L3:\n          Heap[(int)h] = N7;\n          h = h + 1;\n        L4:\n          if (N5 != N6)\n            goto L5;\n          goto L6;\n        L5:\n          N6 = N6 - 1;\n          N2 = Heap[(int)N6];\n          Heap[(int)h] = N2;\n          h = h + 1;\n          goto L4;\n        L6:\n          N0 = p + 2;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n        \n        L7:\n          if (N2 != -1)\n            goto L8;\n          goto L9;\n        L8:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L7;\n        L9:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n\n  public native_concat_str_num(): string {\n    return `void native_concat_str_num()\n        {\n          N7 = -1;\n          N1 = p + 2;\n          N2 = Stack[(int)N1];\n          N3 = h;\n          if (N2 < 0)\n            goto L0;\n          goto L1;\n        L0:\n          N7 = 45;\n          N2 = 0 - N2;\n        L1:\n          N4 = fmod(N2, 10);\n          N2 = N2 / 10;\n          N4 = N4 + 48;\n          Heap[(int)h] = N4;\n          h = h + 1;\n          if (N2 < 1)\n            goto L2;\n          goto L1;\n        L2:\n          N4 = h - N3;\n          N5 = h - N4;\n          N6 = h;\n        \n          N0 = p + 1;\n          N1 = Stack[(int)N0];\n          N2 = Heap[(int)N1];\n          N3 = h;\n        L3:\n          if (N2 != -1)\n            goto L4;\n          goto L5;\n        L4:\n          Heap[(int)h] = N2;\n          h = h + 1;\n          N1 = N1 + 1;\n          N2 = Heap[(int)N1];\n          goto L3;\n        L5:\n          if (N7 == 45)\n            goto L6;\n          goto L7;\n        L6:\n          Heap[(int)h] = N7;\n          h = h + 1;\n        L7:\n          if (N5 != N6)\n            goto L8;\n          goto L9;\n        L8:\n          N6 = N6 - 1;\n          N2 = Heap[(int)N6];\n          Heap[(int)h] = N2;\n          h = h + 1;\n          goto L7;\n        L9:\n          Heap[(int)h] = -1;\n          h = h + 1;\n          Stack[(int)p] = N3;\n          return;\n        }\\n`\n  }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class If extends Instruction {\n    private condition: Expression\n    private instruction: Instruction\n    private elseIf: Instruction | null\n    constructor(condition: Expression, instruction: Instruction, elseIf: Instruction | null, line: number, column: number) {\n        super(line, column);\n        this.condition = condition\n        this.instruction = instruction\n        this.elseIf = elseIf\n    }\n\n    compile(env: Environment): void {\n        const generator = Generator.getInstance();\n        generator.addComment('BEGIN if');\n        const condition = this.condition?.compile(env); condition.getValue();\n        const newEnv = new Environment(env);\n        if (condition.type.type === Types.BOOLEAN) {\n            generator.addLabel(condition.trueLabel);\n            this.instruction.compile(newEnv);\n            if (this.elseIf !== null) {\n                const tempLbl = generator.newLabel();\n                generator.addGoto(tempLbl);\n                generator.addLabel(condition.falseLabel);\n                this.elseIf.compile(env);\n                generator.addLabel(tempLbl);\n            }\n            else {\n                generator.addLabel(condition.falseLabel);\n            }\n            generator.addComment('END if');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', 'Condition found not boolean');\n    }\n}","import { Instruction } from \"../../../abstract/Instruction\";\nimport { Expression } from \"../../../abstract/Expression\";\nimport { Environment } from \"../../../Environment\";\nimport { Generator } from \"../../../Generator\";\nimport { Types } from \"../../../utils/Type\";\nimport { ErrorTS } from \"../../../utils/Error\";\n\nexport class While extends Instruction {\n\n    constructor(private condition: Expression, private instruction: Instruction, line: number, column: number) {\n        super(line, column);\n    }\n\n    compile(env: Environment) : void{\n        const generator = Generator.getInstance();\n        const newEnv = new Environment(env);\n        const lblWhile = generator.newLabel();\n        generator.addComment('BEGIN while');\n        generator.addLabel(lblWhile);\n        const condition = this.condition.compile(env);\n        if(condition.type.type === Types.BOOLEAN){\n            newEnv.break = condition.falseLabel;\n            newEnv.continue = lblWhile;\n            generator.addLabel(condition.trueLabel);\n\n            this.instruction.compile(newEnv);\n\n            generator.addGoto(lblWhile);\n            generator.addLabel(condition.falseLabel);\n            generator.addComment('END while');\n            return;\n        }\n        throw new ErrorTS(this.line, this.column, 'Semantical', `Condition found not boolean`);\n    }\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar interpreter = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[5,7],$V2=[1,23],$V3=[1,24],$V4=[1,25],$V5=[1,27],$V6=[1,28],$V7=[1,29],$V8=[1,30],$V9=[8,13,25,28,32,36,49,52],$Va=[1,53],$Vb=[1,52],$Vc=[1,51],$Vd=[8,38,53],$Ve=[2,39],$Vf=[1,58],$Vg=[10,18,37,38,39,40,41,42,43,44,45,46,51],$Vh=[18,29];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INICIO\":3,\"GLOBALES\":4,\"EOF\":5,\"DECLARAR_FUNCIONES\":6,\"void\":7,\"id\":8,\"(\":9,\")\":10,\"CUERPO\":11,\"{\":12,\"}\":13,\"INSTRUCCIONES\":14,\"INSTRUCCION\":15,\"LABEL\":16,\"IF\":17,\";\":18,\"GOTO\":19,\"FUNCION\":20,\"EXPRESION\":21,\"PRINT\":22,\"RETURN\":23,\":\":24,\"if\":25,\"VALOR\":26,\"RELATIONAL\":27,\"goto\":28,\"=\":29,\"ARITHMETIC\":30,\"STRUCTURE\":31,\"printf\":32,\"cadena\":33,\",\":34,\"CASTEO\":35,\"return\":36,\"+\":37,\"-\":38,\"*\":39,\"/\":40,\">\":41,\">=\":42,\"<\":43,\"<=\":44,\"==\":45,\"!=\":46,\"float\":47,\"int\":48,\"Stack\":49,\"[\":50,\"]\":51,\"Heap\":52,\"number\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"void\",8:\"id\",9:\"(\",10:\")\",12:\"{\",13:\"}\",18:\";\",24:\":\",25:\"if\",28:\"goto\",29:\"=\",32:\"printf\",33:\"cadena\",34:\",\",36:\"return\",37:\"+\",38:\"-\",39:\"*\",40:\"/\",41:\">\",42:\">=\",43:\"<\",44:\"<=\",45:\"==\",46:\"!=\",47:\"float\",48:\"int\",49:\"Stack\",50:\"[\",51:\"]\",52:\"Heap\",53:\"number\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,5],[11,2],[11,3],[14,2],[14,1],[15,1],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[16,2],[17,8],[19,2],[20,3],[21,5],[21,3],[21,3],[21,3],[22,7],[23,1],[30,1],[30,1],[30,1],[30,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[35,3],[35,3],[35,0],[31,5],[31,5],[26,1],[26,2],[26,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1]\nbreak;\ncase 3:\n$$[$0-1].push($$[$0]);this.$=$$[$0-1];\nbreak;\ncase 4:\nthis.$=[$$[$0]];\nbreak;\ncase 5:\nthis.$=new FunctionC3D($$[$0-4],$$[$0-3],$$[$0],_$[$0-4].first_line, _$[$0-4].first_column)\nbreak;\ncase 6:\nthis.$=[]\nbreak;\ncase 7: case 11: case 12: case 13: case 14: case 15: case 16:\nthis.$=$$[$0-1]\nbreak;\ncase 8:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1];\nbreak;\ncase 9:\nthis.$ = [$$[$0]];\nbreak;\ncase 10: case 27: case 28: case 29: case 30: case 31: case 32: case 33: case 34: case 35: case 36:\nthis.$=$$[$0]\nbreak;\ncase 17:\nthis.$=new Label($$[$0-1],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 18:\nthis.$=new Conditional($$[$0-5],$$[$0-4],$$[$0-3],$$[$0],_$[$0-7].first_line, _$[$0-7].first_column)\nbreak;\ncase 19:\nthis.$=new Goto($$[$0],_$[$0-1].first_line, _$[$0-1].first_column)\nbreak;\ncase 20:\nthis.$=new AccessC3D($$[$0-2],_$[$0-2].first_line, _$[$0-2].first_column)\nbreak;\ncase 21:\nthis.$=new ExpressionC3D(_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-4],$$[$0-2],$$[$0],$$[$0-1])\nbreak;\ncase 22: case 23: case 24:\nthis.$=new ExpressionC3D(_$[$0-2].first_line, _$[$0-2].first_column,$$[$0-2],$$[$0])\nbreak;\ncase 25:\nthis.$=new Print($$[$0-4],$$[$0-1],_$[$0-6].first_line, _$[$0-6].first_column)\nbreak;\ncase 26:\nthis.$=new ReturnC3D(_$[$0].first_line, _$[$0].first_column)\nbreak;\ncase 37: case 38:\nthis.$=$$[$0-2]+$$[$0-1]+$$[$0]\nbreak;\ncase 39:\nthis.$=\"\"\nbreak;\ncase 40: case 41:\nthis.$=$$[$0-4]+\",\"+$$[$0-1]\nbreak;\ncase 42: case 44:\nthis.$ = $$[$0]\nbreak;\ncase 43:\nthis.$ = $$[$0-1]+$$[$0]\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:$V0},{1:[3]},{5:[1,6],6:7,7:$V0},{1:[2,2]},o($V1,[2,4]),{8:[1,8]},{1:[2,1]},o($V1,[2,3]),{9:[1,9]},{10:[1,10]},{11:11,12:[1,12]},o($V1,[2,5]),{8:$V2,13:[1,13],14:14,15:15,16:16,17:17,19:18,20:19,21:20,22:21,23:22,25:$V3,28:$V4,31:26,32:$V5,36:$V6,49:$V7,52:$V8},o($V1,[2,6]),{8:$V2,13:[1,31],15:32,16:16,17:17,19:18,20:19,21:20,22:21,23:22,25:$V3,28:$V4,31:26,32:$V5,36:$V6,49:$V7,52:$V8},o($V9,[2,9]),o($V9,[2,10]),{18:[1,33]},{18:[1,34]},{18:[1,35]},{18:[1,36]},{18:[1,37]},{18:[1,38]},{9:[1,40],24:[1,39],29:[1,41]},{9:[1,42]},{8:[1,43]},{29:[1,44]},{9:[1,45]},{18:[2,26]},{50:[1,46]},{50:[1,47]},o($V1,[2,7]),o($V9,[2,8]),o($V9,[2,11]),o($V9,[2,12]),o($V9,[2,13]),o($V9,[2,14]),o($V9,[2,15]),o($V9,[2,16]),o($V9,[2,17]),{10:[1,48]},{8:$Va,26:49,31:50,38:$Vb,49:$V7,52:$V8,53:$Vc},{8:$Va,26:54,38:$Vb,53:$Vc},{18:[2,19]},{8:$Va,26:55,38:$Vb,53:$Vc},{33:[1,56]},o($Vd,$Ve,{35:57,9:$Vf}),o($Vd,$Ve,{35:59,9:$Vf}),{18:[2,20]},{18:[2,22],30:60,37:[1,61],38:[1,62],39:[1,63],40:[1,64]},{18:[2,23]},o($Vg,[2,42]),{53:[1,65]},o($Vg,[2,44]),{27:66,41:[1,67],42:[1,68],43:[1,69],44:[1,70],45:[1,71],46:[1,72]},{18:[2,24]},{34:[1,73]},{8:$Va,26:74,38:$Vb,53:$Vc},{47:[1,75],48:[1,76]},{8:$Va,26:77,38:$Vb,53:$Vc},{8:$Va,26:78,38:$Vb,53:$Vc},o($Vd,[2,27]),o($Vd,[2,28]),o($Vd,[2,29]),o($Vd,[2,30]),o($Vg,[2,43]),{8:$Va,26:79,38:$Vb,53:$Vc},o($Vd,[2,31]),o($Vd,[2,32]),o($Vd,[2,33]),o($Vd,[2,34]),o($Vd,[2,35]),o($Vd,[2,36]),o($Vd,$Ve,{35:80,9:$Vf}),{51:[1,81]},{10:[1,82]},{10:[1,83]},{51:[1,84]},{18:[2,21]},{10:[1,85]},{8:$Va,26:86,38:$Vb,53:$Vc},o($Vh,[2,40]),o($Vd,[2,37]),o($Vd,[2,38]),o($Vh,[2,41]),{28:[1,87]},{10:[1,88]},{8:[1,89]},{18:[2,25]},{18:[2,18]}],\ndefaultActions: {3:[2,2],6:[2,1],28:[2,26],43:[2,19],48:[2,20],50:[2,23],55:[2,24],78:[2,21],88:[2,25],89:[2,18]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n    const {FunctionC3D} = require('../interpreter/instruction/Function');\n    const {Conditional} = require('../interpreter/instruction/Conditional');\n    const {Label} = require('../interpreter/instruction/Label');\n    const {Goto} = require('../interpreter/instruction/Goto');\n    const {AccessC3D} = require('../interpreter/instruction/Access');\n    const {Print} = require('../interpreter/instruction/Print');\n    const {ReturnC3D} = require('../interpreter/instruction/Return');\n    const {ExpressionC3D} = require('../interpreter/instruction/Expression');\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// ignora los espacios en blanco\nbreak;\ncase 1:// comentario de linea\nbreak;\ncase 2:// comentario de multiples lineas\t\nbreak;\ncase 3:return 53\nbreak;\ncase 4:return 'double'\nbreak;\ncase 5:return 7\nbreak;\ncase 6:return 48\nbreak;\ncase 7:return 47\nbreak;\ncase 8:return \"return\"\nbreak;\ncase 9:return \"if\";\nbreak;\ncase 10:return \"goto\";\nbreak;\ncase 11:return \"Stack\";\nbreak;\ncase 12:return \"Heap\";\nbreak;\ncase 13:return \"printf\"\nbreak;\ncase 14:return \",\"\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return \";\";\nbreak;\ncase 17:return 12;\nbreak;\ncase 18:return 13;\nbreak;\ncase 19:return 9;\nbreak;\ncase 20:return 10;\nbreak;\ncase 21:return 50\nbreak;\ncase 22:return 51                   \nbreak;\ncase 23:return 44;\nbreak;\ncase 24:return 42;\nbreak;\ncase 25:return 45;\nbreak;\ncase 26:return 46;\nbreak;\ncase 27:return 37;\nbreak;\ncase 28:return 38;\nbreak;\ncase 29:return 39;\nbreak;\ncase 30:return 40;\nbreak;\ncase 31:return 43;\nbreak;\ncase 32:return 41;\nbreak;\ncase 33:return 29;\nbreak;\ncase 34: yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 33; \nbreak;\ncase 35:return 8;\nbreak;\ncase 36:return 5;\nbreak;\ncase 37:return 'ERROR'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:[/][*][^*]*[*]+([^/*][^*]*[*]+)*[/])/,/^(?:(([0-9]+)(\\.([0-9]+))?))/,/^(?:double\\b)/,/^(?:void\\b)/,/^(?:int\\b)/,/^(?:float\\b)/,/^(?:return\\b)/,/^(?:if\\b)/,/^(?:goto\\b)/,/^(?:Stack\\b)/,/^(?:Heap\\b)/,/^(?:printf\\b)/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:<=)/,/^(?:>=)/,/^(?:==)/,/^(?:!=)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:<)/,/^(?:>)/,/^(?:=)/,/^(?:\"([^\\\\\\\"]|\\\\.)*\")/,/^(?:([a-zA-Z_])[a-zA-Z0-9_]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = interpreter;\nexports.Parser = interpreter.Parser;\nexports.parse = function () { return interpreter.parse.apply(interpreter, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class Conditional extends InstructionC3D {\n\n    private left: string\n    private relational: string\n    private right: string\n    private label: string\n\n    constructor(left: string, relational: string, right: string, label: string, line: number, column: number) {\n        super(line, column);\n        this.left = left\n        this.right = right\n        this.relational = relational\n        this.label = label\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        const result = interpreter.evaluateConditional(this.left, this.relational, this.right)\n        return {\n            type: Type.GOTO, content: { goto: result, label: this.label }\n        }\n    }\n    public getDestination() {\n        return this.label;\n    }\n\n    public getLeft() {\n        return this.left;\n    }\n    public getRight() {\n        return this.right;\n    }\n    public getRelational() {\n        return this.relational;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class Goto extends InstructionC3D {\n    private label: string\n    constructor(label: string, line: number, column: number) {\n        super(line, column);\n        this.label = label\n    }\n\n    debug() {\n        return {\n            type: Type.GOTO, content: { goto: true, label: this.label }\n        }\n    }\n\n    public getDestination() {\n        return this.label;\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from \"../Interpreter\";\n\nexport class AccessC3D extends InstructionC3D {\n    private id\n    constructor(id: string, line: number, column: number) {\n        super(line, column);\n        this.id = id\n    }\n\n    debug() {\n        return { type: Type.ACCESS, content: this.id }\n    }\n\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class Print extends InstructionC3D {\n    private str: string\n    private value: string\n    constructor(str: string, value: string, line: number, column: number) {\n        super(line, column);\n        this.str = str\n        this.value = value\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        interpreter.setOutput(this.str, this.value)\n        return { type: Type.CONSOLE }\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Type } from '../Interpreter'\nexport class ReturnC3D extends InstructionC3D {\n\n    debug() {\n        return { type: Type.RETURN }\n    }\n}","import { InstructionC3D } from \"../Abstract/Instruction\";\nimport { Interpreter, Type } from \"../Interpreter\";\n\nexport class ExpressionC3D extends InstructionC3D {\n\n    private target: string;\n    private left: string;\n    private right: string;\n    private op: string\n\n    constructor(line: number, column: number, target: string, left: string, right: string = '', op: string = '') {\n        super(line, column);\n        this.target = target\n        this.left = left\n        this.right = right\n        this.op = op\n    }\n\n    debug() {\n        const interpreter = Interpreter.getInstance()\n        interpreter.evaluateExpresssion(this.target, this.left, this.right, this.op)\n        return { type: Type.EXPRESSION }\n    }\n}","import { Instruction } from \"./abstract/Instruction\";\nimport { DeclareFunction } from \"./actions/instruction/function/DeclareFunction\";\nimport { Environment } from \"./Environment\";\nimport { Generator } from \"./Generator\";\nimport { Logs } from \"./utils/LogArray\";\nconst parser = require(\"../grammar/grammar\");\n\nexport class Compiler {\n  private code: string\n  private output: string\n  constructor(code: string) {\n    this.code = code\n    this.output = ''\n  }\n  compile() {\n    Logs.length = 0\n    let node;\n    try {\n      node = parser.parse(this.code);\n    } catch (error) {\n      Logs.push(error)\n      return { state: false, message: 'There was an error while parsing your input!' };\n    }\n    const generator = Generator.getInstance();\n    generator.clearCode();\n    const env = new Environment(null);\n    try {\n      node.forEach((e: Instruction) => {\n        if (e instanceof DeclareFunction) e.compile(env);\n      });\n      generator.addBegin(\"main\");\n      node.forEach((e: Instruction) => {\n        e.compile(env);\n      });\n      generator.addEnd();\n    } catch (error) {\n      Logs.push(error)\n      return { state: false, message: 'There was an error while generating your TAC!' };\n    }\n    const functions = generator.getFunctions();\n    const code = generator.getCode();\n    /*\n    Uncomment if want to add temporals to output.\n    const labelCount = generator.getTemporal();\n    this.code = this.header(labelCount - 1) + functions + code;\n    */\n    this.output = functions + code;\n    return { state: true, message: 'TAC generated successfully!' };\n  }\n  getOutput() {\n    return this.output;\n  }\n  private header(n: number) {\n    let header =\n      \"#include <stdio.h>\\n\" +\n      \"#include <math.h> \\n\" +\n      \"double Heap[170720]; \\n\" +\n      \"double Stack[170720];\\n\" +\n      \"double p;\\n\" +\n      \"double h;\\n\" +\n      \"double N0,N1,N2,N3,N4,N5,N6,N7;\\n\";\n    header += n > -1 ? \"double \" + this.setTemp(n) : \"\";\n    return header;\n  }\n  private setTemp(n: number) {\n    let i = 0;\n    let header = \"\";\n    while (i <= n) {\n      header += \"T\" + i;\n      if (i !== n) header += \", \";\n      else header += \";\\n\";\n      i++;\n    }\n    return header;\n  }\n}\n\nexport default Compiler;\n","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/webpack-resolver\";\n\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\n\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport Compiler from \"../../compiler/Compiler\";\nimport Beautify from \"ace-builds/src-noconflict/ext-beautify\";\nimport \"./Home.css\";\nimport { Interpreter } from \"../../interpreter/Interpreter\";\nimport { BsGearWideConnected } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Logs } from \"../../compiler/utils/LogArray\";\nimport { ErrorTS } from \"../../compiler/utils/Error\";\n\nconst INITIAL_CODE = `\n  // Uncomment the following lines\n  // to get a look at the built-in console:\n  // const greeting:string = \"Hello World!\";\n  // console.log(greeting);\n`\n\ninterface IProps { }\n\ninterface IState {\n  input: string;\n  output: string;\n  currentLine: number;\n  isDebugging: boolean;\n  stack: number[];\n  heap: number[];\n  variables: Map<string, number>;\n  console: string;\n  resized: boolean;\n  canMoveForward: boolean;\n}\n\nexport class Home extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      input: INITIAL_CODE,\n      output: \"\",\n      currentLine: 0,\n      isDebugging: false,\n      stack: [],\n      heap: [],\n      console: \"\",\n      variables: new Map(),\n      resized: false,\n      canMoveForward: false,\n    };\n  }\n\n  sleep = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  handleCompile = async () => {\n    const { input } = this.state;\n    if (!input) {\n      toast.warning(\"Input editor is empty!\");\n      return;\n    }\n    const compiler = new Compiler(input);\n    const result = compiler.compile();\n    const { state, message } = result;\n    if (!state) {\n      toast.error(message);\n      Logs.forEach((e: ErrorTS) => {\n        toast.error(e.toString());\n      })\n      return;\n    }\n    toast.success(message);\n    const output = compiler.getOutput();\n\n    this.setState({ output, isDebugging: false });\n    await this.sleep(0.01);\n    this.handleBeautify(true);\n  };\n\n  handleDebug = () => {\n    let { isDebugging, canMoveForward } = this.state;\n    if (!canMoveForward) {\n      if (isDebugging) {\n        toast.warning(`You've reached the end, please, start again`);\n      } else {\n        toast.warning(`First, you must start debbuging!`);\n      }\n      return;\n    }\n    const interpreter = Interpreter.getInstance();\n    const currentLine = interpreter.goForward() - 1;\n    const hasEnded = interpreter.getEnd();\n    const console = interpreter.getConsole();\n    const sessionRef = this.refs.output;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    editor.scrollToLine(currentLine, true, true, function () { });\n    if (hasEnded) {\n      isDebugging = !isDebugging;\n      canMoveForward = !canMoveForward;\n    }\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      currentLine,\n      console,\n      isDebugging,\n      canMoveForward,\n    });\n  };\n\n  handleEnd = () => {\n    let { isDebugging, canMoveForward } = this.state;\n    if (!canMoveForward) {\n      if (isDebugging) {\n        toast.warning(`You've reached the end, please, start again`);\n      } else {\n        toast.warning(`First, you must start debbuging!`);\n      }\n      return;\n    }\n    isDebugging = !isDebugging;\n    canMoveForward = !canMoveForward;\n    const interpreter = Interpreter.getInstance();\n    const currentLine = interpreter.finishExecution() - 1\n    const console = interpreter.getConsole();\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      currentLine,\n      console,\n      isDebugging,\n      canMoveForward,\n    });\n  };\n\n  handleStart = () => {\n    const { output } = this.state;\n    if (!output) {\n      toast.warning(\"Output editor is empty!\");\n      return;\n    }\n    const interpreter = Interpreter.getInstance();\n    const { line, state, message } = interpreter.restart(output);\n    if (!state) {\n      toast.error(message);\n      return;\n    }\n    const sessionRef = this.refs.output;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    editor.scrollToLine(line - 1, true, true, function () { });\n    let { isDebugging, canMoveForward } = this.state;\n    canMoveForward = isDebugging ? false : true;\n    this.setState({\n      stack: interpreter.getStack(),\n      heap: interpreter.getHeap(),\n      variables: interpreter.getVariables(),\n      isDebugging: !isDebugging,\n      currentLine: line - 1,\n      canMoveForward,\n      console: \"\",\n    });\n  };\n\n  handleInput = (e: any) => {\n    this.setState({ input: e });\n  };\n  handleOutput = (e: any) => {\n    this.setState({ output: e });\n  };\n  handleLine = () => {\n    this.setState({ currentLine: this.state.currentLine + 1 });\n  };\n  handleBeautify = async (origin: boolean) => {\n    const sessionRef = origin ? this.refs.output : this.refs.input;\n    //@ts-ignore\n    const editor = sessionRef.editor;\n    Beautify.beautify(editor.session);\n    const content = editor.getSession().getValue();\n    origin\n      ? this.setState({ output: content })\n      : this.setState({ input: content });\n  };\n\n  render() {\n    let { heap, stack, isDebugging, variables, canMoveForward } = this.state;\n    const renderStack = stack.map((e, u) => {\n      return (\n        <tr>\n          <td>{u} </td>\n          <td>{e}</td>\n        </tr>\n      );\n    });\n\n    const renderHeap = heap.map((e, u) => {\n      return (\n        <tr>\n          <td>{u} </td>\n          <td>{e}</td>\n        </tr>\n      );\n    });\n    const renderVariables = Array.from(variables.keys()).map((key) => {\n      return (\n        <tr>\n          <td>{key} </td>\n          <td>{variables.get(key)}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <>\n        <nav>\n          <h1>TAC demo</h1>\n          <ul>\n            <li>\n              <a href=\"https://github.com/einjunge99/mistery-box\">\n                Code avaiable here\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div>\n            <div className=\"compile-title\" onClick={this.handleCompile}>\n              <h2>\n                Compile <BsGearWideConnected className=\"gear-icon\" />\n              </h2>\n            </div>\n            <div className=\"options\">\n              <div className=\"start-title\" onClick={this.handleStart}>\n                {isDebugging ? \"Restart\" : \"Start\"}\n              </div>\n              <div\n                style={canMoveForward ? { opacity: 1 } : { opacity: 0.4 }}\n                className=\"forward-title\"\n                onClick={this.handleDebug}\n              >\n                Next Line\n              </div>\n              <div\n                style={canMoveForward ? { opacity: 1 } : { opacity: 0.4 }}\n                className=\"forward-title\"\n                onClick={this.handleEnd}\n              >\n                End Execution\n              </div>\n            </div>\n            <div className=\"content-container\">\n              <div className=\"ace-container\">\n                <AceEditor\n                  ref=\"input\"\n                  width=\"500px\"\n                  height=\"400px\"\n                  mode=\"typescript\"\n                  theme=\"twilight\"\n                  showPrintMargin={false}\n                  value={this.state.input}\n                  onChange={this.handleInput}\n                  highlightActiveLine={true}\n                  editorProps={{ $blockScrolling: true }}\n                  commands={[\n                    {\n                      name: \"beautify\",\n                      bindKey: { win: \"shift-Alt-f\", mac: \"shift-Alt-f\" },\n                      exec: () => this.handleBeautify(false),\n                    },\n                  ]}\n                />\n                <AceEditor\n                  ref=\"output\"\n                  mode=\"c_cpp\"\n                  theme=\"twilight\"\n                  width=\"500px\"\n                  height=\"400px\"\n                  onChange={this.handleOutput}\n                  showPrintMargin={false}\n                  value={this.state.output}\n                  highlightActiveLine={true}\n                  editorProps={{ $blockScrolling: true }}\n                  markers={[\n                    {\n                      startRow: this.state.currentLine,\n                      startCol: 0,\n                      endRow: this.state.currentLine,\n                      endCol: 100,\n                      className: \"replacement_marker\",\n                      type: \"text\",\n                    },\n                  ]}\n                />\n              </div>\n              <div>\n                <div className=\"structure-wrapper example\">\n                  <table className=\"structure-table\">\n                    <caption>Stack</caption>\n                    <thead>\n                      <tr>\n                        <th>i</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderStack}</tbody>\n                  </table>\n                </div>\n              </div>\n              <div>\n                <div className=\"structure-wrapper example\">\n                  <table className=\"structure-table\">\n                    <caption>Heap</caption>\n                    <thead>\n                      <tr>\n                        <th>i</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderHeap}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div className=\"content-container\">\n              <AceEditor\n                mode=\"typescript\"\n                theme=\"tomorrow\"\n                width=\"1000px\"\n                height=\"200px\"\n                showPrintMargin={false}\n                value={this.state.console}\n                highlightActiveLine={true}\n                editorProps={{ $blockScrolling: true }}\n                markers={[\n                  {\n                    startRow: this.state.currentLine,\n                    startCol: 0,\n                    endRow: this.state.currentLine,\n                    endCol: 100,\n                    className: \"replacement_marker\",\n                    type: \"text\",\n                  },\n                ]}\n              />\n              <div>\n                <div className=\"variable-wrapper example\">\n                  <table className=\"variable-table\">\n                    <caption>Variables</caption>\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Value</th>\n                      </tr>\n                    </thead>\n                    <tbody>{renderVariables}</tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ToastContainer />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from \"./views/Home/Home\";\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","\nexport class ErrorTS {\n    public line: number;\n    public column: number;\n    public type: string;\n    public description: string\n    constructor(line: number, column: number, type: string, description: string) {\n        this.line = line\n        this.column = column\n        this.type = type\n        this.description = description\n    }\n\n    public toString(): string {\n        return `[ERR]: ${this.type}, ${this.description} (line: ${this.line}, column:${this.column})\\n`;\n    }\n}","\nimport { Symbol } from \"../symbol/Symbol\";\nimport { Generator } from \"../Generator\";\nimport { Type } from \"./Type\";\n\nexport class Return {\n  trueLabel: string;\n  falseLabel: string;\n  value: string;\n  isTemp: boolean;\n  type: Type\n  symbol: Symbol | null\n  constructor(value: string, isTemp: boolean, type: Type, symbol: Symbol | null = null) {\n    this.trueLabel = this.falseLabel = \"\";\n    this.value = value;\n    this.isTemp = isTemp;\n    this.type = type;\n    this.symbol = symbol\n  }\n\n  getValue() {\n    Generator.getInstance().freeTemp(this.value);\n    return this.value;\n  }\n}\n"],"sourceRoot":""}